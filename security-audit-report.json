{
  "timestamp": "2025-10-26T17:56:00.063Z",
  "scanResults": {
    "files": 839,
    "lines": 310927,
    "issues": 6,
    "warnings": 10,
    "info": 1572
  },
  "securityScore": 0,
  "issues": [
    {
      "type": "XSS_RISK",
      "file": "src/components/admin/EmailManagement.tsx",
      "line": 184,
      "message": "document.write() detected (XSS risk)",
      "severity": "HIGH",
      "recommendation": "Avoid document.write() as it can introduce XSS vulnerabilities",
      "content": "preview.document.write(`"
    },
    {
      "type": "DANGEROUS_EVAL",
      "file": "scripts/security-scan-comprehensive.js",
      "line": 79,
      "message": "Use of eval() detected",
      "severity": "HIGH",
      "recommendation": "Avoid using eval() as it can execute arbitrary code",
      "content": "{ pattern: /eval\\s*\\(/g, type: 'eval() Usage', severity: 'HIGH' }"
    },
    {
      "type": "DANGEROUS_EVAL",
      "file": "scripts/security-scan.js",
      "line": 53,
      "message": "Use of eval() detected",
      "severity": "HIGH",
      "recommendation": "Avoid using eval() as it can execute arbitrary code",
      "content": "if (content.includes('eval(') || content.includes('new Function(')) {"
    },
    {
      "type": "HARDCODED_PASSWORD",
      "file": "scripts/seed-preview-data.ts",
      "line": 146,
      "message": "Hardcoded password detected",
      "severity": "HIGH",
      "recommendation": "Remove hardcoded passwords and use environment variables",
      "content": "password: 'preview123',"
    },
    {
      "type": "HARDCODED_PASSWORD",
      "file": "scripts/seed-staging-data.ts",
      "line": 372,
      "message": "Hardcoded password detected",
      "severity": "HIGH",
      "recommendation": "Remove hardcoded passwords and use environment variables",
      "content": "password: 'staging123!',"
    },
    {
      "type": "HARDCODED_PASSWORD",
      "file": "scripts/seed-staging-data.ts",
      "line": 423,
      "message": "Hardcoded password detected",
      "severity": "HIGH",
      "recommendation": "Remove hardcoded passwords and use environment variables",
      "content": "password: 'client123!',"
    }
  ],
  "warnings": [
    {
      "type": "SENSITIVE_FILE",
      "message": "Sensitive files found: ./.env",
      "severity": "HIGH",
      "recommendation": "Ensure sensitive files are properly secured and not committed to version control"
    },
    {
      "type": "SENSITIVE_FILE",
      "message": "Sensitive files found: ./.env.production",
      "severity": "HIGH",
      "recommendation": "Ensure sensitive files are properly secured and not committed to version control"
    },
    {
      "type": "SENSITIVE_FILE",
      "message": "Sensitive files found: ./monitoring/status-page/config.json",
      "severity": "HIGH",
      "recommendation": "Ensure sensitive files are properly secured and not committed to version control"
    },
    {
      "type": "XSS_RISK",
      "file": "src/test/setup-global.ts",
      "line": 337,
      "message": "innerHTML assignment detected (XSS risk)",
      "severity": "MEDIUM",
      "recommendation": "Use textContent or sanitize HTML before assignment",
      "content": "document.body.innerHTML = '';"
    },
    {
      "type": "XSS_RISK",
      "file": "src/utils/accessibility.test.ts",
      "line": 26,
      "message": "innerHTML assignment detected (XSS risk)",
      "severity": "MEDIUM",
      "recommendation": "Use textContent or sanitize HTML before assignment",
      "content": "document.body.innerHTML = '';"
    },
    {
      "type": "XSS_RISK",
      "file": "src/utils/accessibility.test.ts",
      "line": 55,
      "message": "innerHTML assignment detected (XSS risk)",
      "severity": "MEDIUM",
      "recommendation": "Use textContent or sanitize HTML before assignment",
      "content": "document.body.innerHTML = `"
    },
    {
      "type": "XSS_RISK",
      "file": "src/utils/accessibility.test.ts",
      "line": 158,
      "message": "innerHTML assignment detected (XSS risk)",
      "severity": "MEDIUM",
      "recommendation": "Use textContent or sanitize HTML before assignment",
      "content": "document.body.innerHTML = `"
    },
    {
      "type": "XSS_RISK",
      "file": "src/utils/accessibility.test.ts",
      "line": 168,
      "message": "innerHTML assignment detected (XSS risk)",
      "severity": "MEDIUM",
      "recommendation": "Use textContent or sanitize HTML before assignment",
      "content": "document.body.innerHTML = `"
    },
    {
      "type": "XSS_RISK",
      "file": "src/utils/accessibility.test.ts",
      "line": 179,
      "message": "innerHTML assignment detected (XSS risk)",
      "severity": "MEDIUM",
      "recommendation": "Use textContent or sanitize HTML before assignment",
      "content": "document.body.innerHTML = `"
    },
    {
      "type": "XSS_RISK",
      "file": "src/utils/accessibility.test.ts",
      "line": 192,
      "message": "innerHTML assignment detected (XSS risk)",
      "severity": "MEDIUM",
      "recommendation": "Use textContent or sanitize HTML before assignment",
      "content": "document.body.innerHTML = `"
    },
    {
      "type": "XSS_RISK",
      "file": "src/utils/accessibility.test.ts",
      "line": 238,
      "message": "innerHTML assignment detected (XSS risk)",
      "severity": "MEDIUM",
      "recommendation": "Use textContent or sanitize HTML before assignment",
      "content": "document.body.innerHTML = `"
    },
    {
      "type": "XSS_RISK",
      "file": "src/utils/accessibility.ts",
      "line": 460,
      "message": "innerHTML assignment detected (XSS risk)",
      "severity": "MEDIUM",
      "recommendation": "Use textContent or sanitize HTML before assignment",
      "content": "skipLinkContainer.innerHTML = skipLinkHtml;"
    },
    {
      "type": "XSS_RISK",
      "file": "src/utils/errorHandling.ts",
      "line": 289,
      "message": "innerHTML assignment detected (XSS risk)",
      "severity": "MEDIUM",
      "recommendation": "Use textContent or sanitize HTML before assignment",
      "content": "notification.innerHTML = `"
    },
    {
      "type": "SECURITY_HEADERS",
      "message": "Security headers not configured in vite.config.ts",
      "severity": "MEDIUM",
      "recommendation": "Implement security headers including CSP, HSTS, etc."
    }
  ],
  "info": [
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/EnhancedLanguageSwitcher.tsx",
      "line": 78,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.warn('Country detection failed:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/EnhancedLanguageSwitcher.tsx",
      "line": 150,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to change language:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/LanguageSwitcher.tsx",
      "line": 101,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to change language:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/NewsletterSignup.tsx",
      "line": 62,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error sending welcome email:', emailError);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/ReliabilityDashboard.tsx",
      "line": 74,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to fetch dashboard data:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/admin/AdvancedAnalytics.tsx",
      "line": 163,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error loading analytics:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/admin/AutomationRulesEngine.tsx",
      "line": 157,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error fetching automation rules:', error)"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/admin/AutomationRulesEngine.tsx",
      "line": 209,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error saving rule:', error)"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/admin/AutomationRulesEngine.tsx",
      "line": 235,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error deleting rule:', error)"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/admin/AutomationRulesEngine.tsx",
      "line": 261,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error toggling rule:', error)"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/admin/AutomationRulesEngine.tsx",
      "line": 293,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error duplicating rule:', error)"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/admin/BookingAnalyticsDashboard.tsx",
      "line": 182,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to load analytics data:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/admin/BookingAnalyticsDashboard.tsx",
      "line": 201,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error loading revenue analytics:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/admin/BookingAnalyticsDashboard.tsx",
      "line": 217,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error loading service performance:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/admin/BookingAnalyticsDashboard.tsx",
      "line": 233,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error loading client segments:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/admin/BookingAnalyticsDashboard.tsx",
      "line": 249,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error loading time slot analytics:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/admin/BookingAnalyticsDashboard.tsx",
      "line": 265,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error loading predictive analytics:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/admin/BookingAnalyticsDashboard.tsx",
      "line": 281,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error loading summary metrics:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/admin/BookingAnalyticsDashboard.tsx",
      "line": 315,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error exporting data:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/admin/BookingConflictResolver.tsx",
      "line": 150,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error loading conflicts:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/admin/BookingConflictResolver.tsx",
      "line": 164,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error loading templates:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/admin/BookingConflictResolver.tsx",
      "line": 186,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error generating solutions:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/admin/BookingConflictResolver.tsx",
      "line": 212,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error resolving conflict:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/admin/BookingConflictResolver.tsx",
      "line": 242,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error resolving bulk conflicts:', error);"
    },
    {
      "type": "CODE_COMMENT",
      "file": "src/components/admin/CampaignManager.tsx",
      "line": 194,
      "message": "Development comment detected",
      "severity": "INFO",
      "recommendation": "Address TODO/FIXME comments before production",
      "content": "// TODO: Implement actual API call"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/admin/CampaignManager.tsx",
      "line": 217,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to create campaign:', error)"
    },
    {
      "type": "CODE_COMMENT",
      "file": "src/components/admin/CampaignManager.tsx",
      "line": 226,
      "message": "Development comment detected",
      "severity": "INFO",
      "recommendation": "Address TODO/FIXME comments before production",
      "content": "// TODO: Implement actual API call"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/admin/CampaignManager.tsx",
      "line": 236,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to launch campaign:', error)"
    },
    {
      "type": "CODE_COMMENT",
      "file": "src/components/admin/CampaignManager.tsx",
      "line": 242,
      "message": "Development comment detected",
      "severity": "INFO",
      "recommendation": "Address TODO/FIXME comments before production",
      "content": "// TODO: Implement actual API call"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/admin/CampaignManager.tsx",
      "line": 252,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to pause campaign:', error)"
    },
    {
      "type": "CODE_COMMENT",
      "file": "src/components/admin/CampaignManager.tsx",
      "line": 258,
      "message": "Development comment detected",
      "severity": "INFO",
      "recommendation": "Address TODO/FIXME comments before production",
      "content": "// TODO: Implement actual API call"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/admin/CampaignManager.tsx",
      "line": 268,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to stop campaign:', error)"
    },
    {
      "type": "CODE_COMMENT",
      "file": "src/components/admin/CampaignManager.tsx",
      "line": 278,
      "message": "Development comment detected",
      "severity": "INFO",
      "recommendation": "Address TODO/FIXME comments before production",
      "content": "// TODO: Implement actual API call"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/admin/CampaignManager.tsx",
      "line": 286,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to delete campaign:', error)"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/admin/CapacityManagement.tsx",
      "line": 66,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to load services:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/admin/CapacityManagement.tsx",
      "line": 116,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to load analytics:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/admin/CityManagement.tsx",
      "line": 79,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error loading cities:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/admin/CityManagement.tsx",
      "line": 109,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error creating city:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/admin/CityManagement.tsx",
      "line": 143,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error updating city:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/admin/CityManagement.tsx",
      "line": 165,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error deleting city:', error);"
    },
    {
      "type": "CODE_COMMENT",
      "file": "src/components/admin/CommunicationAnalytics.tsx",
      "line": 121,
      "message": "Development comment detected",
      "severity": "INFO",
      "recommendation": "Address TODO/FIXME comments before production",
      "content": "// TODO: Replace with actual API call"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/admin/CommunicationAnalytics.tsx",
      "line": 199,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to fetch analytics:', error)"
    },
    {
      "type": "CODE_COMMENT",
      "file": "src/components/admin/CommunicationAnalytics.tsx",
      "line": 239,
      "message": "Development comment detected",
      "severity": "INFO",
      "recommendation": "Address TODO/FIXME comments before production",
      "content": "// TODO: Implement actual export functionality"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/admin/CommunicationAnalytics.tsx",
      "line": 240,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('Exporting analytics data...')"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/admin/CommunicationAnalyticsDashboard.tsx",
      "line": 199,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error fetching analytics:', error)"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/admin/CommunicationManagement.tsx",
      "line": 80,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error loading stats:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/admin/CommunicationManagement.tsx",
      "line": 91,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error loading logs:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/admin/ComplianceManagement.tsx",
      "line": 130,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error loading data:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/admin/ComplianceManagement.tsx",
      "line": 158,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error creating requirement:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/admin/ComplianceManagement.tsx",
      "line": 186,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error creating tax config:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/admin/DepositManagement.tsx",
      "line": 121,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to load analytics:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/admin/DepositManagement.tsx",
      "line": 130,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to load rules:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/admin/DepositManagement.tsx",
      "line": 160,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to load transactions:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/admin/DepositManagement.tsx",
      "line": 191,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to save rule:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/admin/DepositManagement.tsx",
      "line": 201,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to delete rule:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/admin/EmailManagement.tsx",
      "line": 62,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error loading subscribers:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/admin/ExperimentAnalytics.tsx",
      "line": 95,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error(\"Error loading experiment data:\", error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/admin/FeatureFlags.tsx",
      "line": 111,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error(\"Error loading feature flags:\", error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/admin/FeatureFlags.tsx",
      "line": 132,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error(\"Error loading flag stats:\", error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/admin/FeatureFlags.tsx",
      "line": 157,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error(\"Error loading experiment stats:\", error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/admin/FeatureFlags.tsx",
      "line": 172,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error(\"Error loading audit logs:\", error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/admin/FeatureFlags.tsx",
      "line": 198,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error(\"Error creating feature flag:\", error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/admin/FeatureFlags.tsx",
      "line": 225,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error(\"Error updating feature flag:\", error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/admin/FeatureFlags.tsx",
      "line": 262,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error(\"Error deleting feature flag:\", error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/admin/FeatureFlags.tsx",
      "line": 312,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error(\"Error creating experiment:\", error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/admin/GiftCardAdmin.tsx",
      "line": 75,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error loading gift card data:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/admin/GiftCardAdmin.tsx",
      "line": 86,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error loading transactions:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/admin/GiftCardAdmin.tsx",
      "line": 101,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error updating gift card status:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/admin/GiftCardAdmin.tsx",
      "line": 108,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('Resend email for gift card:', giftCardId);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/admin/GiftCardAdmin.tsx",
      "line": 110,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error resending email:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/admin/LocationManagement.tsx",
      "line": 106,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error loading locations:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/admin/LocationManagement.tsx",
      "line": 124,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error loading cities:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/admin/LocationManagement.tsx",
      "line": 151,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error creating location:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/admin/LocationManagement.tsx",
      "line": 184,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error updating location:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/admin/LocationManagement.tsx",
      "line": 206,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error deleting location:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/admin/LocationManagement.tsx",
      "line": 282,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error getting coordinates:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/admin/MonitoringDashboard.tsx",
      "line": 98,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to initialize monitoring:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/admin/MonitoringDashboard.tsx",
      "line": 138,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to load dashboard data:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/admin/MonitoringDashboard.tsx",
      "line": 153,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to acknowledge alert:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/admin/PricingAnalytics.tsx",
      "line": 114,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error loading analytics:', error)"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/admin/PricingAnalytics.tsx",
      "line": 209,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('Exporting analytics data...')"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/admin/PricingDashboard.tsx",
      "line": 92,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error loading dashboard data:', error)"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/admin/PricingDashboard.tsx",
      "line": 135,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error deleting rule:', error)"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/admin/PricingDashboard.tsx",
      "line": 145,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error toggling rule:', error)"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/admin/PricingRuleWizard.tsx",
      "line": 148,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error loading services:', error)"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/admin/PricingRuleWizard.tsx",
      "line": 182,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error simulating price:', error)"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/admin/PricingRuleWizard.tsx",
      "line": 239,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error saving rule:', error)"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/admin/RegionalPricingManagement.tsx",
      "line": 99,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error loading data:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/admin/RegionalPricingManagement.tsx",
      "line": 126,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error creating pricing:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/admin/RegionalPricingManagement.tsx",
      "line": 148,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error deleting pricing:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/admin/RegionalPricingManagement.tsx",
      "line": 175,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error duplicating pricing:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/admin/ReliabilityDashboard.tsx",
      "line": 97,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error fetching dashboard data:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/admin/ReliabilityDashboard.tsx",
      "line": 116,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('Manual recovery initiated');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/admin/ReliabilityDashboard.tsx",
      "line": 118,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error initiating recovery:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/admin/SchedulingAnalyticsDashboard.tsx",
      "line": 81,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error loading analytics:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/admin/ServiceMonitoringDashboard.tsx",
      "line": 139,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to fetch monitoring data:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/admin/TemplatesManager.tsx",
      "line": 160,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to create template:', error)"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/admin/TemplatesManager.tsx",
      "line": 198,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to update template:', error)"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/admin/TemplatesManager.tsx",
      "line": 257,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to duplicate template:', error)"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/admin/UnifiedInbox.tsx",
      "line": 134,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to send message:', error)"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/admin/UnifiedInbox.tsx",
      "line": 170,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to create thread:', error)"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/admin/UnifiedInbox.tsx",
      "line": 200,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to archive threads:', error)"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/admin/UnifiedInbox.tsx",
      "line": 219,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to assign threads:', error)"
    },
    {
      "type": "CODE_COMMENT",
      "file": "src/components/admin/UnifiedInbox.tsx",
      "line": 525,
      "message": "Development comment detected",
      "severity": "INFO",
      "recommendation": "Address TODO/FIXME comments before production",
      "content": "{/* TODO: Load clients from database */}"
    },
    {
      "type": "CODE_COMMENT",
      "file": "src/components/admin/UnifiedInbox.tsx",
      "line": 619,
      "message": "Development comment detected",
      "severity": "INFO",
      "recommendation": "Address TODO/FIXME comments before production",
      "content": "{/* TODO: Load team members from database */}"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/admin/WhatsAppInbox.tsx",
      "line": 181,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error loading threads:', error)"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/admin/WhatsAppInbox.tsx",
      "line": 237,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error loading messages:', error)"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/admin/WhatsAppInbox.tsx",
      "line": 266,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error loading quick replies:', error)"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/admin/WhatsAppInbox.tsx",
      "line": 275,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error loading analytics:', error)"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/admin/WhatsAppInbox.tsx",
      "line": 320,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error sending message:', error)"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/admin/WhatsAppInbox.tsx",
      "line": 343,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error sending new message:', error)"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/admin/WorkflowDesigner.tsx",
      "line": 404,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to save workflow:', error)"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/admin/WorkflowDesigner.tsx",
      "line": 438,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to test workflow:', error)"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/admin/analytics/AIUsageDashboard.tsx",
      "line": 66,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to download report:', err);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/admin/analytics/BookingFunnel.tsx",
      "line": 116,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error fetching funnel data:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/admin/analytics/BookingFunnel.tsx",
      "line": 168,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error fetching conversion trend:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/admin/analytics/ClientDemographics.tsx",
      "line": 210,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error fetching demographics data:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/admin/analytics/ClientDemographics.tsx",
      "line": 264,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error fetching new vs returning data:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/admin/analytics/ProviderPerformance.tsx",
      "line": 164,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error fetching provider data:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/admin/analytics/ProviderPerformance.tsx",
      "line": 198,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error fetching monthly trend:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/admin/analytics/RevenueChart.tsx",
      "line": 58,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error fetching revenue data:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/admin/analytics/ServicePopularity.tsx",
      "line": 179,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error fetching service data:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/admin/analytics/TimeAnalysis.tsx",
      "line": 199,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error fetching time analysis data:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/admin/content/AIBlogPostGenerator.tsx",
      "line": 47,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to generate blog post:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/admin/content/AIBlogPostGenerator.tsx",
      "line": 57,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to copy:', error);"
    },
    {
      "type": "ENV_VAR",
      "file": "src/components/admin/content/AIContentGenerator.tsx",
      "line": 72,
      "message": "Environment variable usage",
      "severity": "INFO",
      "recommendation": "Ensure environment variables are properly secured",
      "content": "const apiKey = process.env.VITE_OPENAI_API_KEY || import.meta.env.VITE_OPENAI_API_KEY;"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/admin/content/AIContentGenerator.tsx",
      "line": 120,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error generating blog post:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/admin/content/AIContentGenerator.tsx",
      "line": 164,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error generating service description:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/admin/content/AIContentGenerator.tsx",
      "line": 192,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error generating email:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/admin/content/AIContentGenerator.tsx",
      "line": 218,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error saving draft:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/admin/content/AIContentGenerator.tsx",
      "line": 251,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error publishing content:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/admin/content/AIContentManager/AIContentEditor.tsx",
      "line": 99,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Save failed:', error);"
    },
    {
      "type": "CODE_COMMENT",
      "file": "src/components/admin/content/AIContentManager/AIImageGenerator.tsx",
      "line": 112,
      "message": "Development comment detected",
      "severity": "INFO",
      "recommendation": "Address TODO/FIXME comments before production",
      "content": "// TODO: Implement actual AI image generation"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/admin/content/AIContentManager/AIImageGenerator.tsx",
      "line": 120,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Image generation failed:', error);"
    },
    {
      "type": "CODE_COMMENT",
      "file": "src/components/admin/content/AIContentManager/hooks/useContentGeneration.ts",
      "line": 50,
      "message": "Development comment detected",
      "severity": "INFO",
      "recommendation": "Address TODO/FIXME comments before production",
      "content": "author: 'Current User', // TODO: Get from auth"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/admin/content/AIContentManager/hooks/useContentGeneration.ts",
      "line": 74,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Content generation failed:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/admin/content/AIContentManager/hooks/useContentScheduler.ts",
      "line": 52,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Schedule failed:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/admin/content/AIContentManager/hooks/useContentScheduler.ts",
      "line": 86,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Reschedule failed:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/admin/content/AIContentManager/hooks/useContentScheduler.ts",
      "line": 116,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Unschedule failed:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/admin/content/AIContentManager/hooks/useContentTranslation.ts",
      "line": 54,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Translation failed:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/admin/content/AIContentManager/hooks/useContentTranslation.ts",
      "line": 87,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error(`Translation to ${targetLang} failed:`, error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/admin/content/AIContentManager/hooks/useContentTranslation.ts",
      "line": 117,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Auto-translation failed:', error);"
    },
    {
      "type": "CODE_COMMENT",
      "file": "src/components/admin/content/AIContentManager.tsx",
      "line": 373,
      "message": "Development comment detected",
      "severity": "INFO",
      "recommendation": "Address TODO/FIXME comments before production",
      "content": "author: 'Current User', // TODO: Get from auth"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/admin/content/AIContentManager.tsx",
      "line": 405,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Translation failed:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/admin/content/AIContentManager.tsx",
      "line": 412,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Content generation failed:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/admin/content/AIContentManager.tsx",
      "line": 457,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Save failed:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/admin/content/AIContentManager.tsx",
      "line": 494,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Schedule failed:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/admin/content/AIContentManager.tsx",
      "line": 531,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Translation failed:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/admin/content/AIContentManager.tsx",
      "line": 568,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Approval failed:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/admin/content/AIQualityScorer.tsx",
      "line": 58,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('Quality Score Result:', result);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/admin/content/AIQualityScorer.tsx",
      "line": 60,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Quality scoring failed:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/admin/content/AISEOAnalyzer.tsx",
      "line": 67,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('SEO Analysis Result:', result);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/admin/content/AISEOAnalyzer.tsx",
      "line": 69,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('SEO analysis failed:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/admin/content/AIServiceDescriptionGenerator.tsx",
      "line": 85,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to generate service description:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/admin/content/AIServiceDescriptionGenerator.tsx",
      "line": 95,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to copy:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/admin/content/AITemplateManager.tsx",
      "line": 60,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to create template:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/admin/content/AITemplateManager.tsx",
      "line": 68,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('Generated content:', result);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/admin/content/AITemplateManager.tsx",
      "line": 70,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to generate content:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/admin/content/AITranslationTool.tsx",
      "line": 63,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Translation failed:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/admin/content/AITranslationTool.tsx",
      "line": 73,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to copy:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/admin/content/BlogAutomator.tsx",
      "line": 438,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error generating blog post:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/admin/content/BlogAutomator.tsx",
      "line": 483,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error scheduling post:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/admin/content/BlogAutomator.tsx",
      "line": 522,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error updating settings:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/admin/content/ContentManagementDashboard.tsx",
      "line": 112,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error loading dashboard data:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/admin/content/ContentScheduler.tsx",
      "line": 142,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error loading content:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/admin/content/ContentScheduler.tsx",
      "line": 189,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error loading events:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/admin/content/ContentScheduler.tsx",
      "line": 257,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error scheduling content:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/admin/content/ContentScheduler.tsx",
      "line": 288,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error deleting event:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/admin/content/SEOOptimizer.tsx",
      "line": 270,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error analyzing SEO:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/admin/content/SEOOptimizer.tsx",
      "line": 345,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error copying:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/admin/content/TranslationWorkflow.tsx",
      "line": 114,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error searching translation memory:', error);"
    },
    {
      "type": "ENV_VAR",
      "file": "src/components/admin/content/TranslationWorkflow.tsx",
      "line": 121,
      "message": "Environment variable usage",
      "severity": "INFO",
      "recommendation": "Ensure environment variables are properly secured",
      "content": "apiKey: process.env.REACT_APP_OPENAI_API_KEY || '',"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/admin/content/TranslationWorkflow.tsx",
      "line": 258,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Translation failed:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/admin/content/TranslationWorkflow.tsx",
      "line": 324,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error saving translation:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/admin/content/TranslationWorkflow.tsx",
      "line": 375,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error getting translation stats:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/ai/AIInsights.tsx",
      "line": 214,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to load AI insights:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/booking/AISchedulingAssistant.tsx",
      "line": 92,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to load scheduling data:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/booking/AISchedulingAssistant.tsx",
      "line": 124,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to load optimized schedule:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/booking/LocationAwareBooking.tsx",
      "line": 129,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error loading service locations:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/booking/OfflineBookingSheet.tsx",
      "line": 31,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to load cached bookings:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/booking/QRCheckIn.tsx",
      "line": 57,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error clearing scanner:', error);"
    },
    {
      "type": "ENV_VAR",
      "file": "src/components/booking/QRCheckIn.tsx",
      "line": 76,
      "message": "Environment variable usage",
      "severity": "INFO",
      "recommendation": "Ensure environment variables are properly secured",
      "content": "const secret = process.env.VITE_QR_SECRET || 'default-secret';"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/booking/QRCheckIn.tsx",
      "line": 105,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error fetching booking details:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/booking/QRCheckIn.tsx",
      "line": 117,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Camera permission check failed:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/booking/QRCheckIn.tsx",
      "line": 148,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error starting scanner:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/booking/QRCheckIn.tsx",
      "line": 164,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error stopping scanner:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/booking/QRCheckIn.tsx",
      "line": 207,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Check-in error:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/booking/QRCheckIn.tsx",
      "line": 240,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error processing check-in:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/booking/QuickRescheduleButton.tsx",
      "line": 48,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Quick reschedule failed:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/booking/SmartSchedulingHub.tsx",
      "line": 102,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error loading data:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/booking/SmartSchedulingHub.tsx",
      "line": 127,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error loading predictions:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/booking/SmartSchedulingHub.tsx",
      "line": 138,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error loading service pattern:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/booking/SmartSchedulingHub.tsx",
      "line": 149,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error loading booking pattern:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/booking/SmartSchedulingHub.tsx",
      "line": 160,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error loading recommendations:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/booking/SmartSchedulingHub.tsx",
      "line": 171,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error loading no-show prediction:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/booking/SmartSchedulingHub.tsx",
      "line": 182,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error loading reminder config:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/booking/SmartSchedulingHub.tsx",
      "line": 191,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error loading analytics:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/booking/SmartSchedulingHub.tsx",
      "line": 228,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('Unknown recommendation type:', rec.action.type);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/booking/Step4PaymentCompliant.tsx",
      "line": 164,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('VAT calculation failed:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/booking/Step4PaymentCompliant.tsx",
      "line": 185,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Deposit calculation failed:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/booking/Step4PaymentCompliant.tsx",
      "line": 220,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('NIP validation failed:', error);"
    },
    {
      "type": "CODE_COMMENT",
      "file": "src/components/booking/Step4PaymentCompliant.tsx",
      "line": 283,
      "message": "Development comment detected",
      "severity": "INFO",
      "recommendation": "Address TODO/FIXME comments before production",
      "content": "newErrors.postalCode = 'Nieprawidłowy format kodu pocztowego (XX-XXX)';"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/booking/Step4PaymentCompliant.tsx",
      "line": 367,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Invoice generation failed:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/booking/Step4PaymentCompliant.tsx",
      "line": 394,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to create deposit transaction:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/booking/Step4PaymentCompliant.tsx",
      "line": 410,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Payment processing failed:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/booking/Step4PaymentWithGiftCards.tsx",
      "line": 139,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Payment error:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/booking/Step4PaymentWithGiftCards.tsx",
      "line": 166,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Payment error:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/booking/UnifiedAvailabilityCalendar.tsx",
      "line": 101,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to load services:', err);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/booking/UnifiedAvailabilityCalendar.tsx",
      "line": 117,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to load specialists:', err);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/booking/UnifiedAvailabilityCalendar.tsx",
      "line": 161,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to load availability:', err);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/booking/WaitlistOption.tsx",
      "line": 70,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to join waitlist:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/calendar/CalendarSync.tsx",
      "line": 71,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error loading calendar connections:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/calendar/CalendarSync.tsx",
      "line": 100,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error checking conflicts:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/calendar/CalendarSync.tsx",
      "line": 126,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error(`Error checking conflicts for ${connection.provider}:`, error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/calendar/CalendarSync.tsx",
      "line": 150,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error connecting calendar:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/calendar/CalendarSync.tsx",
      "line": 174,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error disconnecting calendar:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/calendar/CalendarSync.tsx",
      "line": 198,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error toggling sync:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/calendar/CalendarSync.tsx",
      "line": 226,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error syncing:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/calendar/CalendarSync.tsx",
      "line": 254,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error adding event:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/checkout/B2BCheckoutFlow.tsx",
      "line": 198,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('NIP validation failed:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/checkout/B2BCheckoutFlow.tsx",
      "line": 215,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('VAT calculation failed:', error);"
    },
    {
      "type": "CODE_COMMENT",
      "file": "src/components/checkout/B2BCheckoutFlow.tsx",
      "line": 275,
      "message": "Development comment detected",
      "severity": "INFO",
      "recommendation": "Address TODO/FIXME comments before production",
      "content": "newErrors.postalCode = 'Nieprawidłowy format kodu pocztowego (XX-XXX)';"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/checkout/B2BCheckoutFlow.tsx",
      "line": 372,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Checkout failed:', error);"
    },
    {
      "type": "ENV_VAR",
      "file": "src/components/error/ErrorPage.tsx",
      "line": 104,
      "message": "Environment variable usage",
      "severity": "INFO",
      "recommendation": "Ensure environment variables are properly secured",
      "content": "if (process.env.NODE_ENV === 'development') {"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/error/ErrorPage.tsx",
      "line": 105,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error Page:', errorData);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/error/ErrorPage.tsx",
      "line": 120,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.warn('Could not save error log:', e);"
    },
    {
      "type": "ENV_VAR",
      "file": "src/components/error/ErrorPage.tsx",
      "line": 209,
      "message": "Environment variable usage",
      "severity": "INFO",
      "recommendation": "Ensure environment variables are properly secured",
      "content": "{process.env.NODE_ENV === 'development' && errorDetails && ("
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/error/ErrorPage.tsx",
      "line": 287,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Component error:', error, info);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/feedback/FeedbackForm.tsx",
      "line": 248,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error uploading attachment:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/giftcards/GiftCardBalanceLookup.tsx",
      "line": 35,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error checking balance:', error);"
    },
    {
      "type": "CODE_COMMENT",
      "file": "src/components/giftcards/GiftCardBalanceLookup.tsx",
      "line": 85,
      "message": "Development comment detected",
      "severity": "INFO",
      "recommendation": "Address TODO/FIXME comments before production",
      "content": "placeholder=\"MH-XXXXXXXXXXXX-X\""
    },
    {
      "type": "CODE_COMMENT",
      "file": "src/components/giftcards/GiftCardBalanceLookup.tsx",
      "line": 269,
      "message": "Development comment detected",
      "severity": "INFO",
      "recommendation": "Address TODO/FIXME comments before production",
      "content": "<p>• {t('giftCards.balance.note2', 'Kod ma format MH-XXXXXXXXXXXX-X')}</p>"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/giftcards/GiftCardPurchase.tsx",
      "line": 83,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Payment error:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/giftcards/GiftCardPurchase.tsx",
      "line": 87,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error processing payment:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/giftcards/GiftCardRedemption.tsx",
      "line": 50,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error checking balance:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/giftcards/GiftCardRedemption.tsx",
      "line": 81,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error redeeming gift card:', error);"
    },
    {
      "type": "CODE_COMMENT",
      "file": "src/components/giftcards/GiftCardRedemption.tsx",
      "line": 125,
      "message": "Development comment detected",
      "severity": "INFO",
      "recommendation": "Address TODO/FIXME comments before production",
      "content": "placeholder=\"MH-XXXXXXXXXXXX-X\""
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/localization/CurrencyConverter.tsx",
      "line": 111,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to update exchange rates:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/localization/MixedLanguageContent.tsx",
      "line": 209,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Translation failed:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/localization/RegionalSettings.tsx",
      "line": 185,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error detecting region:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/media/BeforeAfterDemo.tsx",
      "line": 127,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('Slider position:', position)"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/media/BeforeAfterDemo.tsx",
      "line": 209,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('Advanced slider position:', position)"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/media/BeforeAfterDemo.tsx",
      "line": 212,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('Advanced image index:', index)"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/media/BeforeAfterDemo.tsx",
      "line": 283,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('Selected image:', image.title, 'Index:', index)"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/media/BeforeAfterDemo.tsx",
      "line": 286,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('Image', imageId, isFavorite ? 'favorited' : 'unfavorited')"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/media/BeforeAfterDemo.tsx",
      "line": 463,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('Selected:', image.title)"
    },
    {
      "type": "CODE_COMMENT",
      "file": "src/components/media/MediaLibrary.tsx",
      "line": 261,
      "message": "Development comment detected",
      "severity": "INFO",
      "recommendation": "Address TODO/FIXME comments before production",
      "content": "// TODO: Implement bulk delete"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/media/MediaLibrary.tsx",
      "line": 262,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('Deleting assets:', Array.from(selectedAssets))"
    },
    {
      "type": "CODE_COMMENT",
      "file": "src/components/media/MediaLibrary.tsx",
      "line": 266,
      "message": "Development comment detected",
      "severity": "INFO",
      "recommendation": "Address TODO/FIXME comments before production",
      "content": "// TODO: Implement file upload"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/media/MediaLibrary.tsx",
      "line": 267,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('Uploading files:', files)"
    },
    {
      "type": "CODE_COMMENT",
      "file": "src/components/media/MediaLibrary.tsx",
      "line": 470,
      "message": "Development comment detected",
      "severity": "INFO",
      "recommendation": "Address TODO/FIXME comments before production",
      "content": "// TODO: Download asset"
    },
    {
      "type": "CODE_COMMENT",
      "file": "src/components/media/MediaLibrary.tsx",
      "line": 578,
      "message": "Development comment detected",
      "severity": "INFO",
      "recommendation": "Address TODO/FIXME comments before production",
      "content": "// TODO: Download asset"
    },
    {
      "type": "CODE_COMMENT",
      "file": "src/components/media/MediaLibrary.tsx",
      "line": 586,
      "message": "Development comment detected",
      "severity": "INFO",
      "recommendation": "Address TODO/FIXME comments before production",
      "content": "// TODO: Delete asset"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/media/ModelConsentForm.tsx",
      "line": 109,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to submit consent form:', error)"
    },
    {
      "type": "ENV_VAR",
      "file": "src/components/messaging/ConversationView.tsx",
      "line": 78,
      "message": "Environment variable usage",
      "severity": "INFO",
      "recommendation": "Ensure environment variables are properly secured",
      "content": "src={`${process.env.NEXT_PUBLIC_SUPABASE_URL}/storage/v1/object/public/communications/${attachment.storage_path}`}"
    },
    {
      "type": "ENV_VAR",
      "file": "src/components/messaging/ConversationView.tsx",
      "line": 82,
      "message": "Environment variable usage",
      "severity": "INFO",
      "recommendation": "Ensure environment variables are properly secured",
      "content": "`${process.env.NEXT_PUBLIC_SUPABASE_URL}/storage/v1/object/public/communications/${attachment.storage_path}`,"
    },
    {
      "type": "ENV_VAR",
      "file": "src/components/messaging/ConversationView.tsx",
      "line": 100,
      "message": "Environment variable usage",
      "severity": "INFO",
      "recommendation": "Ensure environment variables are properly secured",
      "content": "`${process.env.NEXT_PUBLIC_SUPABASE_URL}/storage/v1/object/public/communications/${attachment.thumbnail_path}` :"
    },
    {
      "type": "ENV_VAR",
      "file": "src/components/messaging/ConversationView.tsx",
      "line": 105,
      "message": "Environment variable usage",
      "severity": "INFO",
      "recommendation": "Ensure environment variables are properly secured",
      "content": "src={`${process.env.NEXT_PUBLIC_SUPABASE_URL}/storage/v1/object/public/communications/${attachment.storage_path}`}"
    },
    {
      "type": "ENV_VAR",
      "file": "src/components/messaging/ConversationView.tsx",
      "line": 127,
      "message": "Environment variable usage",
      "severity": "INFO",
      "recommendation": "Ensure environment variables are properly secured",
      "content": "link.href = `${process.env.NEXT_PUBLIC_SUPABASE_URL}/storage/v1/object/public/communications/${attachment.storage_path}`"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/messaging/MessageComposer.tsx",
      "line": 155,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error starting recording:', error)"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/messaging/MessageComposer.tsx",
      "line": 182,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error sending message:', error)"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/packages/PackagePurchaseModal.tsx",
      "line": 171,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Purchase error:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/payment/PackageDealPaymentFlow.tsx",
      "line": 215,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Payment processing error:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/pricing/DynamicPriceDisplay.tsx",
      "line": 64,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error calculating price:', error)"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/pricing/PriceComparison.tsx",
      "line": 74,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error loading price comparison:', error)"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/pricing/PriceComparison.tsx",
      "line": 111,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error loading time slot prices:', error)"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/pwa/InstallPrompt.tsx",
      "line": 98,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error during PWA installation:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/pwa/OfflineBanner.tsx",
      "line": 117,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Sync failed:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/reviews/PhotoReview.tsx",
      "line": 40,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to download photo:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/reviews/PhotoReview.tsx",
      "line": 53,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to share:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/reviews/PhotoViewer.tsx",
      "line": 68,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to download photo:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/reviews/ReviewAnalytics.tsx",
      "line": 108,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error loading analytics:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/reviews/ReviewForm.tsx",
      "line": 300,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error submitting review:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/reviews/ReviewResponseManager.tsx",
      "line": 85,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error(\"Error loading templates:\", error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/reviews/ReviewResponseManager.tsx",
      "line": 99,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error(\"Error loading response history:\", error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/reviews/ReviewVerificationSystem.tsx",
      "line": 137,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error(\"Error loading fraud detections:\", error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/search/AdvancedSearch.tsx",
      "line": 129,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Search error:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/seo/NotFoundHandler.tsx",
      "line": 98,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.warn(`404: Page not found - ${location.pathname}`);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/seo/SitemapRoutes.tsx",
      "line": 411,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error generating dynamic routes:', error);"
    },
    {
      "type": "ENV_VAR",
      "file": "src/components/tracking/MetaCAPIInitializer.tsx",
      "line": 12,
      "message": "Environment variable usage",
      "severity": "INFO",
      "recommendation": "Ensure environment variables are properly secured",
      "content": "if (process.env.VITE_META_PIXEL_ID && typeof window !== 'undefined') {"
    },
    {
      "type": "ENV_VAR",
      "file": "src/components/tracking/MetaCAPIInitializer.tsx",
      "line": 18,
      "message": "Environment variable usage",
      "severity": "INFO",
      "recommendation": "Ensure environment variables are properly secured",
      "content": "enabled: process.env.NODE_ENV === 'production',"
    },
    {
      "type": "ENV_VAR",
      "file": "src/components/tracking/MetaCAPIInitializer.tsx",
      "line": 19,
      "message": "Environment variable usage",
      "severity": "INFO",
      "recommendation": "Ensure environment variables are properly secured",
      "content": "pixelId: process.env.VITE_META_PIXEL_ID ? 'configured' : 'not configured',"
    },
    {
      "type": "ENV_VAR",
      "file": "src/components/tracking/MetaCAPIInitializer.tsx",
      "line": 49,
      "message": "Environment variable usage",
      "severity": "INFO",
      "recommendation": "Ensure environment variables are properly secured",
      "content": "window.fbq('init', process.env.VITE_META_PIXEL_ID!);"
    },
    {
      "type": "ENV_VAR",
      "file": "src/components/tracking/MetaCAPIInitializer.tsx",
      "line": 55,
      "message": "Environment variable usage",
      "severity": "INFO",
      "recommendation": "Ensure environment variables are properly secured",
      "content": "pixelId: process.env.VITE_META_PIXEL_ID,"
    },
    {
      "type": "ENV_VAR",
      "file": "src/components/tracking/MetaCAPIInitializer.tsx",
      "line": 63,
      "message": "Environment variable usage",
      "severity": "INFO",
      "recommendation": "Ensure environment variables are properly secured",
      "content": "const isCAPIEnabled = process.env.NODE_ENV === 'production' &&"
    },
    {
      "type": "ENV_VAR",
      "file": "src/components/tracking/MetaCAPIInitializer.tsx",
      "line": 64,
      "message": "Environment variable usage",
      "severity": "INFO",
      "recommendation": "Ensure environment variables are properly secured",
      "content": "!!process.env.VITE_META_ACCESS_TOKEN &&"
    },
    {
      "type": "ENV_VAR",
      "file": "src/components/tracking/MetaCAPIInitializer.tsx",
      "line": 65,
      "message": "Environment variable usage",
      "severity": "INFO",
      "recommendation": "Ensure environment variables are properly secured",
      "content": "!!process.env.VITE_META_PIXEL_ID;"
    },
    {
      "type": "ENV_VAR",
      "file": "src/components/tracking/MetaCAPIProvider.tsx",
      "line": 54,
      "message": "Environment variable usage",
      "severity": "INFO",
      "recommendation": "Ensure environment variables are properly secured",
      "content": "enabled = process.env.NODE_ENV === 'production'"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/translations/AutomationDashboard.tsx",
      "line": 89,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error during scan:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/translations/AutomationDashboard.tsx",
      "line": 106,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error generating suggestions:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/translations/AutomationDashboard.tsx",
      "line": 118,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('Would create translation tasks for', untranslatedContent.length, 'items');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/translations/AutomationDashboard.tsx",
      "line": 120,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error creating translation tasks:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/translations/AutomationDashboard.tsx",
      "line": 472,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('Translation selected:', translation);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/translations/AutomationDashboard.tsx",
      "line": 479,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('Saved to TM:', translation, metadata);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/translations/GlossaryManager.tsx",
      "line": 69,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error loading glossary terms:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/translations/GlossaryManager.tsx",
      "line": 115,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error saving term:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/translations/GlossaryManager.tsx",
      "line": 146,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error deleting term:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/translations/GlossaryManager.tsx",
      "line": 163,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error approving term:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/translations/GlossaryManager.tsx",
      "line": 214,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error exporting glossary:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/translations/TMManager.tsx",
      "line": 98,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error loading stats:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/translations/TMManager.tsx",
      "line": 108,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error loading translations:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/translations/TMManager.tsx",
      "line": 136,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error exporting translations:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/translations/TMManager.tsx",
      "line": 165,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error importing translations:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/translations/TMManager.tsx",
      "line": 182,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error approving translation:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/translations/TMManager.tsx",
      "line": 195,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error deleting translation:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/translations/TMManager.tsx",
      "line": 811,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('Translation selected:', translation);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/translations/TMManager.tsx",
      "line": 818,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('Saved to TM:', translation, metadata);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/translations/TranslationAssistant.tsx",
      "line": 72,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error searching TM:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/translations/TranslationAssistant.tsx",
      "line": 116,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error saving translation:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/translations/TranslationEditor.tsx",
      "line": 118,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error searching TM:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/translations/TranslationEditor.tsx",
      "line": 137,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error in concordance search:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/translations/TranslationEditor.tsx",
      "line": 160,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error checking quality:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/translations/TranslationEditor.tsx",
      "line": 256,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error saving translation:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/translations/TranslationEditor.tsx",
      "line": 272,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error rating translation:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/translations/TranslationManager.tsx",
      "line": 54,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error loading stats:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/translations/TranslationManager.tsx",
      "line": 64,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error loading translations:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/translations/TranslationManager.tsx",
      "line": 110,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error exporting translations:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/verification/C2PAExample.tsx",
      "line": 227,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('Verified:', verification.verified)"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/verification/C2PAExample.tsx",
      "line": 231,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('Manifest:', manifest.manifest)"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/vouchers/VoucherManager.tsx",
      "line": 80,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error loading voucher data:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/vouchers/VoucherManager.tsx",
      "line": 95,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error creating voucher:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/vouchers/VoucherManager.tsx",
      "line": 102,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('Update voucher:', editingVoucher);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/vouchers/VoucherManager.tsx",
      "line": 112,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error deactivating voucher:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/vouchers/VoucherManager.tsx",
      "line": 124,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error generating bulk vouchers:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/components/vouchers/VoucherRedemption.tsx",
      "line": 65,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error applying voucher:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/contexts/CorporateWellnessContext.tsx",
      "line": 319,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error(message, error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/contexts/LocalizationContext.tsx",
      "line": 132,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error initializing localization:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/contexts/LocalizationContext.tsx",
      "line": 162,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error loading translations:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/contexts/LocalizationContext.tsx",
      "line": 196,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error loading city translations:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/contexts/LocationContext.tsx",
      "line": 161,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error initializing location context:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/contexts/LocationContext.tsx",
      "line": 196,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error detecting user location:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/contexts/LocationContext.tsx",
      "line": 212,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error setting city:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/contexts/LocationContext.tsx",
      "line": 246,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error setting location:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/contexts/LocationContext.tsx",
      "line": 265,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error searching nearby locations:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/contexts/LocationContext.tsx",
      "line": 312,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error caching location preferences:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/contexts/LocationContext.tsx",
      "line": 331,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error loading cached preferences:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/hooks/useConsent.ts",
      "line": 352,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error submitting consent form:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/hooks/useConsent.ts",
      "line": 417,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error creating consent request:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/hooks/useConsent.ts",
      "line": 472,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error logging usage:', error);"
    },
    {
      "type": "ENV_VAR",
      "file": "src/hooks/useFeatureFlags.ts",
      "line": 56,
      "message": "Environment variable usage",
      "severity": "INFO",
      "recommendation": "Ensure environment variables are properly secured",
      "content": "this.userContext.environment = process.env.NODE_ENV || 'development';"
    },
    {
      "type": "ENV_VAR",
      "file": "src/hooks/useFeatureFlags.ts",
      "line": 637,
      "message": "Environment variable usage",
      "severity": "INFO",
      "recommendation": "Ensure environment variables are properly secured",
      "content": "if (process.env.NODE_ENV === 'development') {"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/hooks/useFeedback.ts",
      "line": 86,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error loading feedback:', err);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/hooks/useFeedback.ts",
      "line": 126,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error submitting feedback:', err);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/hooks/useFeedback.ts",
      "line": 151,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error updating feedback:', err);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/hooks/useFeedback.ts",
      "line": 176,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error deleting feedback:', err);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/hooks/useFeedback.ts",
      "line": 215,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error responding to feedback:', err);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/hooks/useFeedback.ts",
      "line": 312,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error submitting NPS survey:', err);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/hooks/useFeedback.ts",
      "line": 368,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error calculating NPS score:', err);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/hooks/useFeedback.ts",
      "line": 422,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error loading feedback analytics:', err);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/hooks/useFeedback.ts",
      "line": 482,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error loading feedback templates:', err);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/hooks/useMessaging.ts",
      "line": 179,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error fetching threads:', error)"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/hooks/useMessaging.ts",
      "line": 236,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error fetching messages:', error)"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/hooks/useMessaging.ts",
      "line": 328,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error sending message:', error)"
    },
    {
      "type": "ENV_VAR",
      "file": "src/hooks/useMessaging.ts",
      "line": 380,
      "message": "Environment variable usage",
      "severity": "INFO",
      "recommendation": "Ensure environment variables are properly secured",
      "content": "const response = await fetch(`${process.env.NEXT_PUBLIC_SUPABASE_URL}/functions/v1/send-email`, {"
    },
    {
      "type": "ENV_VAR",
      "file": "src/hooks/useMessaging.ts",
      "line": 403,
      "message": "Environment variable usage",
      "severity": "INFO",
      "recommendation": "Ensure environment variables are properly secured",
      "content": "const response = await fetch(`${process.env.NEXT_PUBLIC_SUPABASE_URL}/functions/v1/send-sms`, {"
    },
    {
      "type": "ENV_VAR",
      "file": "src/hooks/useMessaging.ts",
      "line": 425,
      "message": "Environment variable usage",
      "severity": "INFO",
      "recommendation": "Ensure environment variables are properly secured",
      "content": "const response = await fetch(`${process.env.NEXT_PUBLIC_SUPABASE_URL}/functions/v1/send-whatsapp`, {"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/hooks/useMessaging.ts",
      "line": 501,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error creating thread:', error)"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/hooks/useMessaging.ts",
      "line": 542,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error updating thread:', error)"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/hooks/useMessaging.ts",
      "line": 570,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error fetching templates:', error)"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/hooks/useMessaging.ts",
      "line": 595,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error creating template:', error)"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/hooks/useMessaging.ts",
      "line": 624,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error updating template:', error)"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/hooks/useMessaging.ts",
      "line": 645,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error fetching campaigns:', error)"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/hooks/useMessaging.ts",
      "line": 688,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error fetching stats:', error)"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/hooks/useMessaging.ts",
      "line": 811,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error(`Template not found: ${templateName}`)"
    },
    {
      "type": "ENV_VAR",
      "file": "src/hooks/useMessaging.ts",
      "line": 823,
      "message": "Environment variable usage",
      "severity": "INFO",
      "recommendation": "Ensure environment variables are properly secured",
      "content": "const response = await fetch(`${process.env.NEXT_PUBLIC_SUPABASE_URL}/functions/v1/send-whatsapp`, {"
    },
    {
      "type": "ENV_VAR",
      "file": "src/hooks/useMessaging.ts",
      "line": 836,
      "message": "Environment variable usage",
      "severity": "INFO",
      "recommendation": "Ensure environment variables are properly secured",
      "content": "const response = await fetch(`${process.env.NEXT_PUBLIC_SUPABASE_URL}/functions/v1/send-sms`, {"
    },
    {
      "type": "ENV_VAR",
      "file": "src/hooks/useMessaging.ts",
      "line": 849,
      "message": "Environment variable usage",
      "severity": "INFO",
      "recommendation": "Ensure environment variables are properly secured",
      "content": "const response = await fetch(`${process.env.NEXT_PUBLIC_SUPABASE_URL}/functions/v1/send-email`, {"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/hooks/useMessaging.ts",
      "line": 866,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error sending automated message:', error)"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/hooks/useOfflineSync.tsx",
      "line": 78,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Sync failed:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/hooks/useOfflineSync.tsx",
      "line": 92,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to cache bookings:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/hooks/useOfflineSync.tsx",
      "line": 100,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to cache services:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/hooks/useOfflineSync.tsx",
      "line": 108,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to cache availability:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/hooks/useOfflineSync.tsx",
      "line": 117,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to get cached bookings:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/hooks/useOfflineSync.tsx",
      "line": 126,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to get cached services:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/hooks/useOfflineSync.tsx",
      "line": 138,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to get cached availability:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/hooks/useOfflineSync.tsx",
      "line": 158,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to queue action:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/hooks/useOfflineSync.tsx",
      "line": 173,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to clear cache:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/hooks/usePWA.ts",
      "line": 238,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Service Worker setup failed:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/hooks/usePWA.ts",
      "line": 278,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Install failed:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/hooks/usePWA.ts",
      "line": 324,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error requesting notification permission:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/hooks/usePWA.ts",
      "line": 354,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error showing notification:', error);"
    },
    {
      "type": "ENV_VAR",
      "file": "src/hooks/usePWA.ts",
      "line": 365,
      "message": "Environment variable usage",
      "severity": "INFO",
      "recommendation": "Ensure environment variables are properly secured",
      "content": "applicationServerKey: process.env.VITE_VAPID_PUBLIC_KEY,"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/hooks/usePWA.ts",
      "line": 382,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error subscribing to push:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/hooks/usePWA.ts",
      "line": 411,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error unsubscribing from push:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/hooks/usePWA.ts",
      "line": 446,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error requesting wake lock:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/hooks/usePWA.ts",
      "line": 456,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error releasing wake lock:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/hooks/usePWA.ts",
      "line": 471,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error copying to clipboard:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/hooks/usePWA.ts",
      "line": 481,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error sharing:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/integrations/ai/advanced-recommendations.ts",
      "line": 136,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to generate recommendations:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/integrations/ai/advanced-recommendations.ts",
      "line": 522,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log(`Collected ${feedbackData.length} feedback entries for model improvement`);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/integrations/ai/advanced-recommendations.ts",
      "line": 524,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to update recommendation model:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/integrations/ai/agents/AIAgentFramework.ts",
      "line": 219,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Planning failed:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/integrations/ai/agents/AIAgentFramework.ts",
      "line": 426,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error in processing loop:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/integrations/ai/analytics.ts",
      "line": 119,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to store AI usage events:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/integrations/ai/analytics.ts",
      "line": 124,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error processing AI analytics batch:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/integrations/ai/analytics.ts",
      "line": 169,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to fetch AI analytics:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/integrations/ai/analytics.ts",
      "line": 381,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to track user satisfaction:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/integrations/ai/chatbot.ts",
      "line": 250,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to generate chatbot response:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/integrations/ai/config.ts",
      "line": 17,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.warn('OpenAI API key not found in environment variables');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/integrations/ai/config.ts",
      "line": 22,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Invalid OpenAI API key format');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/integrations/ai/config.ts",
      "line": 30,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to initialize AI service:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/integrations/ai/content/ContentGenerator.ts",
      "line": 176,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to parse blog post:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/integrations/ai/content/ContentGenerator.ts",
      "line": 190,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to generate blog post for:', request.topic, error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/integrations/ai/content/ContentGenerator.ts",
      "line": 258,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to parse service description:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/integrations/ai/content/ContentGenerator.ts",
      "line": 315,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to parse email template:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/integrations/ai/content/ContentGenerator.ts",
      "line": 394,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to parse social media post:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/integrations/ai/content/ContentGenerator.ts",
      "line": 434,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to parse content improvement:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/integrations/ai/content/ContentGenerator.ts",
      "line": 479,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to parse content calendar:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/integrations/ai/content-optimizer.ts",
      "line": 113,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Content optimization failed:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/integrations/ai/content-optimizer.ts",
      "line": 163,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to generate variations:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/integrations/ai/content-optimizer.ts",
      "line": 228,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Content analysis failed:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/integrations/ai/content-optimizer.ts",
      "line": 289,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('A/B test analysis failed:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/integrations/ai/content-optimizer.ts",
      "line": 339,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Headline generation failed:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/integrations/ai/content-optimizer.ts",
      "line": 389,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('CTA optimization failed:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/integrations/ai/core/AIService.ts",
      "line": 431,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.warn(`Provider ${providerName} failed:`, error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/integrations/ai/core/AIService.ts",
      "line": 839,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to parse recommendations:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/integrations/ai/core/AIService.ts",
      "line": 871,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to parse schedule optimization:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/integrations/ai/database.ts",
      "line": 92,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to save AI generated service:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/integrations/ai/database.ts",
      "line": 117,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to update service:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/integrations/ai/database.ts",
      "line": 141,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to fetch AI services:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/integrations/ai/database.ts",
      "line": 193,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to enhance service:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/integrations/ai/database.ts",
      "line": 249,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to save AI blog post:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/integrations/ai/database.ts",
      "line": 273,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to fetch AI blog posts:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/integrations/ai/database.ts",
      "line": 291,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to publish blog post:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/integrations/ai/database.ts",
      "line": 428,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to monitor AI content quality:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/integrations/ai/multilang.ts",
      "line": 158,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Translation failed:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/integrations/ai/multilang.ts",
      "line": 357,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to evaluate translation quality:', error);"
    },
    {
      "type": "ENV_VAR",
      "file": "src/integrations/ai/rag/RAGEngine.ts",
      "line": 64,
      "message": "Environment variable usage",
      "severity": "INFO",
      "recommendation": "Ensure environment variables are properly secured",
      "content": "this.vectorStore = new GeminiVectorStore(process.env.VITE_GOOGLE_AI_API_KEY || '');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/integrations/ai/rag/RAGEngine.ts",
      "line": 94,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log(`Added ${documents.length} documents to knowledge base`);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/integrations/ai/rag/RAGEngine.ts",
      "line": 127,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error retrieving documents:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/integrations/ai/rag/RAGEngine.ts",
      "line": 209,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Reranking failed:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/integrations/ai/realtime-suggestions.ts",
      "line": 315,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to generate contextual suggestions:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/integrations/ai/realtime-suggestions.ts",
      "line": 530,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log(`User ${userId} ${interaction} suggestion ${suggestionId}`);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/integrations/ai/recommendations.ts",
      "line": 75,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('Loading recommendation data...');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/integrations/ai/recommendations.ts",
      "line": 77,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to load recommendation data:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/integrations/ai/recommendations.ts",
      "line": 141,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to generate recommendations:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/integrations/ai/recommendations.ts",
      "line": 179,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to get similar services:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/integrations/ai/recommendations.ts",
      "line": 225,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to generate combinations:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/integrations/ai/recommendations.ts",
      "line": 276,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to predict next booking:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/integrations/ai/scheduling.ts",
      "line": 60,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('Loading historical scheduling data...');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/integrations/ai/scheduling.ts",
      "line": 62,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to load historical data:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/integrations/ai/scheduling.ts",
      "line": 75,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to generate scheduling insights:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/integrations/ai/scheduling.ts",
      "line": 139,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to predict demand:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/integrations/ai/scheduling.ts",
      "line": 185,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to generate recommendations:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/integrations/ai/scheduling.ts",
      "line": 240,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to optimize schedule:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/integrations/ai/scheduling.ts",
      "line": 275,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to detect anomalies:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/integrations/ai/seo-analyzer.ts",
      "line": 165,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('SEO analysis failed:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/integrations/ai/seo-analyzer.ts",
      "line": 229,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('SEO content generation failed:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/integrations/ai/seo-analyzer.ts",
      "line": 293,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Competitor analysis failed:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/integrations/ai/seo-analyzer.ts",
      "line": 344,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Schema generation failed:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/integrations/ai/seo-analyzer.ts",
      "line": 441,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Content calendar generation failed:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/integrations/ai/service.ts",
      "line": 152,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('OpenAI API error:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/integrations/ai/service.ts",
      "line": 196,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to parse AI response:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/integrations/ai/service.ts",
      "line": 246,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to parse AI response:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/integrations/ai/service.ts",
      "line": 289,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to parse AI response:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/integrations/ai/service.ts",
      "line": 325,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to parse AI response:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/integrations/ai/template-system.ts",
      "line": 453,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to generate section content:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/integrations/social-media/enhanced-review-aggregator.ts",
      "line": 109,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error aggregating reviews:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/integrations/social-media/enhanced-review-aggregator.ts",
      "line": 161,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error fetching Google reviews:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/integrations/social-media/enhanced-review-aggregator.ts",
      "line": 221,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error fetching Booksy reviews:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/integrations/social-media/enhanced-review-aggregator.ts",
      "line": 285,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error fetching Instagram reviews:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/integrations/social-media/enhanced-review-aggregator.ts",
      "line": 338,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error fetching Facebook reviews:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/integrations/social-media/enhanced-review-aggregator.ts",
      "line": 408,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error fetching Twitter reviews:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/integrations/social-media/enhanced-review-aggregator.ts",
      "line": 459,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error creating internal review:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/integrations/social-media/enhanced-review-aggregator.ts",
      "line": 546,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error(`Error storing review source ${review.external_id}:`, error);"
    },
    {
      "type": "ENV_VAR",
      "file": "src/integrations/social-media/enhanced-review-aggregator.ts",
      "line": 588,
      "message": "Environment variable usage",
      "severity": "INFO",
      "recommendation": "Ensure environment variables are properly secured",
      "content": "api_key: process.env.GOOGLE_PLACES_API_KEY,"
    },
    {
      "type": "ENV_VAR",
      "file": "src/integrations/social-media/enhanced-review-aggregator.ts",
      "line": 589,
      "message": "Environment variable usage",
      "severity": "INFO",
      "recommendation": "Ensure environment variables are properly secured",
      "content": "place_id: process.env.GOOGLE_PLACE_ID,"
    },
    {
      "type": "ENV_VAR",
      "file": "src/integrations/social-media/enhanced-review-aggregator.ts",
      "line": 590,
      "message": "Environment variable usage",
      "severity": "INFO",
      "recommendation": "Ensure environment variables are properly secured",
      "content": "enabled: !!process.env.GOOGLE_PLACES_API_KEY && !!process.env.GOOGLE_PLACE_ID"
    },
    {
      "type": "ENV_VAR",
      "file": "src/integrations/social-media/enhanced-review-aggregator.ts",
      "line": 593,
      "message": "Environment variable usage",
      "severity": "INFO",
      "recommendation": "Ensure environment variables are properly secured",
      "content": "api_key: process.env.BOOKSY_API_KEY,"
    },
    {
      "type": "ENV_VAR",
      "file": "src/integrations/social-media/enhanced-review-aggregator.ts",
      "line": 594,
      "message": "Environment variable usage",
      "severity": "INFO",
      "recommendation": "Ensure environment variables are properly secured",
      "content": "salon_id: process.env.BOOKSY_SALON_ID,"
    },
    {
      "type": "ENV_VAR",
      "file": "src/integrations/social-media/enhanced-review-aggregator.ts",
      "line": 595,
      "message": "Environment variable usage",
      "severity": "INFO",
      "recommendation": "Ensure environment variables are properly secured",
      "content": "enabled: !!process.env.BOOKSY_API_KEY"
    },
    {
      "type": "ENV_VAR",
      "file": "src/integrations/social-media/enhanced-review-aggregator.ts",
      "line": 598,
      "message": "Environment variable usage",
      "severity": "INFO",
      "recommendation": "Ensure environment variables are properly secured",
      "content": "access_token: process.env.INSTAGRAM_ACCESS_TOKEN,"
    },
    {
      "type": "ENV_VAR",
      "file": "src/integrations/social-media/enhanced-review-aggregator.ts",
      "line": 599,
      "message": "Environment variable usage",
      "severity": "INFO",
      "recommendation": "Ensure environment variables are properly secured",
      "content": "business_account_id: process.env.INSTAGRAM_BUSINESS_ACCOUNT_ID,"
    },
    {
      "type": "ENV_VAR",
      "file": "src/integrations/social-media/enhanced-review-aggregator.ts",
      "line": 601,
      "message": "Environment variable usage",
      "severity": "INFO",
      "recommendation": "Ensure environment variables are properly secured",
      "content": "enabled: !!process.env.INSTAGRAM_ACCESS_TOKEN"
    },
    {
      "type": "ENV_VAR",
      "file": "src/integrations/social-media/enhanced-review-aggregator.ts",
      "line": 604,
      "message": "Environment variable usage",
      "severity": "INFO",
      "recommendation": "Ensure environment variables are properly secured",
      "content": "access_token: process.env.FACEBOOK_ACCESS_TOKEN,"
    },
    {
      "type": "ENV_VAR",
      "file": "src/integrations/social-media/enhanced-review-aggregator.ts",
      "line": 605,
      "message": "Environment variable usage",
      "severity": "INFO",
      "recommendation": "Ensure environment variables are properly secured",
      "content": "page_id: process.env.FACEBOOK_PAGE_ID,"
    },
    {
      "type": "ENV_VAR",
      "file": "src/integrations/social-media/enhanced-review-aggregator.ts",
      "line": 606,
      "message": "Environment variable usage",
      "severity": "INFO",
      "recommendation": "Ensure environment variables are properly secured",
      "content": "enabled: !!process.env.FACEBOOK_ACCESS_TOKEN"
    },
    {
      "type": "ENV_VAR",
      "file": "src/integrations/social-media/enhanced-review-aggregator.ts",
      "line": 609,
      "message": "Environment variable usage",
      "severity": "INFO",
      "recommendation": "Ensure environment variables are properly secured",
      "content": "bearer_token: process.env.TWITTER_BEARER_TOKEN,"
    },
    {
      "type": "ENV_VAR",
      "file": "src/integrations/social-media/enhanced-review-aggregator.ts",
      "line": 612,
      "message": "Environment variable usage",
      "severity": "INFO",
      "recommendation": "Ensure environment variables are properly secured",
      "content": "enabled: !!process.env.TWITTER_BEARER_TOKEN"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/integrations/social-media/enhanced-review-aggregator.ts",
      "line": 620,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('Starting review aggregation...');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/integrations/social-media/enhanced-review-aggregator.ts",
      "line": 624,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log(`Aggregated ${reviews.length} reviews:`, stats);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/integrations/social-media/enhanced-review-aggregator.ts",
      "line": 628,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Review aggregation failed:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/integrations/social-media/review-aggregator.ts",
      "line": 80,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error aggregating social media reviews:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/integrations/social-media/review-aggregator.ts",
      "line": 133,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error fetching Instagram reviews:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/integrations/social-media/review-aggregator.ts",
      "line": 211,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error fetching Facebook reviews:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/integrations/social-media/review-aggregator.ts",
      "line": 270,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error fetching Twitter mentions:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/integrations/social-media/review-aggregator.ts",
      "line": 384,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error(`Error storing review ${review.id}:`, error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/integrations/social-media/review-aggregator.ts",
      "line": 404,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error fetching stored reviews:', error);"
    },
    {
      "type": "ENV_VAR",
      "file": "src/integrations/social-media/review-aggregator.ts",
      "line": 429,
      "message": "Environment variable usage",
      "severity": "INFO",
      "recommendation": "Ensure environment variables are properly secured",
      "content": "const instagramToken = process.env.INSTAGRAM_ACCESS_TOKEN;"
    },
    {
      "type": "ENV_VAR",
      "file": "src/integrations/social-media/review-aggregator.ts",
      "line": 430,
      "message": "Environment variable usage",
      "severity": "INFO",
      "recommendation": "Ensure environment variables are properly secured",
      "content": "const facebookToken = process.env.FACEBOOK_ACCESS_TOKEN;"
    },
    {
      "type": "ENV_VAR",
      "file": "src/integrations/social-media/review-aggregator.ts",
      "line": 431,
      "message": "Environment variable usage",
      "severity": "INFO",
      "recommendation": "Ensure environment variables are properly secured",
      "content": "const twitterToken = process.env.TWITTER_BEARER_TOKEN;"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/integrations/social-media/review-aggregator.ts",
      "line": 441,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log(`Aggregated ${reviews.length} social media reviews`);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/integrations/social-media/review-aggregator.ts",
      "line": 444,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to aggregate social media reviews:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/advanced-language-detection.ts",
      "line": 76,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.warn('IP detection failed:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/advanced-language-detection.ts",
      "line": 228,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.warn('IP detection failed:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/ai-monitoring.ts",
      "line": 137,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to store performance metric:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/ai-monitoring.ts",
      "line": 182,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error evaluating condition:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/ai-monitoring.ts",
      "line": 240,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to store alert:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/ai-monitoring.ts",
      "line": 254,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to update alert:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/ai-monitoring.ts",
      "line": 276,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error(`Failed to send ${channel} notification:`, error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/ai-monitoring.ts",
      "line": 283,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('Email notification sent:', alert.message);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/ai-monitoring.ts",
      "line": 288,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('Slack notification sent:', alert.message);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/ai-monitoring.ts",
      "line": 293,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('PagerDuty notification sent:', alert.message);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/ai-monitoring.ts",
      "line": 298,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('SMS notification sent:', alert.message);"
    },
    {
      "type": "ENV_VAR",
      "file": "src/lib/ai-monitoring.ts",
      "line": 389,
      "message": "Environment variable usage",
      "severity": "INFO",
      "recommendation": "Ensure environment variables are properly secured",
      "content": "'Authorization': `Bearer ${process.env.VITE_OPENAI_API_KEY}`,"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/ai-monitoring.ts",
      "line": 451,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to store health check:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/ai-monitoring.ts",
      "line": 607,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('Fallback test - would require mocking');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/ai-security.ts",
      "line": 321,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to log security event:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/alerting.ts",
      "line": 279,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('Alerting service started');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/alerting.ts",
      "line": 291,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('Alerting service stopped');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/alerting.ts",
      "line": 304,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error(`Failed to evaluate rule ${rule.id}:`, error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/alerting.ts",
      "line": 379,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.warn(`Unknown alert type: ${rule.type}`);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/alerting.ts",
      "line": 383,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error(`Failed to get metric value for rule ${rule.id}:`, error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/alerting.ts",
      "line": 459,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.warn(`Alert triggered: ${rule.name} - ${alert.message}`);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/alerting.ts",
      "line": 485,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log(`Alert resolved: ${alert.title}`);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/alerting.ts",
      "line": 528,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error(`Failed to send ${channel} notification for alert ${alert.id}:`, error);"
    },
    {
      "type": "ENV_VAR",
      "file": "src/lib/alerting.ts",
      "line": 539,
      "message": "Environment variable usage",
      "severity": "INFO",
      "recommendation": "Ensure environment variables are properly secured",
      "content": "to: process.env.ADMIN_EMAIL || 'admin@mariia-hub.com',"
    },
    {
      "type": "ENV_VAR",
      "file": "src/lib/alerting.ts",
      "line": 556,
      "message": "Environment variable usage",
      "severity": "INFO",
      "recommendation": "Ensure environment variables are properly secured",
      "content": "const slackWebhook = process.env.SLACK_ALERTS_WEBHOOK;"
    },
    {
      "type": "ENV_VAR",
      "file": "src/lib/alerting.ts",
      "line": 591,
      "message": "Environment variable usage",
      "severity": "INFO",
      "recommendation": "Ensure environment variables are properly secured",
      "content": "const webhookUrl = process.env.ALERTS_WEBHOOK_URL;"
    },
    {
      "type": "ENV_VAR",
      "file": "src/lib/analytics-batcher.ts",
      "line": 60,
      "message": "Environment variable usage",
      "severity": "INFO",
      "recommendation": "Ensure environment variables are properly secured",
      "content": "process.env.NEXT_PUBLIC_SUPABASE_URL!,"
    },
    {
      "type": "ENV_VAR",
      "file": "src/lib/analytics-batcher.ts",
      "line": 61,
      "message": "Environment variable usage",
      "severity": "INFO",
      "recommendation": "Ensure environment variables are properly secured",
      "content": "process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/analytics-batcher.ts",
      "line": 217,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error(`Failed to send events to ${providerName}:`, error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/analytics-batcher.ts",
      "line": 385,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to log failed analytics event:', e);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/analytics-batcher.ts",
      "line": 410,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to save offline queue:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/analytics-batcher.ts",
      "line": 427,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to load offline queue:', error);"
    },
    {
      "type": "ENV_VAR",
      "file": "src/lib/analytics.ts",
      "line": 70,
      "message": "Environment variable usage",
      "severity": "INFO",
      "recommendation": "Ensure environment variables are properly secured",
      "content": "debug_mode: process.env.NODE_ENV === 'development',"
    },
    {
      "type": "ENV_VAR",
      "file": "src/lib/analytics.ts",
      "line": 84,
      "message": "Environment variable usage",
      "severity": "INFO",
      "recommendation": "Ensure environment variables are properly secured",
      "content": "window.gtag('config', process.env.VITE_GA4_MEASUREMENT_ID, {"
    },
    {
      "type": "ENV_VAR",
      "file": "src/lib/analytics.ts",
      "line": 452,
      "message": "Environment variable usage",
      "severity": "INFO",
      "recommendation": "Ensure environment variables are properly secured",
      "content": "window.gtag('config', process.env.VITE_GA4_MEASUREMENT_ID, {"
    },
    {
      "type": "ENV_VAR",
      "file": "src/lib/analytics.ts",
      "line": 460,
      "message": "Environment variable usage",
      "severity": "INFO",
      "recommendation": "Ensure environment variables are properly secured",
      "content": "window.gtag('config', process.env.VITE_GA4_MEASUREMENT_ID, {"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/automation-engine.ts",
      "line": 43,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error executing automation:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/automation-engine.ts",
      "line": 59,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error(`Error executing rule ${rule.id}:`, error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/automation-engine.ts",
      "line": 162,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.warn(`Unknown action type: ${action.type}`);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/automation-engine.ts",
      "line": 183,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error(`Template not found: ${template_name}`);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/automation-engine.ts",
      "line": 245,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error sending message:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/automation-engine.ts",
      "line": 252,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('Sending email:', action);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/automation-engine.ts",
      "line": 280,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error updating field:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/automation-engine.ts",
      "line": 287,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('Creating task:', action);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/automation-engine.ts",
      "line": 331,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error triggering webhook:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/automation-engine.ts",
      "line": 517,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error(`Failed to send scheduled message ${message.id}:`, error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/automation-engine.ts",
      "line": 540,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error processing scheduled messages:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/base-service.ts",
      "line": 245,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error(`[${type}]`, details);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/base-service.ts",
      "line": 251,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "// For now, just use console.error"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/base-service.ts",
      "line": 252,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error(`[${type}]`, details);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/base-service.ts",
      "line": 344,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error reported:', { error, context });"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/cdn-config.ts",
      "line": 418,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('Cache Performance:', {"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/cdn-config.ts",
      "line": 447,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('Cache warmed up successfully');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/cdn-config.ts",
      "line": 449,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Cache warmup failed:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/cdn-config.ts",
      "line": 559,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('CDN initialized');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/communication.ts",
      "line": 39,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error sending WhatsApp message:', error)"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/communication.ts",
      "line": 90,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error sending SMS:', error)"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/communication.ts",
      "line": 165,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error fetching communication logs:', error)"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/communication.ts",
      "line": 179,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error fetching communication stats:', error)"
    },
    {
      "type": "ENV_VAR",
      "file": "src/lib/csp.ts",
      "line": 197,
      "message": "Environment variable usage",
      "severity": "INFO",
      "recommendation": "Ensure environment variables are properly secured",
      "content": "if (process.env.NODE_ENV === 'development') {"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/csp.ts",
      "line": 208,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.warn('CSP: No Content Security Policy found');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/csp.ts",
      "line": 215,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.warn('CSP: Inline script without nonce detected', script);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/csp.ts",
      "line": 222,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.warn('CSP: Inline style without nonce detected', style);"
    },
    {
      "type": "ENV_VAR",
      "file": "src/lib/csp.ts",
      "line": 266,
      "message": "Environment variable usage",
      "severity": "INFO",
      "recommendation": "Ensure environment variables are properly secured",
      "content": "if (process.env.NODE_ENV === 'development') {"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/csp.ts",
      "line": 267,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('CSP Violation:', violation);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/email-templates/waitlist-templates.ts",
      "line": 243,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('Email to send:', {"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/email-templates/waitlist-templates.ts",
      "line": 254,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('SMS to send:', {"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/email-templates-new.ts",
      "line": 1100,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.warn(`No email templates found for language: ${language}`);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/email-templates-new.ts",
      "line": 1110,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.warn(`No email template found for type: ${type}`);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/email-templates-new.ts",
      "line": 1124,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.warn(`No SMS templates found for language: ${language}`);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/email-templates-new.ts",
      "line": 1132,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.warn(`No SMS template found for type: ${type}`);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/email-templates.ts",
      "line": 322,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.warn(`Template ${templateType} not found for language ${language}, falling back to English`);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/email-templates.ts",
      "line": 346,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.warn(`SMS template ${templateType} not found for language ${language}, falling back to English`);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/env-validation.ts",
      "line": 432,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Production environment validation failed:', validation);"
    },
    {
      "type": "ENV_VAR",
      "file": "src/lib/env.ts",
      "line": 55,
      "message": "Environment variable usage",
      "severity": "INFO",
      "recommendation": "Ensure environment variables are properly secured",
      "content": "VITE_ENABLE_ANALYTICS: process.env.VITE_ENABLE_ANALYTICS || 'false',"
    },
    {
      "type": "ENV_VAR",
      "file": "src/lib/env.ts",
      "line": 56,
      "message": "Environment variable usage",
      "severity": "INFO",
      "recommendation": "Ensure environment variables are properly secured",
      "content": "VITE_ENABLE_AI: process.env.VITE_ENABLE_AI || 'true',"
    },
    {
      "type": "ENV_VAR",
      "file": "src/lib/env.ts",
      "line": 57,
      "message": "Environment variable usage",
      "severity": "INFO",
      "recommendation": "Ensure environment variables are properly secured",
      "content": "VITE_ENABLE_BOOKING: process.env.VITE_ENABLE_BOOKING || 'true',"
    },
    {
      "type": "ENV_VAR",
      "file": "src/lib/env.ts",
      "line": 58,
      "message": "Environment variable usage",
      "severity": "INFO",
      "recommendation": "Ensure environment variables are properly secured",
      "content": "VITE_ENABLE_REVIEWS: process.env.VITE_ENABLE_REVIEWS || 'true',"
    },
    {
      "type": "ENV_VAR",
      "file": "src/lib/env.ts",
      "line": 59,
      "message": "Environment variable usage",
      "severity": "INFO",
      "recommendation": "Ensure environment variables are properly secured",
      "content": "VITE_ENABLE_PAYMENT: process.env.VITE_ENABLE_PAYMENT || 'false',"
    },
    {
      "type": "ENV_VAR",
      "file": "src/lib/env.ts",
      "line": 60,
      "message": "Environment variable usage",
      "severity": "INFO",
      "recommendation": "Ensure environment variables are properly secured",
      "content": "VITE_ENABLE_SW: process.env.VITE_ENABLE_SW || 'true',"
    },
    {
      "type": "ENV_VAR",
      "file": "src/lib/env.ts",
      "line": 61,
      "message": "Environment variable usage",
      "severity": "INFO",
      "recommendation": "Ensure environment variables are properly secured",
      "content": "VITE_DEBUG_MODE: process.env.VITE_DEBUG_MODE || 'false',"
    },
    {
      "type": "ENV_VAR",
      "file": "src/lib/env.ts",
      "line": 62,
      "message": "Environment variable usage",
      "severity": "INFO",
      "recommendation": "Ensure environment variables are properly secured",
      "content": "VITE_ENABLE_MOCKS: process.env.VITE_ENABLE_MOCKS || 'false',"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/env.ts",
      "line": 66,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('❌ Invalid environment variables:');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/env.ts",
      "line": 68,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error(`  ${err.path.join('.')}: ${err.message}`);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/health-check.ts",
      "line": 103,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('Health monitoring started');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/health-check.ts",
      "line": 113,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('Health monitoring stopped');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/health-check.ts",
      "line": 165,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Health check failed:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/health-check.ts",
      "line": 1066,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to report health results:', error);"
    },
    {
      "type": "ENV_VAR",
      "file": "src/lib/i18n-utils.ts",
      "line": 289,
      "message": "Environment variable usage",
      "severity": "INFO",
      "recommendation": "Ensure environment variables are properly secured",
      "content": "if (process.env.NODE_ENV === 'development') {"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/logger.ts",
      "line": 107,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to send logs:', response.statusText);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/logger.ts",
      "line": 110,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error sending logs:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/logger.ts",
      "line": 155,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.warn(`[WARN] ${message}`, context);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/logger.ts",
      "line": 169,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error(`[ERROR] ${message}`, context, error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/memoization.tsx",
      "line": 140,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.warn("
    },
    {
      "type": "ENV_VAR",
      "file": "src/lib/meta-conversions-api.ts",
      "line": 577,
      "message": "Environment variable usage",
      "severity": "INFO",
      "recommendation": "Ensure environment variables are properly secured",
      "content": "accessToken: process.env.NEXT_PUBLIC_META_ACCESS_TOKEN || '',"
    },
    {
      "type": "ENV_VAR",
      "file": "src/lib/meta-conversions-api.ts",
      "line": 578,
      "message": "Environment variable usage",
      "severity": "INFO",
      "recommendation": "Ensure environment variables are properly secured",
      "content": "pixelId: process.env.NEXT_PUBLIC_META_PIXEL_ID || '',"
    },
    {
      "type": "ENV_VAR",
      "file": "src/lib/meta-conversions-api.ts",
      "line": 579,
      "message": "Environment variable usage",
      "severity": "INFO",
      "recommendation": "Ensure environment variables are properly secured",
      "content": "testEventCode: process.env.NEXT_PUBLIC_META_TEST_CODE,"
    },
    {
      "type": "ENV_VAR",
      "file": "src/lib/meta-conversions-api.ts",
      "line": 580,
      "message": "Environment variable usage",
      "severity": "INFO",
      "recommendation": "Ensure environment variables are properly secured",
      "content": "apiVersion: process.env.NEXT_PUBLIC_META_API_VERSION || 'v18.0',"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/meta-conversions-api.ts",
      "line": 643,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error sending conversion event:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/monitoring.ts",
      "line": 92,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('Production monitoring initialized');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/monitoring.ts",
      "line": 126,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.warn('Web Vitals not loaded:', err);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/monitoring.ts",
      "line": 380,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.warn('Cache monitoring error:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/monitoring.ts",
      "line": 458,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to report metric:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/monitoring.ts",
      "line": 477,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to report event:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/monitoring.ts",
      "line": 498,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to report error:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/monitoring.ts",
      "line": 522,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to send alert:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/monitoring.ts",
      "line": 555,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to send metrics report:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/optimistic-updates.tsx",
      "line": 396,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.warn(`Optimistic operation failed, retrying (${retries}/${maxRetries})...`);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/optimistic-updates.tsx",
      "line": 399,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Optimistic operation failed after all retries:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/optimistic-updates.tsx",
      "line": 412,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Rolling back optimistic update:', error?.message);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/optimistic-updates.tsx",
      "line": 486,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to load data:', error);"
    },
    {
      "type": "ENV_VAR",
      "file": "src/lib/payment-security.ts",
      "line": 25,
      "message": "Environment variable usage",
      "severity": "INFO",
      "recommendation": "Ensure environment variables are properly secured",
      "content": "webhookSecret: process.env.STRIPE_WEBHOOK_SECRET || '',"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/performance.ts",
      "line": 19,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('Performance monitoring initialized');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/performance.ts",
      "line": 22,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.warn('Performance monitoring initialization failed:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/performance.ts",
      "line": 155,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log(`[Performance] ${metric.name}:`, metric.value, metric.rating);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/push/notificationManager.ts",
      "line": 38,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.warn('Push notifications are not supported');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/push/notificationManager.ts",
      "line": 46,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error initializing push notifications:', error);"
    },
    {
      "type": "ENV_VAR",
      "file": "src/lib/push/notificationManager.ts",
      "line": 68,
      "message": "Environment variable usage",
      "severity": "INFO",
      "recommendation": "Ensure environment variables are properly secured",
      "content": "const vapidPublicKey = process.env.VITE_VAPID_PUBLIC_KEY;"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/push/notificationManager.ts",
      "line": 83,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error subscribing to push notifications:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/push/notificationManager.ts",
      "line": 99,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error unsubscribing from push notifications:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/push/notificationManager.ts",
      "line": 130,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error saving subscription:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/push/notificationManager.ts",
      "line": 144,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error removing subscription:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/push/notificationManager.ts",
      "line": 172,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error sending notification:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/push/notificationManager.ts",
      "line": 196,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error sending direct notification:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/push/notificationManager.ts",
      "line": 264,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error getting template:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/push/notificationManager.ts",
      "line": 314,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error scheduling notification:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/push/notificationManager.ts",
      "line": 332,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error canceling scheduled notification:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/pwa.tsx",
      "line": 64,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('Service Worker registered:', registration);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/pwa.tsx",
      "line": 67,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Service Worker registration failed:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/pwa.tsx",
      "line": 98,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('PWA installation accepted');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/pwa.tsx",
      "line": 130,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('Push subscription successful:', subscription);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/pwa.tsx",
      "line": 133,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Push subscription failed:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/pwa.tsx",
      "line": 146,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('Unsubscribed from push notifications');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/pwa.tsx",
      "line": 149,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Unsubscribe failed:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/pwa.tsx",
      "line": 243,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Sync registration failed:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/pwa.tsx",
      "line": 261,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Background sync registration failed:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/pwa.tsx",
      "line": 277,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error(`Failed to cache ${url}:`, error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/redis-cache.ts",
      "line": 144,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('Redis cache initialized (via Supabase)');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/redis-cache.ts",
      "line": 146,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.warn('Redis initialization failed, using fallback cache:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/redis-cache.ts",
      "line": 151,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('Using fallback cache (client-side)');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/redis-cache.ts",
      "line": 188,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Cache get error:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/redis-cache.ts",
      "line": 226,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Cache set error:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/redis-cache.ts",
      "line": 247,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Cache delete error:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/redis-cache.ts",
      "line": 267,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log(`Cleared cache entries for tag: ${tag}`);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/redis-cache.ts",
      "line": 270,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Cache clear by tag error:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/redis-cache.ts",
      "line": 333,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error(`Cache warming failed for key ${key}:`, error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/redis-cache.ts",
      "line": 366,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Cache clear error:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/redis-cache.ts",
      "line": 572,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('Cache warmed up');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/redis-cache.ts",
      "line": 574,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Cache warm-up failed:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/redis-cache.ts",
      "line": 579,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('Redis caching initialized');"
    },
    {
      "type": "ENV_VAR",
      "file": "src/lib/reliability/alerting.ts",
      "line": 248,
      "message": "Environment variable usage",
      "severity": "INFO",
      "recommendation": "Ensure environment variables are properly secured",
      "content": "webhook: process.env.SLACK_WEBHOOK_URL,"
    },
    {
      "type": "ENV_VAR",
      "file": "src/lib/reliability/alerting.ts",
      "line": 260,
      "message": "Environment variable usage",
      "severity": "INFO",
      "recommendation": "Ensure environment variables are properly secured",
      "content": "webhook: process.env.PAGERDUTY_WEBHOOK_URL,"
    },
    {
      "type": "ENV_VAR",
      "file": "src/lib/reliability/alerting.ts",
      "line": 261,
      "message": "Environment variable usage",
      "severity": "INFO",
      "recommendation": "Ensure environment variables are properly secured",
      "content": "serviceKey: process.env.PAGERDUTY_SERVICE_KEY"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/reliability/alerting.ts",
      "line": 427,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to store alert:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/reliability/alerting.ts",
      "line": 491,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error(`Failed to send ${channel.type} notification:`, error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/reliability/alerting.ts",
      "line": 497,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log(`Email notification for alert ${alert.id}: ${alert.message}`);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/reliability/alerting.ts",
      "line": 545,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log(`SMS notification for critical alert ${alert.id}: ${alert.message}`);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/reliability/alerting.ts",
      "line": 550,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log(`Escalating alert ${alert.id} to ${target}`);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/reliability/alerting.ts",
      "line": 555,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log(`Suppressing alert ${alert.id} for ${maxDuration} minutes`);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/reliability/alerting.ts",
      "line": 615,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to update alert:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/reliability/alerting.ts",
      "line": 621,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log(`Alert ${alert.id} has been resolved`);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/reliability/alerting.ts",
      "line": 645,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('Evaluating alert rules...');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/reliability/alerting.ts",
      "line": 701,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to get alert stats:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/reliability/audit-logger.ts",
      "line": 181,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to flush audit events:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/reliability/audit-logger.ts",
      "line": 215,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to store audit events:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/reliability/audit-logger.ts",
      "line": 275,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to query audit events:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/reliability/audit-logger.ts",
      "line": 292,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to get audit event:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/reliability/audit-logger.ts",
      "line": 362,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to get audit stats:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/reliability/audit-logger.ts",
      "line": 446,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to create compliance report:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/reliability/audit-logger.ts",
      "line": 461,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to export audit events:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/reliability/audit-logger.ts",
      "line": 505,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log(`Cleaned up audit events older than ${retentionDays} days`);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/reliability/audit-logger.ts",
      "line": 507,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to cleanup audit events:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/reliability/automated-recovery.ts",
      "line": 240,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error in automated recovery:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/reliability/automated-recovery.ts",
      "line": 296,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log(`Executing recovery action: ${action.name}`);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/reliability/automated-recovery.ts",
      "line": 400,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to log recovery attempt:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/reliability/circuit-breaker.ts",
      "line": 182,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.warn(`Circuit breaker '${this.name}' transitioned from ${oldState} to ${newState}`);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/reliability/dependency-monitor.ts",
      "line": 292,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to store dependency metrics:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/reliability/dependency-monitor.ts",
      "line": 333,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error(`Error monitoring dependency ${depName}:`, error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/reliability/dependency-monitor.ts",
      "line": 373,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to fetch historical metrics:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/reliability/error-analyzer.ts",
      "line": 542,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('Potential new error pattern:', {"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/reliability/health-scorer.ts",
      "line": 192,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to store health score:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/reliability/health-scorer.ts",
      "line": 215,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to fetch historical scores:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/reliability/recovery-automation.ts",
      "line": 455,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log(`[Recovery] Executing action: ${action.name}`, {"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/reliability/recovery-automation.ts",
      "line": 567,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log(`[Recovery] Restarting service: ${step.target}`);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/reliability/recovery-automation.ts",
      "line": 574,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log(`[Recovery] Scaling ${step.target}: ${JSON.stringify(step.parameters)}`);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/reliability/recovery-automation.ts",
      "line": 583,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log(`[Recovery] Sending notification to ${channels.join(', ')}: ${message}`);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/reliability/recovery-automation.ts",
      "line": 595,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log(`[Recovery] Executing custom action: ${JSON.stringify(step.parameters)}`);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/reliability/recovery-automation.ts",
      "line": 601,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log(`[Recovery] Executing script: ${step.target}`);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/reliability/recovery-automation.ts",
      "line": 635,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log(`[Recovery] Rolling back action: ${action.name}`);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/reliability/recovery-automation.ts",
      "line": 641,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error(`[Recovery] Rollback step failed:`, error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/reliability/recovery-automation.ts",
      "line": 670,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log(`[Recovery] Notification: ${message}`);"
    },
    {
      "type": "ENV_VAR",
      "file": "src/lib/reliability/reliability-manager.ts",
      "line": 188,
      "message": "Environment variable usage",
      "severity": "INFO",
      "recommendation": "Ensure environment variables are properly secured",
      "content": "if (process.env.SUPABASE_URL) {"
    },
    {
      "type": "ENV_VAR",
      "file": "src/lib/reliability/reliability-manager.ts",
      "line": 194,
      "message": "Environment variable usage",
      "severity": "INFO",
      "recommendation": "Ensure environment variables are properly secured",
      "content": "check: () => HealthChecks.database(process.env.SUPABASE_URL!)"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/reliability/reliability-manager.ts",
      "line": 460,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('Initiating automatic recovery...');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/reliability/reliability-manager.ts",
      "line": 465,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log(`Resetting circuit breaker: ${name}`);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/reliability/reliability-manager.ts",
      "line": 473,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log(`Clearing stuck queue: ${name}`);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/reliability/reliability-manager.ts",
      "line": 481,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('Clearing old error history');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/reliability/reliability-manager.ts",
      "line": 541,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "reliabilityManager.start().catch(console.error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/reliability/reliability-manager.ts",
      "line": 546,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "reliabilityManager.start().catch(console.error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/reliability/reliability-manager.ts",
      "line": 549,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "reliabilityManager.start().catch(console.error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/reliability/retry-manager.ts",
      "line": 87,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.warn(`Retry attempt ${attempt}/${config.maxAttempts} for ${key}, delay: ${delay}ms`, {"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/reliability/retry-manager.ts",
      "line": 254,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.warn(`Circuit breaker OPEN for ${this.key} after ${this.failureCount} failures`);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/reliability/slo-monitor.ts",
      "line": 160,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to record SLO event:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/reliability/slo-monitor.ts",
      "line": 222,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to calculate error budget:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/reliability/slo-monitor.ts",
      "line": 331,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to store error budget status:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/reliability/slo-monitor.ts",
      "line": 357,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to store SLO alert:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/reliability/slo-monitor.ts",
      "line": 360,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.warn('SLO Alert:', alertData);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/reliability/slo-monitor.ts",
      "line": 371,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error(`Failed to get error budget for SLO ${sloId}:`, error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/reliability/slo-monitor.ts",
      "line": 400,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to get SLO history:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/reliability/slo-monitor.ts",
      "line": 543,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error(`Error monitoring SLO ${sloId}:`, error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/resend.ts",
      "line": 23,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error sending newsletter:', error)"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/resend.ts",
      "line": 36,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error sending booking confirmation:', error)"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/resend.ts",
      "line": 57,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error subscribing to newsletter:', error)"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/resend.ts",
      "line": 76,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error unsubscribing from newsletter:', error)"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/resend.ts",
      "line": 90,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error getting subscriber count:', error)"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/resend.ts",
      "line": 105,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error getting subscribers:', error)"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/review-fraud-detection.ts",
      "line": 535,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error logging fraud detection:', error);"
    },
    {
      "type": "ENV_VAR",
      "file": "src/lib/review-security.ts",
      "line": 95,
      "message": "Environment variable usage",
      "severity": "INFO",
      "recommendation": "Ensure environment variables are properly secured",
      "content": "const recaptchaSecret = process.env.RECAPTCHA_SECRET_KEY;"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/review-security.ts",
      "line": 118,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('CAPTCHA verification failed:', error);"
    },
    {
      "type": "ENV_VAR",
      "file": "src/lib/review-security.ts",
      "line": 270,
      "message": "Environment variable usage",
      "severity": "INFO",
      "recommendation": "Ensure environment variables are properly secured",
      "content": "} else if (process.env.NODE_ENV === 'production') {"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/review-security.ts",
      "line": 432,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error logging security check:', error);"
    },
    {
      "type": "ENV_VAR",
      "file": "src/lib/secure-credentials.ts",
      "line": 13,
      "message": "Environment variable usage",
      "severity": "INFO",
      "recommendation": "Ensure environment variables are properly secured",
      "content": "const ENCRYPTION_KEY = process.env.CREDENTIALS_ENCRYPTION_KEY || crypto.randomBytes(32);"
    },
    {
      "type": "ENV_VAR",
      "file": "src/lib/secure-credentials.ts",
      "line": 86,
      "message": "Environment variable usage",
      "severity": "INFO",
      "recommendation": "Ensure environment variables are properly secured",
      "content": "process.env.SUPABASE_URL!,"
    },
    {
      "type": "ENV_VAR",
      "file": "src/lib/secure-credentials.ts",
      "line": 87,
      "message": "Environment variable usage",
      "severity": "INFO",
      "recommendation": "Ensure environment variables are properly secured",
      "content": "process.env.SUPABASE_SERVICE_ROLE_KEY!"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/secure-credentials.ts",
      "line": 146,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error(`Credentials not found for ${service} in ${environment}`);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/secure-credentials.ts",
      "line": 167,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error(`Failed to decrypt credentials for ${service}:`, decryptError);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/secure-credentials.ts",
      "line": 180,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log(`Rotating credentials for ${service} in ${environment}`);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/secure-credentials.ts",
      "line": 233,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.warn(`No validation method for service: ${service}`);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/secure-error-handler.ts",
      "line": 358,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Secure Error:', logEntry);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/secure-error-handler.ts",
      "line": 510,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('Monitoring Service:', logEntry);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/security-audit.ts",
      "line": 65,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('Security Audit:', auditEvent);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/security-audit.ts",
      "line": 373,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.warn('Failed to load security audit events:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/security-audit.ts",
      "line": 382,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.warn('Failed to persist security audit events:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/security-audit.ts",
      "line": 405,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('CRITICAL SECURITY ALERT:', event);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/security-monitoring.ts",
      "line": 132,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('Security monitoring started');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/security-monitoring.ts",
      "line": 143,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('Security monitoring stopped');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/security-monitoring.ts",
      "line": 505,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('CRITICAL SECURITY ALERT:', alert);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/security-monitoring.ts",
      "line": 600,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.warn('Failed to persist security monitoring data:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/security-monitoring.ts",
      "line": 616,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.warn('Failed to load security monitoring data:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/security.ts",
      "line": 145,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.warn('Security Event:', logEntry);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/security.ts",
      "line": 156,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to report security event:', err);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/security.ts",
      "line": 208,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "const originalLog = console.log;"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/security.ts",
      "line": 209,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log = function(...args) {"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/sentry.ts",
      "line": 42,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.warn('Sentry DSN not provided, skipping initialization');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/sentry.ts",
      "line": 123,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('Sentry initialized successfully');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/sentry.ts",
      "line": 283,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error:', error, context);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/sentry.ts",
      "line": 298,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log(`[${level.toUpperCase()}] ${message}`, context);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/seo/analytics.ts",
      "line": 507,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('Search Console tracking initialized');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/seo/analytics.ts",
      "line": 525,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('Core Web Vitals tracking initialized');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/seo/analytics.ts",
      "line": 531,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('Ranking monitor initialized');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/seo/examples.ts",
      "line": 125,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('Meta tags need optimization:', testResult.issues);"
    },
    {
      "type": "ENV_VAR",
      "file": "src/lib/seo/examples.ts",
      "line": 389,
      "message": "Environment variable usage",
      "severity": "INFO",
      "recommendation": "Ensure environment variables are properly secured",
      "content": "apiKey: process.env.GSC_API_KEY!,"
    },
    {
      "type": "CODE_COMMENT",
      "file": "src/lib/seo/examples.ts",
      "line": 393,
      "message": "Development comment detected",
      "severity": "INFO",
      "recommendation": "Address TODO/FIXME comments before production",
      "content": "trackingId: 'GA-XXXXXXXX',"
    },
    {
      "type": "ENV_VAR",
      "file": "src/lib/seo/examples.ts",
      "line": 394,
      "message": "Environment variable usage",
      "severity": "INFO",
      "recommendation": "Ensure environment variables are properly secured",
      "content": "apiKey: process.env.GA_API_KEY!"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/seo/examples.ts",
      "line": 406,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.warn('Critical SEO alerts:', criticalAlerts);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/seo/examples.ts",
      "line": 416,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.warn('Multiple keywords with low rankings:', lowPerformingKeywords);"
    },
    {
      "type": "ENV_VAR",
      "file": "src/lib/service-health-monitor.ts",
      "line": 64,
      "message": "Environment variable usage",
      "severity": "INFO",
      "recommendation": "Ensure environment variables are properly secured",
      "content": "process.env.SUPABASE_URL!,"
    },
    {
      "type": "ENV_VAR",
      "file": "src/lib/service-health-monitor.ts",
      "line": 65,
      "message": "Environment variable usage",
      "severity": "INFO",
      "recommendation": "Ensure environment variables are properly secured",
      "content": "process.env.SUPABASE_SERVICE_ROLE_KEY!"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/service-health-monitor.ts",
      "line": 74,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('Health monitor already running');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/service-health-monitor.ts",
      "line": 79,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('Starting service health monitor...');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/service-health-monitor.ts",
      "line": 103,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log(`Health monitor started for ${services.length} services`);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/service-health-monitor.ts",
      "line": 118,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('Service health monitor stopped');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/service-health-monitor.ts",
      "line": 487,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to store health check result:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/service-health-monitor.ts",
      "line": 538,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to get service health:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/service-health-monitor.ts",
      "line": 624,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to get service metrics:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/service-health-monitor.ts",
      "line": 671,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to evaluate alerts:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/service-health-monitor.ts",
      "line": 727,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('Email alert sent:', alert);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/service-health-monitor.ts",
      "line": 735,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('Slack alert sent:', alert);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/service-health-monitor.ts",
      "line": 743,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('Webhook alert sent:', alert);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/service-health-monitor.ts",
      "line": 757,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to aggregate metrics:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/service-health-monitor.ts",
      "line": 790,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to process alerts:', error);"
    },
    {
      "type": "ENV_VAR",
      "file": "src/lib/service-health-monitor.ts",
      "line": 827,
      "message": "Environment variable usage",
      "severity": "INFO",
      "recommendation": "Ensure environment variables are properly secured",
      "content": "if (process.env.NODE_ENV === 'production') {"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/service-health-monitor.ts",
      "line": 828,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "serviceHealthMonitor.start().catch(console.error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/translations/TranslationAutomation.tsx",
      "line": 74,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error scanning for untranslated content:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/translations/TranslationAutomation.tsx",
      "line": 103,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error checking translation consistency:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/translations/TranslationAutomation.tsx",
      "line": 166,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error creating tasks from untranslated content:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/translations/TranslationAutomation.tsx",
      "line": 330,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error scanning database content:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/translations/TranslationAutomation.tsx",
      "line": 373,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error scanning blog content:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/translations/TranslationAutomation.tsx",
      "line": 392,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error finding TM matches:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/translations/TranslationMemory.tsx",
      "line": 85,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error searching translation memory:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/translations/TranslationMemory.tsx",
      "line": 130,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error adding translation:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/translations/TranslationMemory.tsx",
      "line": 158,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error updating translation:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/translations/TranslationMemory.tsx",
      "line": 180,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error updating usage:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/translations/TranslationMemory.tsx",
      "line": 221,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error getting stats:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/translations/TranslationMemory.tsx",
      "line": 320,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error exporting translations:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/translations/TranslationMemory.tsx",
      "line": 382,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error importing translation:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/translations/TranslationMemory.tsx",
      "line": 391,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error parsing import content:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/translations/TranslationMemory.tsx",
      "line": 753,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error in concordance search:', error);"
    },
    {
      "type": "CODE_COMMENT",
      "file": "src/lib/translations/TranslationMemory.tsx",
      "line": 804,
      "message": "Development comment detected",
      "severity": "INFO",
      "recommendation": "Address TODO/FIXME comments before production",
      "content": "usageTrends: [] // TODO: Implement usage trends with time series data"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/translations/TranslationMemory.tsx",
      "line": 807,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error getting detailed stats:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/translations/TranslationWorkflow.tsx",
      "line": 91,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error creating project:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/translations/TranslationWorkflow.tsx",
      "line": 136,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error adding task:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/translations/TranslationWorkflow.tsx",
      "line": 180,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error getting available tasks:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/translations/TranslationWorkflow.tsx",
      "line": 204,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error claiming task:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/translations/TranslationWorkflow.tsx",
      "line": 269,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error submitting translation:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/translations/TranslationWorkflow.tsx",
      "line": 343,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error approving translation:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/translations/TranslationWorkflow.tsx",
      "line": 382,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error rejecting translation:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/translations/TranslationWorkflow.tsx",
      "line": 432,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error getting translator stats:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/translations/TranslationWorkflow.tsx",
      "line": 469,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error updating project progress:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/translations/TranslationWorkflow.tsx",
      "line": 558,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error exporting project:', error);"
    },
    {
      "type": "CODE_COMMENT",
      "file": "src/lib/vat/nip-validation.ts",
      "line": 84,
      "message": "Development comment detected",
      "severity": "INFO",
      "recommendation": "Address TODO/FIXME comments before production",
      "content": "* Format NIP with standard formatting (XXX-XXX-XX-XX)"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/whatsapp-business.ts",
      "line": 608,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error processing WhatsApp message:', error)"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/whatsapp-business.ts",
      "line": 618,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('Template status update:', value)"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/whatsapp-business.ts",
      "line": 626,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('Phone number update:', value)"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/whatsapp-business.ts",
      "line": 634,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('Account update:', value)"
    },
    {
      "type": "ENV_VAR",
      "file": "src/lib/whatsapp-business.ts",
      "line": 754,
      "message": "Environment variable usage",
      "severity": "INFO",
      "recommendation": "Ensure environment variables are properly secured",
      "content": "phoneNumberId: config?.phoneNumberId || process.env.WHATSAPP_PHONE_NUMBER_ID || '',"
    },
    {
      "type": "ENV_VAR",
      "file": "src/lib/whatsapp-business.ts",
      "line": 755,
      "message": "Environment variable usage",
      "severity": "INFO",
      "recommendation": "Ensure environment variables are properly secured",
      "content": "accessToken: config?.accessToken || process.env.WHATSAPP_ACCESS_TOKEN || '',"
    },
    {
      "type": "ENV_VAR",
      "file": "src/lib/whatsapp-business.ts",
      "line": 756,
      "message": "Environment variable usage",
      "severity": "INFO",
      "recommendation": "Ensure environment variables are properly secured",
      "content": "version: config?.version || process.env.WHATSAPP_API_VERSION || 'v18.0',"
    },
    {
      "type": "ENV_VAR",
      "file": "src/lib/whatsapp-business.ts",
      "line": 757,
      "message": "Environment variable usage",
      "severity": "INFO",
      "recommendation": "Ensure environment variables are properly secured",
      "content": "wabaId: config?.wabaId || process.env.WHATSAPP_WABA_ID || '',"
    },
    {
      "type": "ENV_VAR",
      "file": "src/lib/whatsapp-business.ts",
      "line": 758,
      "message": "Environment variable usage",
      "severity": "INFO",
      "recommendation": "Ensure environment variables are properly secured",
      "content": "webhookVerifyToken: config?.webhookVerifyToken || process.env.WHATSAPP_WEBHOOK_VERIFY_TOKEN"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/lib/whatsapp-business.ts",
      "line": 876,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.warn('WhatsApp API not initialized:', error)"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/pages/DemoSEO.tsx",
      "line": 33,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('Slug validation:', validation);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/pages/DemoSEO.tsx",
      "line": 37,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('Selected translation:', translation);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/pages/DemoSEO.tsx",
      "line": 158,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "onClick={() => console.log('Check console for meta tags')}"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/pages/admin/analytics/Dashboard.tsx",
      "line": 212,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error fetching KPI data:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/pages/admin/analytics/Reports.tsx",
      "line": 152,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error fetching report templates:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/pages/admin/analytics/Reports.tsx",
      "line": 197,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error creating template:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/pages/admin/analytics/Reports.tsx",
      "line": 249,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error generating report:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/pages/admin/analytics/Reports.tsx",
      "line": 288,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('Sending report to recipients:', template.recipients);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/pages/admin/analytics/Reports.tsx",
      "line": 289,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('Report data:', reportData);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/pages/admin/analytics/Reports.tsx",
      "line": 296,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error sending report:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/pages/admin/analytics/Reports.tsx",
      "line": 321,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error deleting template:', error);"
    },
    {
      "type": "ENV_VAR",
      "file": "src/pages/api/admin/service-alerts.ts",
      "line": 9,
      "message": "Environment variable usage",
      "severity": "INFO",
      "recommendation": "Ensure environment variables are properly secured",
      "content": "process.env.SUPABASE_URL!,"
    },
    {
      "type": "ENV_VAR",
      "file": "src/pages/api/admin/service-alerts.ts",
      "line": 10,
      "message": "Environment variable usage",
      "severity": "INFO",
      "recommendation": "Ensure environment variables are properly secured",
      "content": "process.env.SUPABASE_SERVICE_ROLE_KEY!"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/pages/api/admin/service-alerts.ts",
      "line": 42,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to fetch service alerts:', error);"
    },
    {
      "type": "ENV_VAR",
      "file": "src/pages/api/admin/service-health.ts",
      "line": 9,
      "message": "Environment variable usage",
      "severity": "INFO",
      "recommendation": "Ensure environment variables are properly secured",
      "content": "process.env.SUPABASE_URL!,"
    },
    {
      "type": "ENV_VAR",
      "file": "src/pages/api/admin/service-health.ts",
      "line": 10,
      "message": "Environment variable usage",
      "severity": "INFO",
      "recommendation": "Ensure environment variables are properly secured",
      "content": "process.env.SUPABASE_SERVICE_ROLE_KEY!"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/pages/api/admin/service-health.ts",
      "line": 41,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to fetch service health:', error);"
    },
    {
      "type": "ENV_VAR",
      "file": "src/pages/api/admin/service-metrics.ts",
      "line": 9,
      "message": "Environment variable usage",
      "severity": "INFO",
      "recommendation": "Ensure environment variables are properly secured",
      "content": "process.env.SUPABASE_URL!,"
    },
    {
      "type": "ENV_VAR",
      "file": "src/pages/api/admin/service-metrics.ts",
      "line": 10,
      "message": "Environment variable usage",
      "severity": "INFO",
      "recommendation": "Ensure environment variables are properly secured",
      "content": "process.env.SUPABASE_SERVICE_ROLE_KEY!"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/pages/api/admin/service-metrics.ts",
      "line": 46,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to fetch service metrics:', error);"
    },
    {
      "type": "ENV_VAR",
      "file": "src/pages/api/create-payment-intent.ts",
      "line": 9,
      "message": "Environment variable usage",
      "severity": "INFO",
      "recommendation": "Ensure environment variables are properly secured",
      "content": "process.env.NEXT_PUBLIC_SUPABASE_URL!,"
    },
    {
      "type": "ENV_VAR",
      "file": "src/pages/api/create-payment-intent.ts",
      "line": 10,
      "message": "Environment variable usage",
      "severity": "INFO",
      "recommendation": "Ensure environment variables are properly secured",
      "content": "process.env.SUPABASE_SERVICE_ROLE_KEY!"
    },
    {
      "type": "ENV_VAR",
      "file": "src/pages/api/create-payment-intent.ts",
      "line": 14,
      "message": "Environment variable usage",
      "severity": "INFO",
      "recommendation": "Ensure environment variables are properly secured",
      "content": "const stripe = new Stripe(process.env.STRIPE_SECRET_KEY!, {"
    },
    {
      "type": "ENV_VAR",
      "file": "src/pages/api/webhooks/booksy.ts",
      "line": 12,
      "message": "Environment variable usage",
      "severity": "INFO",
      "recommendation": "Ensure environment variables are properly secured",
      "content": "process.env.SUPABASE_URL!,"
    },
    {
      "type": "ENV_VAR",
      "file": "src/pages/api/webhooks/booksy.ts",
      "line": 13,
      "message": "Environment variable usage",
      "severity": "INFO",
      "recommendation": "Ensure environment variables are properly secured",
      "content": "process.env.SUPABASE_SERVICE_ROLE_KEY!"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/pages/api/webhooks/booksy.ts",
      "line": 29,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Missing webhook signature');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/pages/api/webhooks/booksy.ts",
      "line": 36,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Invalid webhook signature');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/pages/api/webhooks/booksy.ts",
      "line": 56,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Webhook processing error:', error);"
    },
    {
      "type": "ENV_VAR",
      "file": "src/pages/api/webhooks/stripe.ts",
      "line": 8,
      "message": "Environment variable usage",
      "severity": "INFO",
      "recommendation": "Ensure environment variables are properly secured",
      "content": "const stripe = new Stripe(process.env.STRIPE_SECRET_KEY!, {"
    },
    {
      "type": "ENV_VAR",
      "file": "src/pages/api/webhooks/stripe.ts",
      "line": 12,
      "message": "Environment variable usage",
      "severity": "INFO",
      "recommendation": "Ensure environment variables are properly secured",
      "content": "const webhookSecret = process.env.STRIPE_WEBHOOK_SECRET!;"
    },
    {
      "type": "ENV_VAR",
      "file": "src/pages/api/webhooks/stripe.ts",
      "line": 16,
      "message": "Environment variable usage",
      "severity": "INFO",
      "recommendation": "Ensure environment variables are properly secured",
      "content": "process.env.NEXT_PUBLIC_SUPABASE_URL!,"
    },
    {
      "type": "ENV_VAR",
      "file": "src/pages/api/webhooks/stripe.ts",
      "line": 17,
      "message": "Environment variable usage",
      "severity": "INFO",
      "recommendation": "Ensure environment variables are properly secured",
      "content": "process.env.SUPABASE_SERVICE_ROLE_KEY!"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/pages/reviews/ReviewManagement.tsx",
      "line": 90,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error loading data:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/pages/user/Profile.tsx",
      "line": 83,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error(error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/routes/api/index.ts",
      "line": 204,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('API Error:', err);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/ComplianceService.ts",
      "line": 86,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error fetching compliance requirements:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/ComplianceService.ts",
      "line": 182,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error getting tax configuration:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/ComplianceService.ts",
      "line": 319,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error checking booking compliance:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/ComplianceService.ts",
      "line": 363,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error generating compliance document:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/ComplianceService.ts",
      "line": 397,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error logging compliance event:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/ComplianceService.ts",
      "line": 482,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error generating tax invoice data:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/ComplianceService.ts",
      "line": 544,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error updating compliance requirement:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/ComplianceService.ts",
      "line": 587,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error getting compliance dashboard:', error);"
    },
    {
      "type": "ENV_VAR",
      "file": "src/services/LocationService.ts",
      "line": 85,
      "message": "Environment variable usage",
      "severity": "INFO",
      "recommendation": "Ensure environment variables are properly secured",
      "content": "private static readonly IPINFO_TOKEN = process.env.VITE_IPINFO_TOKEN;"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/ai.service.ts",
      "line": 372,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to log AI usage:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/api/base.service.ts",
      "line": 6,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "warn: (msg: string, ctx?: any) => console.warn(msg, ctx),"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/api/base.service.ts",
      "line": 7,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "error: (msg: string, err?: any, ctx?: any) => console.error(msg, err, ctx),"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/api/base.service.ts",
      "line": 10,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "errorBoundary: (error: Error, errorInfo: any) => console.error('Error boundary:', error, errorInfo)"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/api/base.service.ts",
      "line": 26,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error(`Operation ${operation} failed after ${end - start}ms:`, error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/api/bookings.ts",
      "line": 179,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error checking availability:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/api/index.ts",
      "line": 14,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('API Error:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/api/index.ts",
      "line": 25,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Unexpected error:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/api/index.ts",
      "line": 74,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('API Error after retries:', lastError);"
    },
    {
      "type": "ENV_VAR",
      "file": "src/services/api/v1/booking-routes.ts",
      "line": 24,
      "message": "Environment variable usage",
      "severity": "INFO",
      "recommendation": "Ensure environment variables are properly secured",
      "content": "origin: process.env.CORS_ORIGIN || 'http://localhost:3000',"
    },
    {
      "type": "ENV_VAR",
      "file": "src/services/api/v1/index.ts",
      "line": 15,
      "message": "Environment variable usage",
      "severity": "INFO",
      "recommendation": "Ensure environment variables are properly secured",
      "content": "origin: process.env.CORS_ORIGIN || 'http://localhost:3000',"
    },
    {
      "type": "ENV_VAR",
      "file": "src/services/api/v1/index.ts",
      "line": 57,
      "message": "Environment variable usage",
      "severity": "INFO",
      "recommendation": "Ensure environment variables are properly secured",
      "content": "documentation: process.env.API_DOCS_URL || 'https://docs.mariia-hub.com/api/v1'"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/api/v1/payment-routes.ts",
      "line": 557,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Stripe webhook error:', error);"
    },
    {
      "type": "ENV_VAR",
      "file": "src/services/api-gateway.ts",
      "line": 18,
      "message": "Environment variable usage",
      "severity": "INFO",
      "recommendation": "Ensure environment variables are properly secured",
      "content": "origin: process.env.CORS_ORIGIN || 'http://localhost:3000',"
    },
    {
      "type": "ENV_VAR",
      "file": "src/services/api-gateway.ts",
      "line": 56,
      "message": "Environment variable usage",
      "severity": "INFO",
      "recommendation": "Ensure environment variables are properly secured",
      "content": "if (process.env.NODE_ENV === 'production') {"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/api-gateway.ts",
      "line": 66,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log(`${c.req.method} ${c.req.path} - ${c.res.status} - ${duration}ms`);"
    },
    {
      "type": "ENV_VAR",
      "file": "src/services/api-gateway.ts",
      "line": 109,
      "message": "Environment variable usage",
      "severity": "INFO",
      "recommendation": "Ensure environment variables are properly secured",
      "content": "documentation: `${process.env.API_BASE_URL || 'http://localhost:3000'}/api/v1`,"
    },
    {
      "type": "ENV_VAR",
      "file": "src/services/api-gateway.ts",
      "line": 121,
      "message": "Environment variable usage",
      "severity": "INFO",
      "recommendation": "Ensure environment variables are properly secured",
      "content": "documentation: process.env.API_DOCS_URL || 'https://docs.mariia-hub.com/api',"
    },
    {
      "type": "ENV_VAR",
      "file": "src/services/api-gateway.ts",
      "line": 122,
      "message": "Environment variable usage",
      "severity": "INFO",
      "recommendation": "Ensure environment variables are properly secured",
      "content": "support: process.env.SUPPORT_EMAIL || 'support@mariia-hub.com',"
    },
    {
      "type": "ENV_VAR",
      "file": "src/services/api-gateway.ts",
      "line": 123,
      "message": "Environment variable usage",
      "severity": "INFO",
      "recommendation": "Ensure environment variables are properly secured",
      "content": "status_page: process.env.STATUS_PAGE_URL || 'https://status.mariia-hub.com'"
    },
    {
      "type": "ENV_VAR",
      "file": "src/services/api-gateway.ts",
      "line": 137,
      "message": "Environment variable usage",
      "severity": "INFO",
      "recommendation": "Ensure environment variables are properly secured",
      "content": "const isDevelopment = process.env.NODE_ENV !== 'production';"
    },
    {
      "type": "ENV_VAR",
      "file": "src/services/api-gateway.ts",
      "line": 235,
      "message": "Environment variable usage",
      "severity": "INFO",
      "recommendation": "Ensure environment variables are properly secured",
      "content": "environment: process.env.NODE_ENV || 'development'"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/api-gateway.ts",
      "line": 239,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('\\n🚀 Mariia Hub API Gateway Started');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/api-gateway.ts",
      "line": 240,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log(`📍 Server: http://${this.host}:${this.port}`);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/api-gateway.ts",
      "line": 241,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log(`📖 API Docs: http://${this.host}:${this.port}/api/v1`);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/api-gateway.ts",
      "line": 242,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log(`🔍 Health Check: http://${this.host}:${this.port}/api/v1/health`);"
    },
    {
      "type": "ENV_VAR",
      "file": "src/services/api-gateway.ts",
      "line": 243,
      "message": "Environment variable usage",
      "severity": "INFO",
      "recommendation": "Ensure environment variables are properly secured",
      "content": "console.log(`🌍 Environment: ${process.env.NODE_ENV || 'development'}`);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/api-gateway.ts",
      "line": 243,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log(`🌍 Environment: ${process.env.NODE_ENV || 'development'}`);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/api-gateway.ts",
      "line": 244,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('\\nAvailable endpoints:');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/api-gateway.ts",
      "line": 245,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('  GET  /api                    - API information');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/api-gateway.ts",
      "line": 246,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('  GET  /api/v1                - v1 API base');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/api-gateway.ts",
      "line": 247,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('  GET  /api/v1/health         - Health check');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/api-gateway.ts",
      "line": 248,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('  GET  /api/v1/services        - Services');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/api-gateway.ts",
      "line": 249,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('  GET  /api/v1/bookings        - Bookings');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/api-gateway.ts",
      "line": 250,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('  POST /api/v1/bookings        - Create booking');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/api-gateway.ts",
      "line": 251,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('  GET  /api/v1/users           - Users');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/api-gateway.ts",
      "line": 252,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('  POST /api/v1/users/register  - User registration');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/api-gateway.ts",
      "line": 253,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('  POST /api/v1/users/login     - User login');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/api-gateway.ts",
      "line": 254,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('  GET  /api/v1/payments        - Payments');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/api-gateway.ts",
      "line": 255,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('  GET  /api/v1/admin           - Admin endpoints');"
    },
    {
      "type": "ENV_VAR",
      "file": "src/services/api-gateway.ts",
      "line": 304,
      "message": "Environment variable usage",
      "severity": "INFO",
      "recommendation": "Ensure environment variables are properly secured",
      "content": "parseInt(process.env.PORT || '8080'),"
    },
    {
      "type": "ENV_VAR",
      "file": "src/services/api-gateway.ts",
      "line": 305,
      "message": "Environment variable usage",
      "severity": "INFO",
      "recommendation": "Ensure environment variables are properly secured",
      "content": "process.env.HOST || '0.0.0.0'"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/blog.service.ts",
      "line": 99,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error fetching blog posts:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/blog.service.ts",
      "line": 131,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error fetching blog post:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/blog.service.ts",
      "line": 182,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error saving blog post:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/blog.service.ts",
      "line": 199,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error deleting blog post:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/blog.service.ts",
      "line": 227,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error publishing blog post:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/blog.service.ts",
      "line": 252,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error scheduling blog post:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/blog.service.ts",
      "line": 283,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error fetching categories:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/blog.service.ts",
      "line": 316,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error fetching tags:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/blog.service.ts",
      "line": 351,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error fetching blog analytics:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/blog.service.ts",
      "line": 408,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error fetching blog performance summary:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/blog.service.ts",
      "line": 432,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error tracking view:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/blog.service.ts",
      "line": 489,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error fetching related posts:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/blog.service.ts",
      "line": 519,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error creating version:', error);"
    },
    {
      "type": "CODE_COMMENT",
      "file": "src/services/bookingDomainService.ts",
      "line": 237,
      "message": "Development comment detected",
      "severity": "INFO",
      "recommendation": "Address TODO/FIXME comments before production",
      "content": "selected_add_ons: [], // TODO: Implement add-ons"
    },
    {
      "type": "CODE_COMMENT",
      "file": "src/services/bookingDomainService.ts",
      "line": 238,
      "message": "Development comment detected",
      "severity": "INFO",
      "recommendation": "Address TODO/FIXME comments before production",
      "content": "currency: 'PLN', // TODO: Get from user preferences"
    },
    {
      "type": "CODE_COMMENT",
      "file": "src/services/bookingDomainService.ts",
      "line": 239,
      "message": "Development comment detected",
      "severity": "INFO",
      "recommendation": "Address TODO/FIXME comments before production",
      "content": "amount_paid: service.price_from, // TODO: Calculate with add-ons"
    },
    {
      "type": "CODE_COMMENT",
      "file": "src/services/bookingDomainService.ts",
      "line": 412,
      "message": "Development comment detected",
      "severity": "INFO",
      "recommendation": "Address TODO/FIXME comments before production",
      "content": "// TODO: Implement discount logic"
    },
    {
      "type": "ENV_VAR",
      "file": "src/services/booksy-api-client.ts",
      "line": 81,
      "message": "Environment variable usage",
      "severity": "INFO",
      "recommendation": "Ensure environment variables are properly secured",
      "content": "process.env.SUPABASE_URL!,"
    },
    {
      "type": "ENV_VAR",
      "file": "src/services/booksy-api-client.ts",
      "line": 82,
      "message": "Environment variable usage",
      "severity": "INFO",
      "recommendation": "Ensure environment variables are properly secured",
      "content": "process.env.SUPABASE_SERVICE_ROLE_KEY!"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/booksy-api-client.ts",
      "line": 98,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('No Booksy credentials found');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/booksy-api-client.ts",
      "line": 105,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to authenticate with Booksy');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/booksy-api-client.ts",
      "line": 114,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to initialize Booksy client:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/booksy-api-client.ts",
      "line": 151,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Authentication failed:', error);"
    },
    {
      "type": "ENV_VAR",
      "file": "src/services/booksy-api-client.ts",
      "line": 448,
      "message": "Environment variable usage",
      "severity": "INFO",
      "recommendation": "Ensure environment variables are properly secured",
      "content": "const webhookUrl = `${process.env.NEXT_PUBLIC_SITE_URL}/api/webhooks/booksy`;"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/booksy-api-client.ts",
      "line": 470,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('Booksy webhooks configured successfully');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/booksy-api-client.ts",
      "line": 504,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.warn('No webhook secret configured');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/booksy-api-client.ts",
      "line": 682,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log(`Synced ${services.length} services from Booksy`);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/booksy-api-client.ts",
      "line": 724,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "booksyClient.initialize().catch(console.error);"
    },
    {
      "type": "ENV_VAR",
      "file": "src/services/c2paService.ts",
      "line": 145,
      "message": "Environment variable usage",
      "severity": "INFO",
      "recommendation": "Ensure environment variables are properly secured",
      "content": "'apikey': process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY || ''"
    },
    {
      "type": "ENV_VAR",
      "file": "src/services/c2paService.ts",
      "line": 192,
      "message": "Environment variable usage",
      "severity": "INFO",
      "recommendation": "Ensure environment variables are properly secured",
      "content": "'apikey': process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY || ''"
    },
    {
      "type": "ENV_VAR",
      "file": "src/services/c2paService.ts",
      "line": 324,
      "message": "Environment variable usage",
      "severity": "INFO",
      "recommendation": "Ensure environment variables are properly secured",
      "content": "'apikey': process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY || ''"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/consent.service.ts",
      "line": 53,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error fetching consents:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/consent.service.ts",
      "line": 68,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error fetching consent:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/consent.service.ts",
      "line": 94,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error creating consent:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/consent.service.ts",
      "line": 113,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error updating consent:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/consent.service.ts",
      "line": 127,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error deleting consent:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/consent.service.ts",
      "line": 159,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error fetching consent templates:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/consent.service.ts",
      "line": 174,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error fetching consent template:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/consent.service.ts",
      "line": 192,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error creating consent template:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/consent.service.ts",
      "line": 211,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error updating consent template:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/consent.service.ts",
      "line": 249,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error fetching consent requests:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/consent.service.ts",
      "line": 264,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error creating consent request:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/consent.service.ts",
      "line": 283,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error updating consent request:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/consent.service.ts",
      "line": 298,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error fetching consent request by token:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/consent.service.ts",
      "line": 339,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error fetching usage logs:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/consent.service.ts",
      "line": 354,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error creating usage log:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/consent.service.ts",
      "line": 367,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error checking consent status:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/consent.service.ts",
      "line": 379,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error logging consent usage:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/consent.service.ts",
      "line": 391,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error revoking consent:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/consent.service.ts",
      "line": 403,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error fetching expiring consents:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/consent.service.ts",
      "line": 519,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error getting client IP:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/cqrsService.ts",
      "line": 239,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error(`Command execution failed: ${command.type}`, error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/cqrsService.ts",
      "line": 267,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error(`Query execution failed: ${query.type}`, error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/cqrsService.ts",
      "line": 734,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "if (error) console.error('Failed to release holds:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/depositRefundService.ts",
      "line": 92,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Stripe refund failed:', stripeError);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/depositRefundService.ts",
      "line": 148,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Refund processing failed:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/depositRefundService.ts",
      "line": 200,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error fetching refund policy:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/depositRefundService.ts",
      "line": 297,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Special circumstances refund failed:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/depositRefundService.ts",
      "line": 338,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to log refund action:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/depositRefundService.ts",
      "line": 374,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error fetching refund history:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/depositRefundService.ts",
      "line": 380,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error fetching refund history:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/depositRefundService.ts",
      "line": 391,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('Sending refund notification:', {"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/depositRefundService.ts",
      "line": 416,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to send refund notification:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/depositService.ts",
      "line": 98,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error calculating deposit:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/depositService.ts",
      "line": 122,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Deposit calculation error:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/depositService.ts",
      "line": 152,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error fetching deposit rules:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/depositService.ts",
      "line": 158,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error fetching deposit rules:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/depositService.ts",
      "line": 178,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error upserting deposit rule:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/depositService.ts",
      "line": 184,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error upserting deposit rule:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/depositService.ts",
      "line": 200,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error deleting deposit rule:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/depositService.ts",
      "line": 204,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error deleting deposit rule:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/depositService.ts",
      "line": 232,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error creating deposit transaction:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/depositService.ts",
      "line": 238,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error creating deposit transaction:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/depositService.ts",
      "line": 276,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error updating deposit payment:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/depositService.ts",
      "line": 280,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error updating deposit payment:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/depositService.ts",
      "line": 299,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error calculating refund:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/depositService.ts",
      "line": 323,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error calculating refund:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/depositService.ts",
      "line": 368,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error processing refund:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/depositService.ts",
      "line": 372,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error processing refund:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/depositService.ts",
      "line": 389,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error fetching deposit transactions:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/depositService.ts",
      "line": 395,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error fetching deposit transactions:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/depositService.ts",
      "line": 427,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error fetching deposit analytics:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/depositService.ts",
      "line": 491,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error fetching deposit analytics:', error);"
    },
    {
      "type": "ENV_VAR",
      "file": "src/services/enhanced-email-service.ts",
      "line": 92,
      "message": "Environment variable usage",
      "severity": "INFO",
      "recommendation": "Ensure environment variables are properly secured",
      "content": "process.env.SUPABASE_URL!,"
    },
    {
      "type": "ENV_VAR",
      "file": "src/services/enhanced-email-service.ts",
      "line": 93,
      "message": "Environment variable usage",
      "severity": "INFO",
      "recommendation": "Ensure environment variables are properly secured",
      "content": "process.env.SUPABASE_SERVICE_ROLE_KEY!"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/enhanced-email-service.ts",
      "line": 158,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to send email:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/enhanced-email-service.ts",
      "line": 172,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error(`Fallback provider ${name} failed:`, fallbackError);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/enhanced-email-service.ts",
      "line": 221,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Queue processing error:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/enhanced-email-service.ts",
      "line": 367,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to cache template:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/enhanced-email-service.ts",
      "line": 423,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error(`Unknown provider: ${provider}`);"
    },
    {
      "type": "ENV_VAR",
      "file": "src/services/enhanced-email-service.ts",
      "line": 564,
      "message": "Environment variable usage",
      "severity": "INFO",
      "recommendation": "Ensure environment variables are properly secured",
      "content": "from: email.from || process.env.RESEND_FROM_EMAIL,"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/enhanced-email-service.ts",
      "line": 611,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('Resend webhook:', event);"
    },
    {
      "type": "ENV_VAR",
      "file": "src/services/enhanced-email-service.ts",
      "line": 641,
      "message": "Environment variable usage",
      "severity": "INFO",
      "recommendation": "Ensure environment variables are properly secured",
      "content": "from: { email: email.from || process.env.SENDGRID_FROM_EMAIL },"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/enhanced-email-service.ts",
      "line": 673,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('SendGrid webhook:', event);"
    },
    {
      "type": "ENV_VAR",
      "file": "src/services/enhanced-stripe-service.ts",
      "line": 67,
      "message": "Environment variable usage",
      "severity": "INFO",
      "recommendation": "Ensure environment variables are properly secured",
      "content": "process.env.SUPABASE_URL!,"
    },
    {
      "type": "ENV_VAR",
      "file": "src/services/enhanced-stripe-service.ts",
      "line": 68,
      "message": "Environment variable usage",
      "severity": "INFO",
      "recommendation": "Ensure environment variables are properly secured",
      "content": "process.env.SUPABASE_SERVICE_ROLE_KEY!"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/enhanced-stripe-service.ts",
      "line": 85,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('No Stripe credentials found');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/enhanced-stripe-service.ts",
      "line": 95,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Stripe connectivity validation failed');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/enhanced-stripe-service.ts",
      "line": 99,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('Stripe service initialized successfully');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/enhanced-stripe-service.ts",
      "line": 102,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to initialize Stripe service:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/enhanced-stripe-service.ts",
      "line": 474,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log(`Unhandled webhook event type: ${webhookEvent.type}`);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/enhanced-stripe-service.ts",
      "line": 482,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Webhook processing error:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/enhanced-stripe-service.ts",
      "line": 560,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('Invoice payment succeeded:', invoice.id);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/enhanced-stripe-service.ts",
      "line": 568,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Payment dispute created:', dispute.id);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/enhanced-stripe-service.ts",
      "line": 759,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "enhancedStripeService.initialize().catch(console.error);"
    },
    {
      "type": "ENV_VAR",
      "file": "src/services/featureFlagRealtimeService.ts",
      "line": 591,
      "message": "Environment variable usage",
      "severity": "INFO",
      "recommendation": "Ensure environment variables are properly secured",
      "content": "if (process.env.NODE_ENV === 'development') {"
    },
    {
      "type": "ENV_VAR",
      "file": "src/services/featureFlagService.ts",
      "line": 46,
      "message": "Environment variable usage",
      "severity": "INFO",
      "recommendation": "Ensure environment variables are properly secured",
      "content": "environment: process.env.NODE_ENV || 'development',"
    },
    {
      "type": "ENV_VAR",
      "file": "src/services/featureFlagService.ts",
      "line": 507,
      "message": "Environment variable usage",
      "severity": "INFO",
      "recommendation": "Ensure environment variables are properly secured",
      "content": "if (process.env.NODE_ENV === 'development') {"
    },
    {
      "type": "ENV_VAR",
      "file": "src/services/featureFlagService.ts",
      "line": 517,
      "message": "Environment variable usage",
      "severity": "INFO",
      "recommendation": "Ensure environment variables are properly secured",
      "content": "if (process.env.NODE_ENV === 'production') {"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/giftCard.service.ts",
      "line": 70,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error creating gift card:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/giftCard.service.ts",
      "line": 94,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error fetching user gift cards:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/giftCard.service.ts",
      "line": 108,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error checking gift card balance:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/giftCard.service.ts",
      "line": 132,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error redeeming gift card:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/giftCard.service.ts",
      "line": 148,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error fetching gift card transactions:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/giftCard.service.ts",
      "line": 176,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error scheduling gift card delivery:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/giftCard.service.ts",
      "line": 217,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error creating voucher:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/giftCard.service.ts",
      "line": 242,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error generating bulk vouchers:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/giftCard.service.ts",
      "line": 266,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error applying voucher:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/giftCard.service.ts",
      "line": 307,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error recording voucher redemption:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/giftCard.service.ts",
      "line": 325,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error fetching active vouchers:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/giftCard.service.ts",
      "line": 341,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error fetching voucher by code:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/giftCard.service.ts",
      "line": 390,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error fetching gift card stats:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/giftCard.service.ts",
      "line": 430,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error fetching voucher stats:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/giftCard.service.ts",
      "line": 469,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error fetching all gift cards:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/giftCard.service.ts",
      "line": 496,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error updating gift card status:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/giftCard.service.ts",
      "line": 519,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error deactivating voucher:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/index.ts",
      "line": 200,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('🚀 Initializing Mariia Hub Services...');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/index.ts",
      "line": 220,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('✅ Services initialized successfully');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/index.ts",
      "line": 225,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('🛑 Cleaning up Mariia Hub Services...');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/index.ts",
      "line": 239,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('✅ Services cleaned up successfully');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/logger.service.tsx",
      "line": 213,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.warn(logMessage);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/logger.service.tsx",
      "line": 217,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error(logMessage);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/logger.service.tsx",
      "line": 219,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error(entry.error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/logger.service.tsx",
      "line": 241,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to send logs to remote endpoint:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/loyaltyEmail.service.ts",
      "line": 38,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error sending welcome email:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/loyaltyEmail.service.ts",
      "line": 59,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error sending tier upgrade email:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/loyaltyEmail.service.ts",
      "line": 92,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error sending points expiring email:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/loyaltyEmail.service.ts",
      "line": 113,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error sending achievement email:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/loyaltyEmail.service.ts",
      "line": 134,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error sending referral success email:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/loyaltyEmail.service.ts",
      "line": 175,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error sending monthly statement:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/loyaltyEmail.service.ts",
      "line": 196,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error sending birthday email:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/loyaltyEmail.service.ts",
      "line": 235,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error sending reward recommendations:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/loyaltyEmail.service.ts",
      "line": 733,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('Sending email:', {"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/loyaltyEmail.service.ts",
      "line": 760,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Email service error:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/loyaltyEmail.service.ts",
      "line": 797,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error in batch sending expiring points emails:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/loyaltyIntegration.service.ts",
      "line": 23,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('No active loyalty program found');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/loyaltyIntegration.service.ts",
      "line": 68,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log(`Awarded ${finalPoints} points to customer ${booking.client_id}`);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/loyaltyIntegration.service.ts",
      "line": 71,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error awarding loyalty points:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/loyaltyIntegration.service.ts",
      "line": 157,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error checking achievements:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/loyaltyIntegration.service.ts",
      "line": 324,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error updating booking streak:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/loyaltyIntegration.service.ts",
      "line": 354,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error handling booking refund:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/loyaltyIntegration.service.ts",
      "line": 401,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error awarding referral points:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/loyaltyPayment.service.ts",
      "line": 82,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error applying loyalty discount:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/loyaltyPayment.service.ts",
      "line": 172,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error redeeming reward:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/loyaltyPayment.service.ts",
      "line": 246,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error validating redemption code:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/loyaltyPayment.service.ts",
      "line": 264,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error marking redemption as used:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/loyaltyPayment.service.ts",
      "line": 294,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error getting redemption options:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/loyaltyPayment.service.ts",
      "line": 370,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error refunding points:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/loyaltyPayment.service.ts",
      "line": 393,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error getting redemption history:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/loyaltyProgramService.ts",
      "line": 96,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error awarding points:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/loyaltyProgramService.ts",
      "line": 184,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error redeeming points:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/loyaltyProgramService.ts",
      "line": 266,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error getting customer points:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/loyaltyProgramService.ts",
      "line": 361,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error checking tier upgrade:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/loyaltyProgramService.ts",
      "line": 466,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error getting customer loyalty status:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/loyaltyProgramService.ts",
      "line": 521,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error getting available rewards:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/loyaltyProgramService.ts",
      "line": 668,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error redeeming reward:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/loyaltyProgramService.ts",
      "line": 778,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error generating referral code:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/loyaltyProgramService.ts",
      "line": 907,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error completing referral:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/loyaltyProgramService.ts",
      "line": 976,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error getting referral status:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/middleware/auth-middleware.ts",
      "line": 254,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('JWT verification error:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/middleware/auth-middleware.ts",
      "line": 304,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('API key verification error:', error);"
    },
    {
      "type": "ENV_VAR",
      "file": "src/services/middleware/error-middleware.ts",
      "line": 37,
      "message": "Environment variable usage",
      "severity": "INFO",
      "recommendation": "Ensure environment variables are properly secured",
      "content": "logStackTraces: process.env.NODE_ENV === 'development',"
    },
    {
      "type": "ENV_VAR",
      "file": "src/services/middleware/error-middleware.ts",
      "line": 38,
      "message": "Environment variable usage",
      "severity": "INFO",
      "recommendation": "Ensure environment variables are properly secured",
      "content": "sendErrorReports: process.env.NODE_ENV === 'production',"
    },
    {
      "type": "ENV_VAR",
      "file": "src/services/middleware/error-middleware.ts",
      "line": 39,
      "message": "Environment variable usage",
      "severity": "INFO",
      "recommendation": "Ensure environment variables are properly secured",
      "content": "includeStackTrace: process.env.NODE_ENV === 'development',"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/middleware/error-middleware.ts",
      "line": 263,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('API Error:', logData);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/middleware/error-middleware.ts",
      "line": 275,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to log error:', logError);"
    },
    {
      "type": "ENV_VAR",
      "file": "src/services/middleware/error-middleware.ts",
      "line": 305,
      "message": "Environment variable usage",
      "severity": "INFO",
      "recommendation": "Ensure environment variables are properly secured",
      "content": "environment: process.env.NODE_ENV || 'unknown',"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/middleware/error-middleware.ts",
      "line": 314,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to send error report:', reportError);"
    },
    {
      "type": "ENV_VAR",
      "file": "src/services/middleware/rate-limit-middleware.ts",
      "line": 305,
      "message": "Environment variable usage",
      "severity": "INFO",
      "recommendation": "Ensure environment variables are properly secured",
      "content": "if (typeof process !== 'undefined' && process.env.NODE_ENV !== 'test') {"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/middleware/reliability-middleware.ts",
      "line": 76,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Request error:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/middleware/reliability-middleware.ts",
      "line": 175,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to record SLO event:', err);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/middleware/reliability-middleware.ts",
      "line": 197,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to evaluate health:', err);"
    },
    {
      "type": "ENV_VAR",
      "file": "src/services/middleware/security-middleware.ts",
      "line": 91,
      "message": "Environment variable usage",
      "severity": "INFO",
      "recommendation": "Ensure environment variables are properly secured",
      "content": "origins = process.env.ALLOWED_ORIGINS?.split(',') || ['https://mariiahub.com'],"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/middleware/security-middleware.ts",
      "line": 366,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log(JSON.stringify({"
    },
    {
      "type": "ENV_VAR",
      "file": "src/services/monitoringService.ts",
      "line": 40,
      "message": "Environment variable usage",
      "severity": "INFO",
      "recommendation": "Ensure environment variables are properly secured",
      "content": "private isDevelopment = process.env.NODE_ENV === 'development';"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/monitoringService.ts",
      "line": 125,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log(`[Performance] ${name}: ${value}${unit}`);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/monitoringService.ts",
      "line": 322,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to send metrics:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/monitoringService.ts",
      "line": 331,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('[Metrics]', metrics);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/noShowPrediction.ts",
      "line": 260,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error extracting features:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/noShowPrediction.ts",
      "line": 302,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error predicting no-show probability:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/noShowPrediction.ts",
      "line": 366,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error generating detailed prediction:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/noShowPrediction.ts",
      "line": 495,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('Training no-show prediction model...');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/noShowPrediction.ts",
      "line": 505,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('Insufficient training data');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/noShowPrediction.ts",
      "line": 541,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('Model training completed');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/noShowPrediction.ts",
      "line": 554,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error training model:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/noShowPrediction.ts",
      "line": 610,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error evaluating model:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/notification.service.ts",
      "line": 88,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log(`Sending ${type} notification to user ${userId}:`, data);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/notification.service.ts",
      "line": 100,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "if (error) console.error('Failed to store notification:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/paymentSystemService.ts",
      "line": 95,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error calculating deposit:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/paymentSystemService.ts",
      "line": 205,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error calculating cancellation fee:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/paymentSystemService.ts",
      "line": 375,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error creating payment plan:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/paymentSystemService.ts",
      "line": 435,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error fetching payment plan:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/paymentSystemService.ts",
      "line": 516,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error purchasing gift card:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/paymentSystemService.ts",
      "line": 640,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error redeeming gift card:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/paymentSystemService.ts",
      "line": 718,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error getting payment summary:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/pricing.service.ts",
      "line": 60,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error calculating dynamic price:', error)"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/pricing.service.ts",
      "line": 145,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error getting price breakdown:', error)"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/pricing.service.ts",
      "line": 185,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error fetching pricing rules:', error)"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/pricing.service.ts",
      "line": 204,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error creating pricing rule:', error)"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/pricing.service.ts",
      "line": 224,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error updating pricing rule:', error)"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/pricing.service.ts",
      "line": 241,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error deleting pricing rule:', error)"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/pricing.service.ts",
      "line": 303,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error getting pricing analytics:', error)"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/pricing.service.ts",
      "line": 357,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error running pricing simulation:', error)"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/pricing.service.ts",
      "line": 405,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error getting dashboard stats:', error)"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/reliability-service.ts",
      "line": 15,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('Reliability service already initialized');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/reliability-service.ts",
      "line": 19,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('Initializing Reliability Service...');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/reliability-service.ts",
      "line": 23,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('Starting dependency monitoring...');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/reliability-service.ts",
      "line": 27,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('Starting SLO monitoring...');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/reliability-service.ts",
      "line": 31,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('Starting alerting system...');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/reliability-service.ts",
      "line": 35,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('Running initial health checks...');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/reliability-service.ts",
      "line": 40,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log(`Initial health status: ${health.status} (Score: ${score.overall}%)`);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/reliability-service.ts",
      "line": 41,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log(`Dependencies: ${dependencies.filter(d => d.status === 'healthy').length}/${dependencies.length} healthy`);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/reliability-service.ts",
      "line": 50,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('Reliability Service initialized successfully');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/reliability-service.ts",
      "line": 53,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to initialize Reliability Service:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/reliability-service.ts",
      "line": 91,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Health monitoring error:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/reliability-service.ts",
      "line": 102,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log(`Automated recovery executed: ${attempts.length} attempts`);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/reliability-service.ts",
      "line": 105,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Automated recovery error:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/reliability-service.ts",
      "line": 116,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Audit cleanup error:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/reliability-service.ts",
      "line": 127,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log(`\\nReceived ${signal}, shutting down Reliability Service...`);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/reliability-service.ts",
      "line": 141,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('Reliability Service shutdown complete');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/reliability-service.ts",
      "line": 152,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('\\n=== Reliability Diagnostic Report ===\\n');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/reliability-service.ts",
      "line": 156,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('1. Health Checks:');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/reliability-service.ts",
      "line": 158,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log(`   Status: ${health.status}`);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/reliability-service.ts",
      "line": 159,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log(`   Duration: ${health.duration}ms`);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/reliability-service.ts",
      "line": 161,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log(`   - ${check.name}: ${check.status} (${check.duration}ms)`);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/reliability-service.ts",
      "line": 165,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('\\n2. Dependencies:');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/reliability-service.ts",
      "line": 168,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log(`   - ${dep.name}: ${dep.status} ${dep.responseTime ? `(${dep.responseTime}ms)` : ''}`);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/reliability-service.ts",
      "line": 172,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('\\n3. Health Score:');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/reliability-service.ts",
      "line": 174,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log(`   Overall: ${score.overall}%`);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/reliability-service.ts",
      "line": 175,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log(`   Trend: ${score.trend}`);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/reliability-service.ts",
      "line": 176,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('   Components:');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/reliability-service.ts",
      "line": 178,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log(`     ${name}: ${value}%`);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/reliability-service.ts",
      "line": 182,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('\\n4. Active Alerts:');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/reliability-service.ts",
      "line": 185,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('   No active alerts');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/reliability-service.ts",
      "line": 188,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log(`   - ${alert.severity}: ${alert.message}`);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/reliability-service.ts",
      "line": 193,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('\\n5. SLO Status:');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/reliability-service.ts",
      "line": 196,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log(`   - ${status.sloId}: ${status.status} (${status.errorBudget.toFixed(2)}% remaining)`);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/reliability-service.ts",
      "line": 200,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('\\n6. Recovery Stats:');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/reliability-service.ts",
      "line": 202,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log(`   Attempts: ${recoveryStats.totalAttempts}`);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/reliability-service.ts",
      "line": 203,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log(`   Success Rate: ${recoveryStats.successRate.toFixed(1)}%`);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/reliability-service.ts",
      "line": 205,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('\\n=== End Diagnostic Report ===\\n');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/reliability-service.ts",
      "line": 208,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Diagnostic failed:', error);"
    },
    {
      "type": "ENV_VAR",
      "file": "src/services/reliability-service.ts",
      "line": 254,
      "message": "Environment variable usage",
      "severity": "INFO",
      "recommendation": "Ensure environment variables are properly secured",
      "content": "if (process.env.NODE_ENV === 'production') {"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/reliability-service.ts",
      "line": 255,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "reliabilityService.initialize().catch(console.error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/schedulingAI.ts",
      "line": 249,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error analyzing booking patterns:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/schedulingAI.ts",
      "line": 318,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error analyzing service patterns:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/schedulingAI.ts",
      "line": 388,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error predicting optimal scheduling:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/schedulingAI.ts",
      "line": 463,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error predicting no-show risk:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/schedulingAI.ts",
      "line": 523,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error generating smart reminder:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/schedulingAI.ts",
      "line": 583,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error generating scheduling analytics:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/schedulingAI.ts",
      "line": 644,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error getting personalized recommendations:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/schedulingAI.ts",
      "line": 652,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('Starting batch pattern update...');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/schedulingAI.ts",
      "line": 664,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log(`Updated pattern for service: ${service.id}`);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/schedulingAI.ts",
      "line": 666,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error(`Failed to update service ${service.id}:`, error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/schedulingAI.ts",
      "line": 682,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log(`Updated pattern for customer: ${customer.id}`);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/schedulingAI.ts",
      "line": 684,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error(`Failed to update customer ${customer.id}:`, error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/schedulingAI.ts",
      "line": 689,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('Batch pattern update completed');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/schedulingAI.ts",
      "line": 691,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error in batch pattern update:', error);"
    },
    {
      "type": "ENV_VAR",
      "file": "src/services/secure-api-gateway.ts",
      "line": 140,
      "message": "Environment variable usage",
      "severity": "INFO",
      "recommendation": "Ensure environment variables are properly secured",
      "content": "process.env.SUPABASE_URL!,"
    },
    {
      "type": "ENV_VAR",
      "file": "src/services/secure-api-gateway.ts",
      "line": 141,
      "message": "Environment variable usage",
      "severity": "INFO",
      "recommendation": "Ensure environment variables are properly secured",
      "content": "process.env.SUPABASE_SERVICE_ROLE_KEY!"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/secure-api-gateway.ts",
      "line": 543,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to update service health:', dbError);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/secure-api-gateway.ts",
      "line": 546,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error updating service health:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/secure-api-gateway.ts",
      "line": 566,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to get service health:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/smartReminderSystem.ts",
      "line": 417,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error generating reminder schedule:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/smartReminderSystem.ts",
      "line": 537,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error optimizing timing:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/smartReminderSystem.ts",
      "line": 591,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error predicting channels:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/smartReminderSystem.ts",
      "line": 736,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error executing reminder schedule:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/smartReminderSystem.ts",
      "line": 788,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error sending reminder:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/smartReminderSystem.ts",
      "line": 812,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('Sending email reminder:', reminder.id);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/smartReminderSystem.ts",
      "line": 820,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('Sending SMS reminder:', reminder.id);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/smartReminderSystem.ts",
      "line": 828,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('Sending WhatsApp reminder:', reminder.id);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/smartReminderSystem.ts",
      "line": 836,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('Sending push reminder:', reminder.id);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/smartReminderSystem.ts",
      "line": 880,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error getting reminder analytics:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/smartReminderSystem.ts",
      "line": 922,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error optimizing reminder strategy:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/websocketService.ts",
      "line": 73,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('WebSocket connected');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/websocketService.ts",
      "line": 84,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to connect WebSocket:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/websocketService.ts",
      "line": 104,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('WebSocket connected successfully');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/websocketService.ts",
      "line": 110,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('WebSocket disconnected:', reason);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/websocketService.ts",
      "line": 120,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('WebSocket connection error:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/websocketService.ts",
      "line": 127,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('Booking created:', data);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/websocketService.ts",
      "line": 138,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('Booking updated:', data);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/websocketService.ts",
      "line": 150,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('Booking cancelled:', data);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/websocketService.ts",
      "line": 163,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('Slot reserved:', data);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/websocketService.ts",
      "line": 176,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('Slot released:', data);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/websocketService.ts",
      "line": 187,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('Availability updated:', data);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/websocketService.ts",
      "line": 193,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('Admin notification:', data);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/websocketService.ts",
      "line": 201,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('System maintenance:', data);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/websocketService.ts",
      "line": 215,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Max reconnection attempts reached');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/websocketService.ts",
      "line": 223,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log(`Scheduling reconnection in ${delay}ms (attempt ${this.reconnectAttempts})`);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/websocketService.ts",
      "line": 230,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Reconnection failed:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/websocketService.ts",
      "line": 263,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error(`Error in WebSocket event listener for ${event}:`, error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/websocketService.ts",
      "line": 290,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.warn('WebSocket not connected, cannot send event:', event);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/websocketService.ts",
      "line": 313,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log(`[${type.toUpperCase()}] ${message}`, data);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/websocketService.ts",
      "line": 346,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to connect WebSocket:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/whatsappService.ts",
      "line": 181,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to send WhatsApp template:', error)"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/whatsappService.ts",
      "line": 228,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to send WhatsApp text:', error)"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/whatsappService.ts",
      "line": 410,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error processing auto-reply:', error)"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/whatsappService.ts",
      "line": 501,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error storing incoming message:', error)"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/services/whatsappService.ts",
      "line": 583,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error processing queued message:', error)"
    },
    {
      "type": "CODE_COMMENT",
      "file": "src/stores/booking/bookingBaseStore.ts",
      "line": 205,
      "message": "Development comment detected",
      "severity": "INFO",
      "recommendation": "Address TODO/FIXME comments before production",
      "content": "// TODO: Replace with actual API call"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/stores/currencyStore.ts",
      "line": 89,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to update exchange rates:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/test/i18n.test.ts",
      "line": 17,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('Translation validation result:', result);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/test/i18n.test.ts",
      "line": 18,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('Translation report:', getTranslationReport());"
    },
    {
      "type": "ENV_VAR",
      "file": "src/test/security/security-verification.test.ts",
      "line": 104,
      "message": "Environment variable usage",
      "severity": "INFO",
      "recommendation": "Ensure environment variables are properly secured",
      "content": "if (process.env.NODE_ENV === 'production') {"
    },
    {
      "type": "ENV_VAR",
      "file": "src/test/security/security-verification.test.ts",
      "line": 295,
      "message": "Environment variable usage",
      "severity": "INFO",
      "recommendation": "Ensure environment variables are properly secured",
      "content": "expect(process.env.VITE_SECURITY_HEADERS_ENABLED).toBe('true');"
    },
    {
      "type": "ENV_VAR",
      "file": "src/test/security/security-verification.test.ts",
      "line": 296,
      "message": "Environment variable usage",
      "severity": "INFO",
      "recommendation": "Ensure environment variables are properly secured",
      "content": "expect(process.env.VITE_CSP_NONCE_GENERATION).toBe('true');"
    },
    {
      "type": "ENV_VAR",
      "file": "src/test/security/security-verification.test.ts",
      "line": 297,
      "message": "Environment variable usage",
      "severity": "INFO",
      "recommendation": "Ensure environment variables are properly secured",
      "content": "expect(process.env.VITE_HMR).toBe('false');"
    },
    {
      "type": "ENV_VAR",
      "file": "src/test/security/security-verification.test.ts",
      "line": 298,
      "message": "Environment variable usage",
      "severity": "INFO",
      "recommendation": "Ensure environment variables are properly secured",
      "content": "expect(process.env.VITE_SOURCE_MAP).toBe('false');"
    },
    {
      "type": "ENV_VAR",
      "file": "src/test/security/security-verification.test.ts",
      "line": 302,
      "message": "Environment variable usage",
      "severity": "INFO",
      "recommendation": "Ensure environment variables are properly secured",
      "content": "expect(process.env.VITE_APP_URL).toMatch(/^https:\\/\\//);"
    },
    {
      "type": "ENV_VAR",
      "file": "src/test/setup-a11y.js",
      "line": 139,
      "message": "Environment variable usage",
      "severity": "INFO",
      "recommendation": "Ensure environment variables are properly secured",
      "content": "if (process.env.NODE_ENV !== 'production') {"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/test/setup-a11y.js",
      "line": 140,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "const originalError = console.error;"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/test/setup-a11y.js",
      "line": 141,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error = (...args) => {"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/test/setup-a11y.ts",
      "line": 255,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.warn('aria-hidden=\"false\" is usually unnecessary');"
    },
    {
      "type": "ENV_VAR",
      "file": "src/test/setup-global.ts",
      "line": 261,
      "message": "Environment variable usage",
      "severity": "INFO",
      "recommendation": "Ensure environment variables are properly secured",
      "content": "process.env.NODE_ENV = 'test';"
    },
    {
      "type": "ENV_VAR",
      "file": "src/test/setup-global.ts",
      "line": 262,
      "message": "Environment variable usage",
      "severity": "INFO",
      "recommendation": "Ensure environment variables are properly secured",
      "content": "process.env.VITE_SUPABASE_URL = 'https://test.supabase.co';"
    },
    {
      "type": "ENV_VAR",
      "file": "src/test/setup-global.ts",
      "line": 263,
      "message": "Environment variable usage",
      "severity": "INFO",
      "recommendation": "Ensure environment variables are properly secured",
      "content": "process.env.VITE_SUPABASE_ANON_KEY = 'test-anon-key';"
    },
    {
      "type": "ENV_VAR",
      "file": "src/test/setup-global.ts",
      "line": 264,
      "message": "Environment variable usage",
      "severity": "INFO",
      "recommendation": "Ensure environment variables are properly secured",
      "content": "process.env.VITE_STRIPE_PUBLISHABLE_KEY = 'pk_test_123';"
    },
    {
      "type": "ENV_VAR",
      "file": "src/test/setup-global.ts",
      "line": 265,
      "message": "Environment variable usage",
      "severity": "INFO",
      "recommendation": "Ensure environment variables are properly secured",
      "content": "process.env.VITE_APP_URL = 'http://localhost:8080';"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/test/setup-global.ts",
      "line": 268,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "const originalError = console.error;"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/test/setup-global.ts",
      "line": 269,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "const originalWarn = console.warn;"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/test/setup-global.ts",
      "line": 273,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error = (...args: any[]) => {"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/test/setup-global.ts",
      "line": 289,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.warn = (...args: any[]) => {"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/test/setup-global.ts",
      "line": 311,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error = originalError;"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/test/setup-global.ts",
      "line": 312,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.warn = originalWarn;"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/test/setup-vitest.ts",
      "line": 84,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "const originalError = console.error;"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/test/setup-vitest.ts",
      "line": 86,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error = (...args: any[]) => {"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "src/test/setup-vitest.ts",
      "line": 98,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error = originalError;"
    },
    {
      "type": "ENV_VAR",
      "file": "src/utils/errorHandling.ts",
      "line": 146,
      "message": "Environment variable usage",
      "severity": "INFO",
      "recommendation": "Ensure environment variables are properly secured",
      "content": "if (process.env.NODE_ENV === 'development') {"
    },
    {
      "type": "ENV_VAR",
      "file": "src/utils/errorHandling.ts",
      "line": 263,
      "message": "Environment variable usage",
      "severity": "INFO",
      "recommendation": "Ensure environment variables are properly secured",
      "content": "environment: process.env.NODE_ENV,"
    },
    {
      "type": "ENV_VAR",
      "file": "src/utils/errorHandling.ts",
      "line": 527,
      "message": "Environment variable usage",
      "severity": "INFO",
      "recommendation": "Ensure environment variables are properly secured",
      "content": "if (process.env.NODE_ENV === 'production') {"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/add-messaging-types.ts",
      "line": 635,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('Added new messaging and referral types to types.ts');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/add-messaging-types.ts",
      "line": 637,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Could not find user_roles table definition in types.ts');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/analyze-bundle.js",
      "line": 11,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('🔍 Analyzing bundle size...\\n');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/analyze-bundle.js",
      "line": 83,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('📦 Bundle Analysis Results\\n');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/analyze-bundle.js",
      "line": 84,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('Name'.padEnd(40), 'Type'.padEnd(12), 'Size'.padEnd(12), 'Gzipped'.padEnd(12), 'File');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/analyze-bundle.js",
      "line": 85,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('-'.repeat(100));"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/analyze-bundle.js",
      "line": 92,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log("
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/analyze-bundle.js",
      "line": 101,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('-'.repeat(100));"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/analyze-bundle.js",
      "line": 102,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log("
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/analyze-bundle.js",
      "line": 108,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log("
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/analyze-bundle.js",
      "line": 114,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log("
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/analyze-bundle.js",
      "line": 122,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('\\n📊 Analysis Summary:');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/analyze-bundle.js",
      "line": 127,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('\\n⚠️  Large Chunks (>100KB):');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/analyze-bundle.js",
      "line": 129,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log(`   ${chunk.name} (${chunk.type}): ${formatBytes(chunk.size)}`);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/analyze-bundle.js",
      "line": 132,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('\\n✅ All JavaScript/CSS chunks are under 100KB');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/analyze-bundle.js",
      "line": 136,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('\\n🖼️  Images Analysis:');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/analyze-bundle.js",
      "line": 138,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log(`⚠️  Large images detected: ${formatBytes(totalImageSize)}`);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/analyze-bundle.js",
      "line": 139,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('   - Consider using WebP format for better compression');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/analyze-bundle.js",
      "line": 140,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('   - Implement lazy loading for images');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/analyze-bundle.js",
      "line": 141,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('   - Use responsive images with srcset');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/analyze-bundle.js",
      "line": 143,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log(`✅ Total image size is reasonable: ${formatBytes(totalImageSize)}`);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/analyze-bundle.js",
      "line": 147,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('\\n🔍 Chunk Distribution:');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/analyze-bundle.js",
      "line": 158,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log(`   ${type}: ${data.count} chunks, ${formatBytes(data.size)}`);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/analyze-bundle.js",
      "line": 162,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('\\n💡 Optimization Recommendations:');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/analyze-bundle.js",
      "line": 165,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('   - Total JS/CSS size exceeds 1MB. Consider more aggressive code splitting.');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/analyze-bundle.js",
      "line": 170,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log(`   - Vendor chunk is large (${formatBytes(vendorSize)}). Consider splitting by library.`);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/analyze-bundle.js",
      "line": 174,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('   - Multiple component chunks detected. Consider consolidating.');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/analyze-bundle.js",
      "line": 178,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('   - ✅ Bundle size is well optimized!');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/analyze-bundle.js",
      "line": 181,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('\\n   🚀 To visualize the bundle, open dist/stats.html in your browser');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/analyze-bundle.js",
      "line": 197,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('\\n📄 Detailed report saved to: dist/bundle-analysis.json');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/analyze-bundle.js",
      "line": 249,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "analyzeBundle().catch(console.error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/check-bundle-size.js",
      "line": 28,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('📦 Bundle Size Analysis\\n');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/check-bundle-size.js",
      "line": 44,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log(`Total Size: ${formatBytes(totalSize)} (limit: ${formatBytes(SIZE_LIMITS.total)})`);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/check-bundle-size.js",
      "line": 45,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('\\nChunks:');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/check-bundle-size.js",
      "line": 53,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log(`${status} ${chunk.name}: ${formatBytes(chunk.size)}`);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/check-bundle-size.js",
      "line": 62,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('\\n');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/check-bundle-size.js",
      "line": 66,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error(`❌ Total bundle size exceeds limit: ${formatBytes(totalSize)} > ${formatBytes(SIZE_LIMITS.total)}`);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/check-bundle-size.js",
      "line": 69,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.warn(`⚠️ Total bundle size is close to limit: ${formatBytes(totalSize)} / ${formatBytes(SIZE_LIMITS.total)}`);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/check-bundle-size.js",
      "line": 73,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('\\n❌ Bundle size check failed!');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/check-bundle-size.js",
      "line": 76,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.warn('\\n⚠️ Bundle size warnings detected');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/check-bundle-size.js",
      "line": 78,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('✅ Bundle size check passed!');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/check-bundle-size.js",
      "line": 82,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error checking bundle size:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/create-placeholders.js",
      "line": 70,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log(`Created directory: ${dirPath}`);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/create-placeholders.js",
      "line": 77,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log(`Created SVG placeholder: ${filePath}`);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/create-placeholders.js",
      "line": 85,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log(`Created image placeholder: ${filePath}`);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/create-placeholders.js",
      "line": 90,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('🎨 Creating placeholder assets...\\n');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/create-placeholders.js",
      "line": 101,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log(`Skipped existing file: ${filePath}`);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/create-placeholders.js",
      "line": 106,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('\\n✅ Placeholder creation complete!');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/create-placeholders.js",
      "line": 107,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('\\n💡 Tip: Replace these placeholders with your actual assets');"
    },
    {
      "type": "ENV_VAR",
      "file": "scripts/create-pln-products.js",
      "line": 4,
      "message": "Environment variable usage",
      "severity": "INFO",
      "recommendation": "Ensure environment variables are properly secured",
      "content": "const stripe = require('stripe')(process.env.STRIPE_SECRET_KEY || 'sk_test_BM_BEAUTY_PLACEHOLDER');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/create-pln-products.js",
      "line": 52,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('Creating PLN products for BM Beauty...\\n');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/create-pln-products.js",
      "line": 77,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log(`✅ Created: ${productData.name}`);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/create-pln-products.js",
      "line": 78,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log(`   Product ID: ${product.id}`);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/create-pln-products.js",
      "line": 79,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log(`   Price ID: ${price.id}`);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/create-pln-products.js",
      "line": 80,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log(`   Price: ${productData.price / 100} ${productData.currency.toUpperCase()}\\n`);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/create-pln-products.js",
      "line": 82,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error(`❌ Error creating ${productData.name}:`, error.message);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/create-pln-products.js",
      "line": 83,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('   Make sure you have updated the STRIPE_SECRET_KEY in this script\\n');"
    },
    {
      "type": "ENV_VAR",
      "file": "scripts/create-pln-products.js",
      "line": 89,
      "message": "Environment variable usage",
      "severity": "INFO",
      "recommendation": "Ensure environment variables are properly secured",
      "content": "if (!process.env.STRIPE_SECRET_KEY || process.env.STRIPE_SECRET_KEY.includes('PLACEHOLDER')) {"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/create-pln-products.js",
      "line": 90,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('❌ Please update the STRIPE_SECRET_KEY in this script first:');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/create-pln-products.js",
      "line": 91,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('1. Get your key from https://dashboard.stripe.com/apikeys');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/create-pln-products.js",
      "line": 92,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('2. Set environment variable: export STRIPE_SECRET_KEY=sk_test_...\\n');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/create-pln-products.js",
      "line": 97,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('Done! Products created in your Stripe dashboard.');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/create-pln-products.js",
      "line": 98,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('You can now use these Price IDs in your application.');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/create-pln-products.js",
      "line": 100,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error:', error.message);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/generate-media.js",
      "line": 78,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log(`Created directory: ${dirPath}`);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/generate-media.js",
      "line": 87,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('📱 Generating PWA manifest...');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/generate-media.js",
      "line": 100,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log(`✅ Created manifest: ${MANIFEST_PATH}`);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/generate-media.js",
      "line": 104,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('🎨 Generating favicon files...');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/generate-media.js",
      "line": 117,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log(`Created favicon: ${name} (${size}x${size})`);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/generate-media.js",
      "line": 119,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log(`Skipped existing favicon: ${name}`);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/generate-media.js",
      "line": 127,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('Created favicon.ico');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/generate-media.js",
      "line": 134,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('Created favicon.svg');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/generate-media.js",
      "line": 139,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('🗺️  Generating sitemap...');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/generate-media.js",
      "line": 165,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log(`✅ Created sitemap: ${SITEMAP_PATH}`);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/generate-media.js",
      "line": 169,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('🤖 Generating robots.txt...');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/generate-media.js",
      "line": 195,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log(`✅ Created robots.txt`);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/generate-media.js",
      "line": 199,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('🔧 Generating browserconfig.xml...');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/generate-media.js",
      "line": 215,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log(`✅ Created browserconfig.xml`);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/generate-media.js",
      "line": 219,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('🎨 Generating media assets and configuration files...\\n');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/generate-media.js",
      "line": 228,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('\\n✅ Media generation complete!');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/generate-media.js",
      "line": 229,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('\\n💡 Next steps:');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/generate-media.js",
      "line": 230,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('   1. Replace placeholder favicons with actual branded assets');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/generate-media.js",
      "line": 231,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('   2. Upload sitemap.xml to search engines');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/generate-media.js",
      "line": 232,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('   3. Test PWA functionality in production');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/generate-media.js",
      "line": 235,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('❌ Error during media generation:', error);"
    },
    {
      "type": "ENV_VAR",
      "file": "scripts/migrate-multi-city.js",
      "line": 11,
      "message": "Environment variable usage",
      "severity": "INFO",
      "recommendation": "Ensure environment variables are properly secured",
      "content": "const supabaseUrl = process.env.VITE_SUPABASE_URL;"
    },
    {
      "type": "ENV_VAR",
      "file": "scripts/migrate-multi-city.js",
      "line": 12,
      "message": "Environment variable usage",
      "severity": "INFO",
      "recommendation": "Ensure environment variables are properly secured",
      "content": "const supabaseKey = process.env.VITE_SUPABASE_PUBLISHABLE_KEY;"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/migrate-multi-city.js",
      "line": 15,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Missing Supabase credentials. Please check your .env.local file.');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/migrate-multi-city.js",
      "line": 22,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('🚀 Starting multi-city migration...\\n');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/migrate-multi-city.js",
      "line": 26,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('📍 Step 1: Creating Warsaw city...');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/migrate-multi-city.js",
      "line": 81,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('❌ Error creating Warsaw city:', cityError);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/migrate-multi-city.js",
      "line": 83,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log(`✅ Warsaw city created/updated with ID: ${warsawCity.id}`);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/migrate-multi-city.js",
      "line": 87,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('\\n📍 Step 2: Updating existing locations...');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/migrate-multi-city.js",
      "line": 93,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('❌ Error fetching locations:', locationsError);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/migrate-multi-city.js",
      "line": 95,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log(`Found ${existingLocations.length} existing locations`);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/migrate-multi-city.js",
      "line": 136,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error(`❌ Error updating location ${location.id}:`, updateError);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/migrate-multi-city.js",
      "line": 138,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log(`✅ Updated location: ${location.name}`);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/migrate-multi-city.js",
      "line": 144,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('\\n📍 Step 3: Creating regional pricing...');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/migrate-multi-city.js",
      "line": 151,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('❌ Error fetching services:', servicesError);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/migrate-multi-city.js",
      "line": 153,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log(`Found ${services.length} active services`);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/migrate-multi-city.js",
      "line": 165,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log(`⏭️  Pricing already exists for: ${service.title}`);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/migrate-multi-city.js",
      "line": 189,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error(`❌ Error creating pricing for ${service.title}:`, pricingError);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/migrate-multi-city.js",
      "line": 191,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log(`✅ Created pricing for: ${service.title}`);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/migrate-multi-city.js",
      "line": 197,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('\\n📍 Step 4: Creating service location availability...');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/migrate-multi-city.js",
      "line": 240,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error(`❌ Error creating availability for ${service.title} at ${location.name}:`, availabilityError);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/migrate-multi-city.js",
      "line": 246,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('\\n📍 Step 5: Creating tax configuration...');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/migrate-multi-city.js",
      "line": 272,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('❌ Error creating tax config:', taxError);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/migrate-multi-city.js",
      "line": 274,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('✅ Tax configuration created');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/migrate-multi-city.js",
      "line": 278,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('\\n📍 Step 6: Creating legal requirements...');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/migrate-multi-city.js",
      "line": 339,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error(`❌ Error creating legal requirement ${requirement.requirement_type}:`, legalError);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/migrate-multi-city.js",
      "line": 341,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log(`✅ Legal requirement created: ${requirement.requirement_type}`);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/migrate-multi-city.js",
      "line": 346,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('\\n📍 Step 7: Creating additional cities for future expansion...');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/migrate-multi-city.js",
      "line": 435,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error(`❌ Error creating city ${city.name}:`, cityError);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/migrate-multi-city.js",
      "line": 437,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log(`✅ Future city created: ${city.name}`);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/migrate-multi-city.js",
      "line": 441,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('\\n🎉 Multi-city migration completed successfully!');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/migrate-multi-city.js",
      "line": 442,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('\\nNext steps:');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/migrate-multi-city.js",
      "line": 443,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('1. Verify the data in your Supabase dashboard');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/migrate-multi-city.js",
      "line": 444,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('2. Test the location detection in your application');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/migrate-multi-city.js",
      "line": 445,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('3. Update the IPINFO_TOKEN in your .env file');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/migrate-multi-city.js",
      "line": 446,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('4. Configure Google Maps API if needed');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/migrate-multi-city.js",
      "line": 447,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('5. Test city selection and location-based features');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/migrate-multi-city.js",
      "line": 450,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('❌ Migration failed:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/optimize-assets.js",
      "line": 27,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log(`${colors[color]}${message}${colors.reset}`);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/optimize-assets.js",
      "line": 283,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "if (env.DEBUG) console.error(error.stack);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/optimize-images-webp.js",
      "line": 21,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('⚠️  Sharp is not installed. Installing it now...');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/optimize-images-webp.js",
      "line": 26,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('❌ Failed to install sharp. Please run: npm install --save-dev sharp');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/optimize-images-webp.js",
      "line": 39,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log(`⏭️  Skipping animated GIF: ${path.basename(inputPath)}`);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/optimize-images-webp.js",
      "line": 51,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log(`✅ ${path.basename(inputPath)} → ${path.basename(outputPath)} (Saved ${savings}%)`);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/optimize-images-webp.js",
      "line": 54,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error(`❌ Error converting ${inputPath}:`, error.message);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/optimize-images-webp.js",
      "line": 80,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log(`⏭️  Skipping (WebP already exists): ${entry.name}`);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/optimize-images-webp.js",
      "line": 91,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log(`🗑️  Deleted original: ${entry.name}`);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/optimize-images-webp.js",
      "line": 93,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error(`❌ Error deleting ${fullPath}:`, error.message);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/optimize-images-webp.js",
      "line": 103,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('\\n📝 Generating <picture> markup examples...');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/optimize-images-webp.js",
      "line": 105,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log(`"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/optimize-images-webp.js",
      "line": 129,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('🚀 Starting WebP conversion for all images...');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/optimize-images-webp.js",
      "line": 130,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log(`📁 Processing directory: ${PUBLIC_DIR}`);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/optimize-images-webp.js",
      "line": 131,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log(`🎯 Quality setting: ${QUALITY}%`);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/optimize-images-webp.js",
      "line": 132,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log(`🗑️  Delete originals: ${DELETE_ORIGINALS ? 'Yes' : 'No'}\\n`);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/optimize-images-webp.js",
      "line": 137,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error(`❌ Public directory not found: ${PUBLIC_DIR}`);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/optimize-images-webp.js",
      "line": 146,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log(`\\n✨ WebP conversion completed in ${duration}s`);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/optimize-images-webp.js",
      "line": 152,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('❌ An error occurred:', error);"
    },
    {
      "type": "CODE_COMMENT",
      "file": "scripts/run-repo-cleanup-audit.js",
      "line": 59,
      "message": "Development comment detected",
      "severity": "INFO",
      "recommendation": "Address TODO/FIXME comments before production",
      "content": "/\\/\\/ TODO: remove/i,"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/run-repo-cleanup-audit.js",
      "line": 105,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log(`\\n🔍 Starting ${phase.name}...`);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/run-repo-cleanup-audit.js",
      "line": 106,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log(`📍 Focus: ${phase.focus}`);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/run-repo-cleanup-audit.js",
      "line": 107,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log(`📂 Path: ${phase.path || 'root'}`);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/run-repo-cleanup-audit.js",
      "line": 244,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('🚀 Starting Repository Cleanup Audit\\n');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/run-repo-cleanup-audit.js",
      "line": 245,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('This audit will analyze the entire codebase for cleanup opportunities.\\n');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/run-repo-cleanup-audit.js",
      "line": 272,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('Found TypeScript files to analyze');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/run-repo-cleanup-audit.js",
      "line": 279,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log(`Found ${Object.keys(pkg.dependencies || {}).length} dependencies`);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/run-repo-cleanup-audit.js",
      "line": 280,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log(`Found ${Object.keys(pkg.devDependencies || {}).length} dev dependencies`);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/run-repo-cleanup-audit.js",
      "line": 290,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('Found large files that might need optimization:');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/run-repo-cleanup-audit.js",
      "line": 292,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "if (file.trim()) console.log(`  - ${file}`);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/run-repo-cleanup-audit.js",
      "line": 297,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log(`Note: ${error.message}`);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/run-repo-cleanup-audit.js",
      "line": 301,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('✅ Phase complete\\n');"
    },
    {
      "type": "CODE_COMMENT",
      "file": "scripts/run-repo-cleanup-audit.js",
      "line": 309,
      "message": "Development comment detected",
      "severity": "INFO",
      "recommendation": "Address TODO/FIXME comments before production",
      "content": "fs.writeFileSync('REPOSITORY_CLEANUP_TODO.md', todoList);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/run-repo-cleanup-audit.js",
      "line": 314,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('\\n✨ Audit Complete!\\n');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/run-repo-cleanup-audit.js",
      "line": 315,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log(`📝 Todo list created: REPOSITORY_CLEANUP_TODO.md`);"
    },
    {
      "type": "CODE_COMMENT",
      "file": "scripts/run-repo-cleanup-audit.js",
      "line": 315,
      "message": "Development comment detected",
      "severity": "INFO",
      "recommendation": "Address TODO/FIXME comments before production",
      "content": "console.log(`📝 Todo list created: REPOSITORY_CLEANUP_TODO.md`);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/run-repo-cleanup-audit.js",
      "line": 316,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log(`📊 Detailed report: cleanup-audit-report.json`);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/run-repo-cleanup-audit.js",
      "line": 317,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log(`\\n🎯 Found ${report.summary.totalIssues} issues to address`);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/run-repo-cleanup-audit.js",
      "line": 318,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('\\nStart with the high-priority items marked with 🔴');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/run-repo-cleanup-audit.js",
      "line": 441,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "runAudit().catch(console.error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/security-scan-comprehensive.js",
      "line": 177,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error(`Error scanning file ${filePath}:`, error.message);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/security-scan-comprehensive.js",
      "line": 185,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('🔒 Starting Comprehensive Security Scan...\\n');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/security-scan-comprehensive.js",
      "line": 191,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log(`📁 Scanning ${allFiles.length} files...\\n`);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/security-scan-comprehensive.js",
      "line": 194,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('🔍 Scanning for hardcoded secrets...');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/security-scan-comprehensive.js",
      "line": 201,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('⚠️  Scanning for XSS vulnerabilities...');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/security-scan-comprehensive.js",
      "line": 208,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('💉 Scanning for SQL injection vulnerabilities...');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/security-scan-comprehensive.js",
      "line": 215,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('🎲 Scanning for weak random generation...');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/security-scan-comprehensive.js",
      "line": 222,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('📝 Scanning for log injection vulnerabilities...');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/security-scan-comprehensive.js",
      "line": 256,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('\\n📊 Generating Security Report...\\n');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/security-scan-comprehensive.js",
      "line": 285,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log(`\\n📄 Full report saved to: ${reportPath}`);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/security-scan-comprehensive.js",
      "line": 289,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('\\n❌ Security scan failed - High severity vulnerabilities detected!');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/security-scan-comprehensive.js",
      "line": 292,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('\\n⚠️  Security scan completed with warnings');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/security-scan-comprehensive.js",
      "line": 295,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('\\n✅ Security scan passed - No vulnerabilities detected!');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/security-scan-comprehensive.js",
      "line": 302,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('='.repeat(60));"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/security-scan-comprehensive.js",
      "line": 303,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('🔒 SECURITY SCAN SUMMARY');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/security-scan-comprehensive.js",
      "line": 304,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('='.repeat(60));"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/security-scan-comprehensive.js",
      "line": 305,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log(`Files Scanned: ${report.summary.filesScanned}`);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/security-scan-comprehensive.js",
      "line": 306,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log(`Vulnerabilities Found: ${report.summary.vulnerabilitiesFound}`);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/security-scan-comprehensive.js",
      "line": 307,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log(`High Severity: ${report.summary.highSeverity}`);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/security-scan-comprehensive.js",
      "line": 308,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log(`Medium Severity: ${report.summary.mediumSeverity}`);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/security-scan-comprehensive.js",
      "line": 309,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('='.repeat(60));"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/security-scan-comprehensive.js",
      "line": 313,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('\\n🚨 HIGH SEVERITY VULNERABILITIES:');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/security-scan-comprehensive.js",
      "line": 314,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('-'.repeat(40));"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/security-scan-comprehensive.js",
      "line": 323,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log(`\\n📍 ${finding.type}`);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/security-scan-comprehensive.js",
      "line": 324,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log(`   File: ${finding.file}:${finding.line}`);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/security-scan-comprehensive.js",
      "line": 325,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log(`   Code: ${finding.content.substring(0, 100)}...`);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/security-scan-comprehensive.js",
      "line": 330,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('\\n✨ No vulnerabilities detected! Great job!');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/security-scan.js",
      "line": 11,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('🔒 Security Scan Starting...')"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/security-scan.js",
      "line": 12,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('================================')"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/security-scan.js",
      "line": 15,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('\\n1️⃣  Scanning for exposed secrets...')"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/security-scan.js",
      "line": 92,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('\\n2️⃣  Checking for vulnerable dependencies...')"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/security-scan.js",
      "line": 105,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('   ⚠️  Could not run npm audit')"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/security-scan.js",
      "line": 109,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('\\n3️⃣  Checking file permissions...')"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/security-scan.js",
      "line": 139,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('\\n📊 Generating Security Report...')"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/security-scan.js",
      "line": 180,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('\\n📋 Security Scan Results')"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/security-scan.js",
      "line": 181,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('========================')"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/security-scan.js",
      "line": 182,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log(`\\n📁 Report saved to: ${reportFile}`)"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/security-scan.js",
      "line": 184,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('\\n🔍 Issues Found:')"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/security-scan.js",
      "line": 186,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('   ✅ No security issues found!')"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/security-scan.js",
      "line": 189,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log(`\\n   🚨 Secrets/Issues (${secretsFound.length}):`)"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/security-scan.js",
      "line": 191,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log(`      - ${issue.file}: ${issue.type}`)"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/security-scan.js",
      "line": 196,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log(`\\n   ⚠️  Vulnerabilities:`)"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/security-scan.js",
      "line": 198,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log(`      - ${v.severity}: ${v.count} packages`)"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/security-scan.js",
      "line": 203,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log(`\\n   🔒 Permission Issues:`)"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/security-scan.js",
      "line": 205,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log(`      - ${issue.file}: ${issue.currentMode} (should be ${issue.recommendedMode})`)"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/security-scan.js",
      "line": 210,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('\\n💡 Recommendations:')"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/security-scan.js",
      "line": 212,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log(`   - ${rec}`)"
    },
    {
      "type": "ENV_VAR",
      "file": "scripts/seed-preview-data.ts",
      "line": 24,
      "message": "Environment variable usage",
      "severity": "INFO",
      "recommendation": "Ensure environment variables are properly secured",
      "content": "const supabaseUrl = process.env.PREVIEW_SUPABASE_URL || process.env.VITE_SUPABASE_URL;"
    },
    {
      "type": "ENV_VAR",
      "file": "scripts/seed-preview-data.ts",
      "line": 25,
      "message": "Environment variable usage",
      "severity": "INFO",
      "recommendation": "Ensure environment variables are properly secured",
      "content": "const supabaseKey = process.env.PREVIEW_SUPABASE_SERVICE_ROLE_KEY || process.env.SUPABASE_SERVICE_ROLE_KEY;"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/seed-preview-data.ts",
      "line": 28,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Missing Supabase configuration for preview environment');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/seed-preview-data.ts",
      "line": 41,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('🌱 Seeding preview environment with minimal test data...');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/seed-preview-data.ts",
      "line": 53,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('✅ Preview environment seeded successfully');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/seed-preview-data.ts",
      "line": 56,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('❌ Failed to seed preview environment:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/seed-preview-data.ts",
      "line": 62,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('📋 Creating essential services...');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/seed-preview-data.ts",
      "line": 133,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('👥 Creating test users...');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/seed-preview-data.ts",
      "line": 169,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('📅 Creating sample bookings...');"
    },
    {
      "type": "ENV_VAR",
      "file": "scripts/seed-staging-data.ts",
      "line": 67,
      "message": "Environment variable usage",
      "severity": "INFO",
      "recommendation": "Ensure environment variables are properly secured",
      "content": "const supabaseUrl = process.env.STAGING_SUPABASE_URL || process.env.VITE_SUPABASE_URL;"
    },
    {
      "type": "ENV_VAR",
      "file": "scripts/seed-staging-data.ts",
      "line": 68,
      "message": "Environment variable usage",
      "severity": "INFO",
      "recommendation": "Ensure environment variables are properly secured",
      "content": "const supabaseKey = process.env.STAGING_SUPABASE_SERVICE_ROLE_KEY || process.env.SUPABASE_SERVICE_ROLE_KEY;"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/seed-staging-data.ts",
      "line": 114,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('🔄 Seeding services...');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/seed-staging-data.ts",
      "line": 330,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error(`Error inserting service ${service.name}:`, error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/seed-staging-data.ts",
      "line": 336,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log(`✅ Created service: ${service.name}`);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/seed-staging-data.ts",
      "line": 343,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log(`✅ Created ${serviceIds.length} services`);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/seed-staging-data.ts",
      "line": 349,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('🔄 Seeding user profiles...');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/seed-staging-data.ts",
      "line": 378,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error(`Error creating admin user ${profile.email}:`, authError);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/seed-staging-data.ts",
      "line": 393,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error(`Error creating admin profile ${profile.email}:`, profileError);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/seed-staging-data.ts",
      "line": 399,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log(`✅ Created admin: ${profile.email}`);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/seed-staging-data.ts",
      "line": 429,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error(`Error creating client user ${profile.email}:`, authError);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/seed-staging-data.ts",
      "line": 444,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error(`Error creating client profile ${profile.email}:`, profileError);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/seed-staging-data.ts",
      "line": 450,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log(`✅ Created client: ${profile.email}`);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/seed-staging-data.ts",
      "line": 457,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log(`✅ Created ${adminIds.length} admins and ${clientIds.length} clients`);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/seed-staging-data.ts",
      "line": 463,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('🔄 Seeding bookings...');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/seed-staging-data.ts",
      "line": 515,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error(`Error creating booking:`, error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/seed-staging-data.ts",
      "line": 519,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log(`✅ Created booking: ${status} - ${startTime.toLocaleDateString()}`);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/seed-staging-data.ts",
      "line": 525,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log(`✅ Created ${this.NUM_BOOKINGS} bookings`);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/seed-staging-data.ts",
      "line": 530,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('🔄 Seeding availability slots...');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/seed-staging-data.ts",
      "line": 571,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log(`✅ Created ${slotCount} availability slots`);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/seed-staging-data.ts",
      "line": 576,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('🔄 Seeding service content...');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/seed-staging-data.ts",
      "line": 628,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log(`✅ Created content and galleries for ${serviceIds.length} services`);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/seed-staging-data.ts",
      "line": 633,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('🌱 Starting staging database seeding...');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/seed-staging-data.ts",
      "line": 634,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('=====================================');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/seed-staging-data.ts",
      "line": 638,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('\\n🧹 Resetting existing data...');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/seed-staging-data.ts",
      "line": 649,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('\\n🎉 Staging database seeding completed successfully!');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/seed-staging-data.ts",
      "line": 650,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('==============================================');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/seed-staging-data.ts",
      "line": 651,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('📊 Summary:');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/seed-staging-data.ts",
      "line": 652,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log(`  - Services: ${serviceIds.length}`);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/seed-staging-data.ts",
      "line": 653,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log(`  - Clients: ${clients.length}`);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/seed-staging-data.ts",
      "line": 654,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log(`  - Admins: ${this.NUM_ADMINS}`);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/seed-staging-data.ts",
      "line": 655,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log(`  - Bookings: ${this.NUM_BOOKINGS}`);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/seed-staging-data.ts",
      "line": 656,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('\\n🔑 Login credentials:');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/seed-staging-data.ts",
      "line": 657,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('  Admins: admin{1-3}@staging.mariia-hub.com / staging123!');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/seed-staging-data.ts",
      "line": 658,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('  Clients: {email} / client123!');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/seed-staging-data.ts",
      "line": 661,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('❌ Seeding failed:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/seed-staging-data.ts",
      "line": 675,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "main().catch(console.error);"
    },
    {
      "type": "ENV_VAR",
      "file": "scripts/update-types-from-db.ts",
      "line": 13,
      "message": "Environment variable usage",
      "severity": "INFO",
      "recommendation": "Ensure environment variables are properly secured",
      "content": "const SUPABASE_URL = process.env.NEXT_PUBLIC_SUPABASE_URL;"
    },
    {
      "type": "ENV_VAR",
      "file": "scripts/update-types-from-db.ts",
      "line": 14,
      "message": "Environment variable usage",
      "severity": "INFO",
      "recommendation": "Ensure environment variables are properly secured",
      "content": "const SUPABASE_KEY = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY;"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/update-types-from-db.ts",
      "line": 19,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Missing Supabase credentials. Please set NEXT_PUBLIC_SUPABASE_URL and NEXT_PUBLIC_SUPABASE_ANON_KEY');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/update-types-from-db.ts",
      "line": 32,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error fetching tables:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/update-types-from-db.ts",
      "line": 44,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Could not find Views section in types file');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/update-types-from-db.ts",
      "line": 64,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('New tables detected:', newTables);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/update-types-from-db.ts",
      "line": 236,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('Updated types file with new tables');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/update-types-from-db.ts",
      "line": 238,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('No new tables to add');"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/update-types-from-db.ts",
      "line": 242,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "updateTypes().catch(console.error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "scripts/validate-translations.js",
      "line": 68,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log(`${colors[color]}${message}${colors.reset}`);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "supabase/functions/ai-format-input/index.ts",
      "line": 147,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('AI format error:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "supabase/functions/ai-verify-review/index.ts",
      "line": 110,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error in AI verification:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "supabase/functions/analytics-aggregation/index.ts",
      "line": 120,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error in analytics aggregation:', error)"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "supabase/functions/analytics-aggregation/index.ts",
      "line": 513,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error caching analytics data:', error)"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "supabase/functions/apply-reschedule/index.ts",
      "line": 11,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log(`[APPLY-RESCHEDULE] ${step}${detailsStr}`);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "supabase/functions/c2pa-watermark/index.ts",
      "line": 71,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error in c2pa-watermark function:', error)"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "supabase/functions/create-booking-payment/index.ts",
      "line": 12,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log(`[CREATE-BOOKING-PAYMENT] ${step}${detailsStr}`);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "supabase/functions/create-payment/index.ts",
      "line": 84,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log(\"Payment session created:\", session.id);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "supabase/functions/create-payment/index.ts",
      "line": 91,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error(\"Error in create-payment:\", error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "supabase/functions/create-payment-intent/index.ts",
      "line": 76,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error creating payment intent:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "supabase/functions/detect-review-fraud/index.ts",
      "line": 84,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error in fraud detection:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "supabase/functions/generate-blog-post/index.ts",
      "line": 146,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error(\"Error in generate-blog-post:\", error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "supabase/functions/generate-feedback-analytics/index.ts",
      "line": 151,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to fetch NPS data:', error)"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "supabase/functions/generate-feedback-analytics/index.ts",
      "line": 176,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Analytics generation error:', error)"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "supabase/functions/generate-gift-card-pdf/index.ts",
      "line": 331,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Upload error:', uploadError)"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "supabase/functions/generate-gift-card-pdf/index.ts",
      "line": 354,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error generating gift card PDF:', error)"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "supabase/functions/generate-image/index.ts",
      "line": 25,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log(\"Generating image with prompt:\", prompt);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "supabase/functions/generate-image/index.ts",
      "line": 74,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log(\"AI response received\");"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "supabase/functions/generate-image/index.ts",
      "line": 89,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error(\"Error in generate-image:\", error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "supabase/functions/generate-reschedule-link/index.ts",
      "line": 11,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log(`[GENERATE-RESCHEDULE-LINK] ${step}${detailsStr}`);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "supabase/functions/generate-review-response/index.ts",
      "line": 81,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error generating response:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "supabase/functions/generate-sitemap/index.ts",
      "line": 187,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error generating sitemap:', error)"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "supabase/functions/media-processing/index.ts",
      "line": 59,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error in media-processing function:', error)"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "supabase/functions/media-processing/index.ts",
      "line": 154,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error(`Job ${job_id} failed:`, error)"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "supabase/functions/process-feedback/index.ts",
      "line": 74,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Sentiment analysis failed:', error)"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "supabase/functions/process-feedback/index.ts",
      "line": 88,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Auto-categorization failed:', error)"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "supabase/functions/process-feedback/index.ts",
      "line": 98,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Keyword extraction failed:', error)"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "supabase/functions/process-feedback/index.ts",
      "line": 129,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Feedback processing error:', error)"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "supabase/functions/process-feedback/index.ts",
      "line": 340,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error(`Failed to create integration log for ${integration}:`, error)"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "supabase/functions/refund-payment/index.ts",
      "line": 12,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log(`[REFUND-PAYMENT] ${step}${detailsStr}`);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "supabase/functions/robots-txt/index.ts",
      "line": 44,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error generating robots.txt:', error)"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "supabase/functions/send-booking-confirmation/index.ts",
      "line": 14,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log(`[SEND-BOOKING-CONFIRMATION] ${step}${detailsStr}`);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "supabase/functions/send-booking-confirmation/index.ts",
      "line": 231,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Resend error:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "supabase/functions/send-email/index.ts",
      "line": 68,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Email settings not configured')"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "supabase/functions/send-email/index.ts",
      "line": 80,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Resend API key not found')"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "supabase/functions/send-email/index.ts",
      "line": 126,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Resend API error:', errorData)"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "supabase/functions/send-email/index.ts",
      "line": 149,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error updating message status:', error)"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "supabase/functions/send-email/index.ts",
      "line": 165,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error logging email:', error)"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "supabase/functions/send-email/index.ts",
      "line": 178,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Email service error:', error)"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "supabase/functions/send-feedback-request/index.ts",
      "line": 166,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Feedback request scheduling error:', error)"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "supabase/functions/send-feedback-request/index.ts",
      "line": 292,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to log feedback campaign:', error)"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "supabase/functions/send-gift-card-email/index.ts",
      "line": 322,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Email error:', emailError)"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "supabase/functions/send-gift-card-email/index.ts",
      "line": 363,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error sending gift card email:', error)"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "supabase/functions/send-newsletter/index.ts",
      "line": 179,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Resend error:', error)"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "supabase/functions/send-newsletter/index.ts",
      "line": 191,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error:', error)"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "supabase/functions/send-sms/index.ts",
      "line": 56,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('SMS settings not configured')"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "supabase/functions/send-sms/index.ts",
      "line": 68,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Twilio credentials not found')"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "supabase/functions/send-sms/index.ts",
      "line": 97,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Twilio API error:', errorData)"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "supabase/functions/send-sms/index.ts",
      "line": 120,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error updating message status:', error)"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "supabase/functions/send-sms/index.ts",
      "line": 137,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error logging SMS:', error)"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "supabase/functions/send-sms/index.ts",
      "line": 150,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('SMS service error:', error)"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "supabase/functions/send-whatsapp/index.ts",
      "line": 133,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Twilio error:', data)"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "supabase/functions/send-whatsapp/index.ts",
      "line": 161,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error:', error)"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "supabase/functions/stripe-webhook/index.ts",
      "line": 12,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log(`[STRIPE-WEBHOOK] ${step}${detailsStr}`);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "supabase/functions/sync-google-reviews/index.ts",
      "line": 205,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error syncing Google reviews:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "supabase/functions/sync-google-reviews/index.ts",
      "line": 225,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to update sync status:', updateError);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "supabase/functions/translate-service/index.ts",
      "line": 56,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error(`Translation error for ${lang}:`, errorText);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "supabase/functions/translate-service/index.ts",
      "line": 79,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Translation error:', error);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "supabase/functions/trigger-feedback-requests/index.ts",
      "line": 78,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log(`Unknown trigger type: ${event.type}`)"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "supabase/functions/trigger-feedback-requests/index.ts",
      "line": 97,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Trigger processing error:', error)"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "supabase/functions/trigger-feedback-requests/index.ts",
      "line": 199,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log(`User ${request.userId} has not consented to ${request.channel} communications`)"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "supabase/functions/trigger-feedback-requests/index.ts",
      "line": 214,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error(`User not found: ${request.userId}`)"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "supabase/functions/trigger-feedback-requests/index.ts",
      "line": 247,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error(`Failed to schedule feedback request: ${scheduleError.message}`)"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "supabase/functions/trigger-feedback-requests/index.ts",
      "line": 249,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log(`Feedback request scheduled for ${request.feedbackType} to ${request.userId} at ${scheduledFor}`)"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "supabase/functions/trigger-feedback-requests/index.ts",
      "line": 374,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to log trigger event:', error)"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "supabase/functions/verify-booking-payment/index.ts",
      "line": 12,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log(`[VERIFY-BOOKING-PAYMENT] ${step}${detailsStr}`);"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "supabase/functions/whatsapp-webhook/index.ts",
      "line": 58,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Invalid webhook signature')"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "supabase/functions/whatsapp-webhook/index.ts",
      "line": 71,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Failed to parse webhook payload:', error)"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "supabase/functions/whatsapp-webhook/index.ts",
      "line": 102,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Webhook error:', error)"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "supabase/functions/whatsapp-webhook/index.ts",
      "line": 137,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log(`Processing ${messages.length} messages from ${metadata.display_phone_number}`)"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "supabase/functions/whatsapp-webhook/index.ts",
      "line": 182,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error inserting message:', insertError)"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "supabase/functions/whatsapp-webhook/index.ts",
      "line": 199,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error marking message as read:', error)"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "supabase/functions/whatsapp-webhook/index.ts",
      "line": 207,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error processing message:', error)"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "supabase/functions/whatsapp-webhook/index.ts",
      "line": 238,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.error('Error processing message status update:', error)"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "supabase/functions/whatsapp-webhook/index.ts",
      "line": 244,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('Template status update:', value)"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "supabase/functions/whatsapp-webhook/index.ts",
      "line": 249,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('Phone number update:', value)"
    },
    {
      "type": "CONSOLE_LOG",
      "file": "supabase/functions/whatsapp-webhook/index.ts",
      "line": 254,
      "message": "Console logging detected",
      "severity": "INFO",
      "recommendation": "Remove console logs from production code",
      "content": "console.log('Account update:', value)"
    }
  ]
}