# Istio Service Mesh Configuration for Mariia Hub
# ================================================

apiVersion: v1
kind: Namespace
metadata:
  name: istio-system
  labels:
    istio-injection: enabled
---
apiVersion: v1
kind: Namespace
metadata:
  name: mariia-hub
  labels:
    istio-injection: enabled
---
# Istio Operator Configuration
apiVersion: install.istio.io/v1alpha1
kind: IstioOperator
metadata:
  name: mariia-hub-istio-operator
  namespace: istio-system
spec:
  profile: production
  components:
    pilot:
      k8s:
        resources:
          requests:
            cpu: 500m
            memory: 2Gi
        env:
          PILOT_ENABLE_WORKLOAD_ENTRY_AUTOREGISTRATION: true
          PILOT_ENABLE_K8S_SELECT_WORKLOAD_ENTRIES: true
    ingressGateways:
    - name: istio-ingressgateway
      enabled: true
      k8s:
        resources:
          requests:
            cpu: 500m
            memory: 1Gi
        service:
          type: LoadBalancer
          ports:
          - name: http2
            port: 80
            targetPort: 8080
          - name: https
            port: 443
            targetPort: 8443
    egressGateways:
    - name: istio-egressgateway
      enabled: true
      k8s:
        resources:
          requests:
            cpu: 200m
            memory: 512Mi
  meshConfig:
    accessLogFile: /dev/stdout
    defaultConfig:
      proxyStatsMatcher:
        inclusionRegexps:
        - ".*_upstream_rq_total.*"
        - ".*_upstream_rq_2xx.*"
        - ".*_upstream_rq_4xx.*"
        - ".*_upstream_rq_5xx.*"
        - ".*_upstream_cx_total.*"
        - ".*_upstream_cx_rx_bytes_total.*"
        - ".*_upstream_cx_tx_bytes_total.*"
        - ".*_upstream_rq_pending_total.*"
        - ".*_upstream_rq_pending_active.*"
        - ".*_upstream_rq_pending_failure_eject.*"
        - ".*_upstream_cx_connect_failures_total.*"
        - ".*_upstream_cx_local_failures_total.*"
        - ".*_upstream_cx_remote_failures_total.*"
        - ".*_upstream_cx_rx_bytes_total.*"
        - ".*_upstream_cx_tx_bytes_total.*"
        - ".*_downstream_cx_total.*"
        - ".*_downstream_cx_rx_bytes_total.*"
        - ".*_downstream_cx_tx_bytes_total.*"
        - ".*_downstream_cx_response_total.*"
        - ".*_downstream_cx_response_time_total.*"
        - ".*_downstream_rq_total.*"
        - ".*_downstream_rq_2xx.*"
        - ".*_downstream_rq_4xx.*"
        - ".*_downstream_rq_5xx.*"
        - ".*_downstream_rq_time_total.*"
        - ".*_listener_inbound_connections_total.*"
        - ".*_listener_inbound_connections_failed_total.*"
        - ".*_listener_manager_new_listeners_total.*"
        - ".*_listener_manager_new_listeners_failed_total.*"
        - ".*_listener_manager_listeners_closed_total.*"
        - ".*_server_*"
        - ".*_cluster_manager_*"
        - ".*_cluster_*"
        - ".*_wasm_filter_*"
        - ".*_xds_*"
        - ".*_dns_*"
        - ".*_persistence_*"
        - ".*_file_system_*"
        - ".*_tcp_*"
        - ".*_http2_*"
        - ".*_quic_*"
        - ".*_rbac_*"
        - ".*_jwt_*"
        - ".*_metadata_*"
        - ".*_secret_*"
        - ".*_certificate_*"
        - ".*_config_*"
        - ".*_api_*"
        - ".*_authz_*"
        - ".*_extension_*"
      tracing:
        sampling: 100.0
        zipkin:
          address: zipkin.istio-system:9411
      proxyMetadata:
        ISTIO_META_DNS_CAPTURE: "true"
        ISTIO_META_DNS_AUTO_ALLOCATE: "true"
---
# Gateway Configuration
apiVersion: networking.istio.io/v1beta1
kind: Gateway
metadata:
  name: mariia-hub-gateway
  namespace: mariia-hub
spec:
  selector:
    istio: ingressgateway
  servers:
  - port:
      number: 80
      name: http
      protocol: HTTP
    hosts:
    - mariaborysevych.com
    - www.mariaborysevych.com
    - api.mariaborysevych.com
    tls:
      httpsRedirect: true
  - port:
      number: 443
      name: https
      protocol: HTTPS
    tls:
      mode: SIMPLE
      credentialName: mariia-hub-tls
    hosts:
    - mariaborysevych.com
    - www.mariaborysevych.com
    - api.mariaborysevych.com
---
# Virtual Service Configuration
apiVersion: networking.istio.io/v1beta1
kind: VirtualService
metadata:
  name: mariia-hub-virtualservice
  namespace: mariia-hub
spec:
  hosts:
  - mariaborysevych.com
  - www.mariaborysevych.com
  gateways:
  - mariia-hub-gateway
  http:
  - match:
    - uri:
        prefix: /
    route:
    - destination:
        host: mariia-hub-app-service
        port:
          number: 80
    fault:
      delay:
        percentage:
          value: 0.1
        fixedDelay: 5s
    timeout: 30s
    retries:
      attempts: 3
      perTryTimeout: 10s
      retryOn: 5xx,connect-failure,refused-stream
  - match:
    - uri:
        prefix: /api
    route:
    - destination:
        host: mariia-hub-app-service
        port:
          number: 80
    timeout: 60s
    retries:
      attempts: 3
      perTryTimeout: 20s
    cors:
      allowOrigin:
      - "*"
      allowMethods:
      - GET
      - POST
      - PUT
      - DELETE
      - OPTIONS
      allowHeaders:
      - DNT
      - User-Agent
      - X-Requested-With
      - If-Modified-Since
      - Cache-Control
      - Content-Type
      - Range
      - Authorization
      exposeHeaders:
      - Content-Length
      - Content-Range
      maxAge: 86400
---
# Destination Rule Configuration
apiVersion: networking.istio.io/v1beta1
kind: DestinationRule
metadata:
  name: mariia-hub-destinationrule
  namespace: mariia-hub
spec:
  host: mariia-hub-app-service
  trafficPolicy:
    loadBalancer:
      simple: LEAST_CONN
    connectionPool:
      tcp:
        maxConnections: 100
      http:
        http1MaxPendingRequests: 50
        maxRequestsPerConnection: 10
        maxRetries: 3
    circuitBreaker:
      consecutiveErrors: 3
      interval: 30s
      baseEjectionTime: 30s
      maxEjectionPercent: 100
      minHealthPercent: 50
    outlierDetection:
      consecutiveErrors: 3
      interval: 30s
      baseEjectionTime: 30s
      maxEjectionPercent: 50
      minHealthPercent: 40
    tls:
      mode: ISTIO_MUTUAL
    portLevelSettings:
    - port:
        number: 80
      tls:
        mode: DISABLE
    - port:
        number: 443
      tls:
        mode: SIMPLE
  subsets:
  - name: v1
    labels:
      version: v1
  - name: v2
    labels:
      version: v2
---
# Service Entry for External Services
apiVersion: networking.istio.io/v1beta1
kind: ServiceEntry
metadata:
  name: mariia-hub-external-services
  namespace: mariia-hub
spec:
  hosts:
  - "*.supabase.co"
  - "api.stripe.com"
  - "www.google-analytics.com"
  - "www.googletagmanager.com"
  - "smtp.sendgrid.net"
  location: MESH_EXTERNAL
  ports:
  - number: 443
    name: https
    protocol: HTTPS
  - number: 80
    name: http
    protocol: HTTP
  resolution: DNS
---
# Authorization Policy
apiVersion: security.istio.io/v1beta1
kind: AuthorizationPolicy
metadata:
  name: mariia-hub-authz
  namespace: mariia-hub
spec:
  selector:
    matchLabels:
      app: mariia-hub
  action: ALLOW
  rules:
  - from:
    - source:
        principals: ["cluster.local/ns/istio-system/sa/istio-ingressgateway-service-account"]
  - to:
    - operation:
        methods: ["GET", "POST", "PUT", "DELETE", "OPTIONS"]
  - when:
    - key: request.auth.claims[iss]
      values: ["https://accounts.google.com"]
---
# Request Authentication
apiVersion: security.istio.io/v1beta1
kind: RequestAuthentication
metadata:
  name: mariia-hub-jwt
  namespace: mariia-hub
spec:
  selector:
    matchLabels:
      app: mariia-hub
  jwtRules:
  - issuer: "https://accounts.google.com"
    jwksUri: "https://www.googleapis.com/oauth2/v3/certs"
    forwardOriginalToken: true
---
# Peer Authentication
apiVersion: security.istio.io/v1beta1
kind: PeerAuthentication
metadata:
  name: mariia-hub-peer-auth
  namespace: mariia-hub
spec:
  mtls:
    mode: STRICT
---
# Sidecar Configuration
apiVersion: networking.istio.io/v1beta1
kind: Sidecar
metadata:
  name: mariia-hub-sidecar
  namespace: mariia-hub
spec:
  egress:
  - hosts:
    - "./*"
    - "istio-system/*"
    - "external/*"
  ingress:
  - port:
      number: 8080
      protocol: HTTP
    defaultEndpoint: 127.0.0.1:8080
    hosts:
    - "./*"
---
# Envoy Filter for Custom Configuration
apiVersion: networking.istio.io/v1alpha3
kind: EnvoyFilter
metadata:
  name: mariia-hub-envoy-filter
  namespace: istio-system
spec:
  configPatches:
  - applyTo: HTTP_FILTER
    match:
      context: SIDECAR_INBOUND
      listener:
        filterChain:
          filter:
            name: "envoy.filters.network.http_connection_manager"
    patch:
      operation: INSERT_BEFORE
      value:
        name: envoy.filters.http.lua
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.http.lua.v3.Lua
          inline_code: |
            function envoy_on_request(request_handle)
              -- Add custom headers
              request_handle:headers():add("x-request-start", os.time())
              request_handle:headers():add("x-envoy-upstream-service-time", "0")

              -- Rate limiting logic
              local client_ip = request_handle:headers():get("x-forwarded-for")
              if client_ip then
                -- Custom rate limiting logic here
              end
            end

            function envoy_on_response(response_handle)
              -- Add response headers
              response_handle:headers():add("x-response-time", os.time())

              -- Custom response processing
              local status = response_handle:headers():get(":status")
              if status and tonumber(status) >= 500 then
                -- Log server errors
                response_handle:logInfo("Server error: " .. status)
              end
            end
---
# Telemetry Configuration
apiVersion: v1
kind: ConfigMap
metadata:
  name: istio-telemetry
  namespace: istio-system
  labels:
    istio.io/rev: default
data:
  mesh: |
    accessLogEncoding: JSON
    defaultConfig:
      tracing:
        sampling: 100.0
        custom_tags:
          app_name:
            header:
              name: "x-app-name"
              default_value: "mariia-hub"
          version:
            header:
              name: "x-app-version"
              default_value: "unknown"
      proxyStatsMatcher:
        inclusionRegexps:
        - ".*_upstream_rq_total.*"
        - ".*_upstream_rq_2xx.*"
        - ".*_upstream_rq_4xx.*"
        - ".*_upstream_rq_5xx.*"
        - ".*_upstream_cx_total.*"
        - ".*_downstream_rq_total.*"
        - ".*_downstream_rq_2xx.*"
        - ".*_downstream_rq_4xx.*"
        - ".*_downstream_rq_5xx.*"
        - ".*_listener_inbound_connections_total.*"
---
# Monitoring ServiceMonitor for Istio
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: istio-proxy
  namespace: mariia-hub
  labels:
    app: istio-proxy
spec:
  selector:
    matchLabels:
      app: mariia-hub
  endpoints:
  - port: http-monitoring
    interval: 15s
    path: /stats/prometheus
---
# PrometheusRule for Istio Metrics
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: istio-rules
  namespace: istio-system
spec:
  groups:
  - name: istio.rules
    rules:
    - alert: IstioHighRequestErrorRate
      expr: "sum(rate(istio_requests_total{response_code=~\"5..\"}[1m])) / sum(rate(istio_requests_total[1m])) > 0.05"
      for: 5m
      labels:
        severity: critical
      annotations:
        summary: "High request error rate detected"
        description: "The request error rate is above 5% for more than 5 minutes"

    - alert: IstioHighLatency
      expr: "histogram_quantile(0.95, rate(istio_request_duration_seconds_bucket[1m])) > 1"
      for: 5m
      labels:
        severity: warning
      annotations:
        summary: "High request latency detected"
        description: "The 95th percentile latency is above 1 second for more than 5 minutes"

    - alert: IstioCircuitBreakerOpen
      expr: "istio_circuit_breaker_open > 0"
      for: 1m
      labels:
        severity: critical
      annotations:
        summary: "Circuit breaker is open"
        description: "Circuit breaker is open for service {{ $labels.destination_service }}"

---
# Grafana Dashboard for Istio
apiVersion: v1
kind: ConfigMap
metadata:
  name: istio-grafana-dashboard
  namespace: istio-system
  labels:
    grafana_dashboard: "1"
data:
  istio-dashboard.json: |
    {
      "dashboard": {
        "id": null,
        "title": "Mariia Hub - Istio Service Mesh",
        "tags": ["istio", "mariia-hub"],
        "timezone": "browser",
        "panels": [
          {
            "title": "Request Rate",
            "type": "graph",
            "targets": [
              {
                "expr": "sum(rate(istio_requests_total{destination_service=\"mariia-hub-app-service.mariia-hub.svc.cluster.local\"}[1m])) by (source_workload)",
                "legendFormat": "{{source_workload}}"
              }
            ],
            "gridPos": { "h": 8, "w": 12, "x": 0, "y": 0 }
          },
          {
            "title": "Success Rate",
            "type": "stat",
            "targets": [
              {
                "expr": "sum(rate(istio_requests_total{destination_service=\"mariia-hub-app-service.mariia-hub.svc.cluster.local\",response_code!~\"5..\"}[1m])) / sum(rate(istio_requests_total{destination_service=\"mariia-hub-app-service.mariia-hub.svc.cluster.local\"}[1m])) * 100",
                "legendFormat": "Success Rate"
              }
            ],
            "gridPos": { "h": 8, "w": 12, "x": 12, "y": 0 }
          },
          {
            "title": "Request Duration",
            "type": "graph",
            "targets": [
              {
                "expr": "histogram_quantile(0.95, rate(istio_request_duration_seconds_bucket{destination_service=\"mariia-hub-app-service.mariia-hub.svc.cluster.local\"}[1m]))",
                "legendFormat": "95th percentile"
              },
              {
                "expr": "histogram_quantile(0.50, rate(istio_request_duration_seconds_bucket{destination_service=\"mariia-hub-app-service.mariia-hub.svc.cluster.local\"}[1m]))",
                "legendFormat": "50th percentile"
              }
            ],
            "gridPos": { "h": 8, "w": 12, "x": 0, "y": 8 }
          },
          {
            "title": "Circuit Breaker Status",
            "type": "graph",
            "targets": [
              {
                "expr": "istio_circuit_breaker_open{destination_service=\"mariia-hub-app-service.mariia-hub.svc.cluster.local\"}",
                "legendFormat": "Circuit Breaker"
              }
            ],
            "gridPos": { "h": 8, "w": 12, "x": 12, "y": 8 }
          }
        ],
        "time": {
          "from": "now-1h",
          "to": "now"
        },
        "refresh": "5s"
      }
    }