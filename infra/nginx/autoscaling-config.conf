# Nginx Auto-scaling and Load Balancing Configuration
# Optimized for high-traffic production environment

# Worker processes and connections
worker_processes auto;
worker_rlimit_nofile 65535;

# Events module
events {
    worker_connections 4096;
    use epoll;
    multi_accept on;
    accept_mutex off;
    accept_mutex_delay 500ms;
}

# HTTP module
http {
    # Basic settings
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    server_tokens off;

    # Logging configuration
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time" '
                    'cs=$upstream_cache_status';

    log_format detailed '$remote_addr - $remote_user [$time_local] "$request" '
                       '$status $body_bytes_sent "$http_referer" '
                       '"$http_user_agent" "$http_x_forwarded_for" '
                       'rt=$request_time uct=$upstream_connect_time '
                       'uht=$upstream_header_time urt=$upstream_response_time '
                       'cs=$upstream_cache_status '
                       'upstream_addr=$upstream_addr '
                       'request_id=$request_id '
                       'http_x_request_id=$http_x_request_id';

    access_log /var/log/nginx/access.log detailed;
    error_log /var/log/nginx/error.log warn;

    # Performance optimizations
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    keepalive_requests 1000;
    lingering_time 30;
    lingering_timeout 5;
    reset_timedout_connection on;
    client_body_timeout 30;
    client_header_timeout 30;
    send_timeout 30;

    # Buffer sizes
    client_body_buffer_size 128k;
    client_max_body_size 20m;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 8k;
    output_buffers 2 256k;
    postpone_output 1460;

    # Connection limits
    limit_conn_zone $binary_remote_addr zone=addr:10m;
    limit_conn_zone $server_name zone=servers:10m;
    limit_req_zone $binary_remote_addr zone=general:10m rate=30r/s;
    limit_req_zone $binary_remote_addr zone=api:10m rate=20r/s;
    limit_req_zone $binary_remote_addr zone=auth:10m rate=5r/s;
    limit_req_zone $server_name zone=per_server:10m rate=200r/s;

    # File descriptor limits
    worker_rlimit_nofile 65535;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/xml
        image/svg+xml
        application/vnd.ms-fontobject
        application/x-font-ttf
        font/opentype
        font/woff
        font/woff2;

    # Brotli compression (if available)
    # brotli on;
    # brotli_comp_level 6;
    # brotli_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    # Security headers
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header X-Download-Options noopen always;
    add_header X-Permitted-Cross-Domain-Policies none always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;

    # Content Security Policy
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://js.stripe.com https://www.googletagmanager.com https://connect.facebook.net; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; img-src 'self' data: https:; font-src 'self' data: https://fonts.gstatic.com; connect-src 'self' https://api.supabase.co https://js.stripe.com https://www.google-analytics.com https://www.facebook.com; frame-src https://js.stripe.com https://www.facebook.com https://www.google.com; object-src 'none'; base-uri 'self'; form-action 'self'; upgrade-insecure-requests;" always;

    # Upstream configuration for application servers
    upstream app_servers {
        least_conn;
        server app1:8080 max_fails=3 fail_timeout=30s weight=1;
        server app2:8080 max_fails=3 fail_timeout=30s weight=1;
        server app3:8080 max_fails=3 fail_timeout=30s weight=1;

        # Backup servers for high traffic
        server app4:8080 max_fails=3 fail_timeout=30s weight=1 backup;
        server app5:8080 max_fails=3 fail_timeout=30s weight=1 backup;

        # Health check configuration
        keepalive 64;
        keepalive_requests 100;
        keepalive_timeout 60s;
    }

    # Upstream for API endpoints (dedicated pool)
    upstream api_servers {
        least_conn;
        server api1:8080 max_fails=2 fail_timeout=20s weight=2;
        server api2:8080 max_fails=2 fail_timeout=20s weight=2;
        server api3:8080 max_fails=2 fail_timeout=20s weight=1;

        keepalive 32;
        keepalive_requests 200;
        keepalive_timeout 30s;
    }

    # Upstream for static assets (edge cache servers)
    upstream static_servers {
        least_conn;
        server static1:8080 max_fails=1 fail_timeout=10s;
        server static2:8080 max_fails=1 fail_timeout=10s;
        server static3:8080 max_fails=1 fail_timeout=10s;
    }

    # Rate limiting maps
    geo $limit_api_key {
        default "";
    }

    map $limit_api_key $limit_api_rate {
        default 20r/s;
        "premium_key" 100r/s;
        "enterprise_key" 500r/s;
    }

    # Request routing configuration
    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }

    # Server configuration
    server {
        listen 80;
        server_name mariia.pl www.mariia.pl api.mariia.pl cdn.mariia.pl;

        # Connection limits
        limit_conn addr 100;
        limit_conn servers 1000;
        limit_req zone=per_server burst=400 nodelay;

        # SSL redirect
        return 301 https://$server_name$request_uri;
    }

    server {
        listen 443 ssl http2;
        server_name mariia.pl www.mariia.pl;

        # SSL configuration
        ssl_certificate /etc/nginx/ssl/cert.pem;
        ssl_certificate_key /etc/nginx/ssl/key.pem;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384;
        ssl_prefer_server_ciphers off;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;
        ssl_session_tickets off;
        ssl_stapling on;
        ssl_stapling_verify on;
        ssl_trusted_certificate /etc/nginx/ssl/chain.pem;

        # Security limits
        limit_req zone=general burst=100 nodelay;

        # Main application routing
        location / {
            proxy_pass http://app_servers;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port $server_port;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_set_header X-Request-ID $request_id;

            # Connection settings
            proxy_http_version 1.1;
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
            proxy_busy_buffers_size 8k;
            proxy_read_timeout 60s;
            proxy_send_timeout 60s;
            proxy_connect_timeout 30s;

            # Cache settings for HTML
            proxy_cache_valid 200 1h;
            proxy_cache_valid 404 1m;
            add_header X-Cache-Status $upstream_cache_status;
        }

        # API endpoints with dedicated pool and rate limiting
        location /api/ {
            limit_req zone=api burst=50 nodelay;
            limit_req_status 429;

            proxy_pass http://api_servers;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Request-ID $request_id;

            # API-specific timeouts
            proxy_read_timeout 120s;
            proxy_send_timeout 120s;
            proxy_connect_timeout 30s;

            # Disable caching for API
            proxy_no_cache 1;
            proxy_cache_bypass 1;

            # API response headers
            add_header X-API-Version "1.0.0" always;
            add_header X-RateLimit-Limit "1000" always;
            add_header X-RateLimit-Remaining "999" always;
            add_header X-RateLimit-Reset "3600" always;
        }

        # Authentication endpoints with strict rate limiting
        location ~* ^/(auth|login|signin|register|signup|password|reset) {
            limit_req zone=auth burst=10 nodelay;
            limit_req_status 429;

            proxy_pass http://api_servers;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Request-ID $request_id;

            # Shorter timeouts for auth
            proxy_read_timeout 30s;
            proxy_send_timeout 30s;
            proxy_connect_timeout 15s;
        }

        # Static assets with edge caching
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot|map)$ {
            proxy_pass http://static_servers;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Aggressive caching for static assets
            expires 1y;
            add_header Cache-Control "public, immutable, max-age=31536000";
            add_header X-Cache-Status $upstream_cache_status;

            # CORS headers for fonts
            location ~* \.(woff|woff2|ttf|eot)$ {
                add_header Access-Control-Allow-Origin "*";
                add_header Access-Control-Allow-Methods "GET, OPTIONS";
                add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept";
            }
        }

        # Service Worker (no cache)
        location = /sw.js {
            proxy_pass http://app_servers;
            proxy_set_header Host $host;

            expires 0;
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            add_header Pragma "no-cache";
            add_header X-Cache-Status "NO-CACHE";
        }

        # Health check endpoint
        location = /health {
            access_log off;
            proxy_pass http://app_servers;

            # Fast health checks
            proxy_connect_timeout 5s;
            proxy_send_timeout 5s;
            proxy_read_timeout 5s;

            # Cache health check responses briefly
            proxy_cache_valid 200 10s;
            add_header X-Health-Check "OK" always;
        }

        # Nginx status and metrics
        location /nginx_status {
            stub_status on;
            access_log off;
            allow 127.0.0.1;
            allow 10.0.0.0/8;
            allow 172.16.0.0/12;
            allow 192.168.0.0/16;
            deny all;
        }

        # Application metrics
        location /metrics {
            proxy_pass http://app_servers/metrics;
            proxy_set_header Host $host;

            allow 127.0.0.1;
            allow 10.0.0.0/8;
            allow 172.16.0.0/12;
            allow 192.168.0.0/16;
            deny all;
        }

        # Custom error pages
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;

        location = /404.html {
            root /usr/share/nginx/html;
            internal;
        }

        location = /50x.html {
            root /usr/share/nginx/html;
            internal;
        }

        # Security headers
        add_header X-Content-Type-Options nosniff always;
        add_header X-Frame-Options DENY always;
        add_header X-XSS-Protection "1; mode=block" always;
    }

    # Server configuration for API subdomain
    server {
        listen 443 ssl http2;
        server_name api.mariia.pl;

        # SSL configuration (same as main)
        ssl_certificate /etc/nginx/ssl/cert.pem;
        ssl_certificate_key /etc/nginx/ssl/key.pem;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;

        # API-specific rate limiting
        limit_req zone=api burst=100 nodelay;
        limit_conn addr 50;

        location / {
            proxy_pass http://api_servers;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Request-ID $request_id;

            # API-optimized settings
            proxy_read_timeout 120s;
            proxy_send_timeout 120s;
            proxy_connect_timeout 30s;
            proxy_buffering off;

            # API headers
            add_header X-API-Version "1.0.0" always;
            add_header X-Content-Type-Options nosniff always;
        }
    }

    # Server configuration for CDN subdomain
    server {
        listen 443 ssl http2;
        server_name cdn.mariia.pl;

        # SSL configuration
        ssl_certificate /etc/nginx/ssl/cert.pem;
        ssl_certificate_key /etc/nginx/ssl/key.pem;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers off;

        # CDN-specific configuration
        location / {
            proxy_pass http://static_servers;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Maximum caching for CDN
            expires 1y;
            add_header Cache-Control "public, immutable, max-age=31536000";
            add_header X-Cache-Status $upstream_cache_status;
            add_header X-CDN "Nginx-Cache" always;

            # Gzip compression for CDN
            gzip on;
            gzip_vary on;
            gzip_min_length 100;
            gzip_proxied any;
            gzip_comp_level 9;
        }
    }
}