# Base Kubernetes Deployment for Mariia Hub
# =========================================

apiVersion: apps/v1
kind: Deployment
metadata:
  name: mariia-hub-app
  namespace: mariia-hub
  labels:
    app: mariia-hub
    component: app
    tier: frontend
    environment: production
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app: mariia-hub
      component: app
      tier: frontend
  template:
    metadata:
      labels:
        app: mariia-hub
        component: app
        tier: frontend
        environment: production
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/metrics"
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/secrets: {{ include (print $.Template.BasePath "/secrets.yaml") . | sha256sum }}
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        runAsGroup: 1001
        fsGroup: 1001
        seccompProfile:
          type: RuntimeDefault
      containers:
      - name: mariia-hub-app
        image: "mariia-hub:{{ .Values.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 8080
          protocol: TCP
        - name: https
          containerPort: 8443
          protocol: TCP
        env:
        - name: NODE_ENV
          valueFrom:
            configMapKeyRef:
              name: mariia-hub-app-config
              key: NODE_ENV
        - name: APP_NAME
          valueFrom:
            configMapKeyRef:
              name: mariia-hub-app-config
              key: APP_NAME
        - name: APP_VERSION
          valueFrom:
            configMapKeyRef:
              name: mariia-hub-app-config
              key: APP_VERSION
        - name: APP_URL
          valueFrom:
            configMapKeyRef:
              name: mariia-hub-app-config
              key: APP_URL
        - name: DEFAULT_CURRENCY
          valueFrom:
            configMapKeyRef:
              name: mariia-hub-app-config
              key: DEFAULT_CURRENCY
        - name: DEFAULT_LOCALE
          valueFrom:
            configMapKeyRef:
              name: mariia-hub-app-config
              key: DEFAULT_LOCALE
        - name: ENABLE_ANALYTICS
          valueFrom:
            configMapKeyRef:
              name: mariia-hub-app-config
              key: ENABLE_ANALYTICS
        - name: ENABLE_PWA
          valueFrom:
            configMapKeyRef:
              name: mariia-hub-app-config
              key: ENABLE_PWA
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: mariia-hub-app-config
              key: LOG_LEVEL
        - name: SUPABASE_URL
          valueFrom:
            secretKeyRef:
              name: mariia-hub-app-secrets
              key: SUPABASE_URL
        - name: SUPABASE_ANON_KEY
          valueFrom:
            secretKeyRef:
              name: mariia-hub-app-secrets
              key: SUPABASE_ANON_KEY
        - name: STRIPE_PUBLISHABLE_KEY
          valueFrom:
            secretKeyRef:
              name: mariia-hub-app-secrets
              key: STRIPE_PUBLISHABLE_KEY
        - name: GA4_MEASUREMENT_ID
          valueFrom:
            secretKeyRef:
              name: mariia-hub-app-secrets
              key: GA4_MEASUREMENT_ID
        - name: SENTRY_DSN
          valueFrom:
            secretKeyRef:
              name: mariia-hub-app-secrets
              key: SENTRY_DSN
        - name: BUILD_SHA
          value: "{{ .Values.build.sha }}"
        - name: BUILD_DATE
          value: "{{ .Values.build.date }}"
        - name: BUILD_TIME
          value: "{{ .Values.build.time }}"
        resources:
          limits:
            cpu: 500m
            memory: 512Mi
            ephemeral-storage: 1Gi
          requests:
            cpu: 250m
            memory: 256Mi
            ephemeral-storage: 512Mi
        volumeMounts:
        - name: nginx-cache
          mountPath: /var/cache/nginx
        - name: app-logs
          mountPath: /var/log/nginx
        - name: tmp
          mountPath: /tmp
        livenessProbe:
          httpGet:
            path: /health
            port: http
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: http
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          successThreshold: 1
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /health
            port: http
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 30
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false
          capabilities:
            drop:
            - ALL
          runAsNonRoot: true
          runAsUser: 1001
        lifecycle:
          preStop:
            exec:
              command: ["/bin/sh", "-c", "sleep 15"]
      volumes:
      - name: nginx-cache
        persistentVolumeClaim:
          claimName: mariia-hub-nginx-cache-pvc
      - name: app-logs
        persistentVolumeClaim:
          claimName: mariia-hub-app-logs-pvc
      - name: tmp
        emptyDir: {}
      imagePullSecrets:
      - name: registry-secret
      nodeSelector:
        kubernetes.io/os: linux
        kubernetes.io/arch: amd64
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - mariia-hub
                - key: component
                  operator: In
                  values:
                  - app
              topologyKey: kubernetes.io/hostname
          - weight: 50
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - mariia-hub
                - key: component
                  operator: In
                  values:
                  - app
              topologyKey: topology.kubernetes.io/zone
      tolerations:
      - key: "workload"
        operator: "Equal"
        value: "frontend"
        effect: "NoSchedule"
      - key: "dedicated"
        operator: "Equal"
        value: "frontend"
        effect: "NoSchedule"

---
# Service for the Application
apiVersion: v1
kind: Service
metadata:
  name: mariia-hub-app-service
  namespace: mariia-hub
  labels:
    app: mariia-hub
    component: app
    tier: frontend
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "8080"
    prometheus.io/path: "/metrics"
spec:
  type: ClusterIP
  ports:
  - name: http
    port: 80
    targetPort: http
    protocol: TCP
  - name: https
    port: 443
    targetPort: https
    protocol: TCP
  - name: metrics
    port: 9090
    targetPort: 9090
    protocol: TCP
  selector:
    app: mariia-hub
    component: app
    tier: frontend

---
# Horizontal Pod Autoscaler
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: mariia-hub-app-hpa
  namespace: mariia-hub
  labels:
    app: mariia-hub
    component: app
    tier: frontend
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: mariia-hub-app
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
      - type: Pods
        value: 2
        periodSeconds: 60
      selectPolicy: Max

---
# Pod Disruption Budget
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: mariia-hub-app-pdb
  namespace: mariia-hub
  labels:
    app: mariia-hub
    component: app
    tier: frontend
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: mariia-hub
      component: app
      tier: frontend

---
# Network Policy
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: mariia-hub-app-netpol
  namespace: mariia-hub
  labels:
    app: mariia-hub
    component: app
    tier: frontend
spec:
  podSelector:
    matchLabels:
      app: mariia-hub
      component: app
      tier: frontend
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: ingress-nginx
    - namespaceSelector:
        matchLabels:
          name: kube-system
    - podSelector:
        matchLabels:
          app: mariia-hub
    ports:
    - protocol: TCP
      port: 8080
    - protocol: TCP
      port: 8443
  egress:
  - to:
    - podSelector:
        matchLabels:
          app: mariia-hub
          component: postgres
    - podSelector:
        matchLabels:
          app: mariia-hub
          component: redis
    - namespaceSelector:
        matchLabels:
          name: kube-system
    ports:
    - protocol: TCP
      port: 53
    - protocol: UDP
      port: 53
    - protocol: TCP
      port: 443
    - protocol: TCP
      port: 5432
    - protocol: TCP
      port: 6379
  - to: []
    ports:
    - protocol: TCP
      port: 443
    - protocol: TCP
      port: 80