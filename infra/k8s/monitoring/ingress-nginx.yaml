# NGINX Ingress Controller Configuration
# ====================================

apiVersion: networking.k8s.io/v1
kind: IngressClass
metadata:
  name: nginx-external
  labels:
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/component: controller
  annotations:
    ingressclass.kubernetes.io/is-default-class: "true"
    ingressclass.kubernetes.io/allowed-namespace-routes: "mariia-hub,mariia-hub-staging"
spec:
  controller: k8s.io/ingress-nginx
  parameters:
    apiGroup: networking.k8s.io
    kind: IngressClassParameters
    name: nginx-external-parameters
---
apiVersion: networking.k8s.io/v1
kind: IngressClassParameters
metadata:
  name: nginx-external-parameters
  labels:
    app.kubernetes.io/name: ingress-nginx
spec:
  # Custom parameters for external ingress
  # Add any custom configuration here
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: mariia-hub-ingress
  namespace: mariia-hub
  labels:
    app: mariia-hub
    component: ingress
    environment: production
  annotations:
    # SSL/TLS Configuration
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    cert-manager.io/private-key-rotation-policy: "Always"
    cert-manager.io/private-key-algorithm: "ECDSA"
    cert-manager.io/private-key-size: "256"

    # NGINX Configuration
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/ssl-protocols: "TLSv1.2 TLSv1.3"
    nginx.ingress.kubernetes.io/ssl-ciphers: "ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384"
    nginx.ingress.kubernetes.io/ssl-prefer-server-ciphers: "true"

    # Performance and Security Headers
    nginx.ingress.kubernetes.io/configuration-snippet: |
      more_set_headers "X-Frame-Options: SAMEORIGIN";
      more_set_headers "X-Content-Type-Options: nosniff";
      more_set_headers "X-XSS-Protection: 1; mode=block";
      more_set_headers "Referrer-Policy: strict-origin-when-cross-origin";
      more_set_headers "Strict-Transport-Security: max-age=31536000; includeSubDomains; preload";
      more_set_headers "Content-Security-Policy: default-src 'self'; script-src 'self' 'unsafe-inline' https://www.googletagmanager.com https://www.google-analytics.com https://js.stripe.com; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; img-src 'self' data: https:; font-src 'self' data: https://fonts.gstatic.com; connect-src 'self' https://api.stripe.com https://*.supabase.co https://www.google-analytics.com; frame-src 'self' https://js.stripe.com;";

    # Rate Limiting
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
    nginx.ingress.kubernetes.io/rate-limit-connections: "50"
    nginx.ingress.kubernetes.io/rate-limit-connections-burst: "100"

    # Request Size and Timeout
    nginx.ingress.kubernetes.io/proxy-body-size: "10m"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "30"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-buffering: "on"
    nginx.ingress.kubernetes.io/proxy-buffer-size: "8k"

    # Caching Configuration
    nginx.ingress.kubernetes.io/proxy-cache-method: "GET,HEAD"
    nginx.ingress.kubernetes.io/proxy-cache-bypass: "$http_pragma $http_authorization"
    nginx.ingress.kubernetes.io/proxy-no-cache: "$http_pragma $http_authorization"

    # Compression
    nginx.ingress.kubernetes.io/enable-modsecurity: "true"
    nginx.ingress.kubernetes.io/modsecurity-snippet: |
      SecRuleEngine On
      SecRequestBodyAccess On
      SecResponseBodyAccess On
      SecResponseBodyMimeType text/plain text/html text/xml application/json

    # Custom Error Pages
    nginx.ingress.kubernetes.io/custom-http-errors: "404,502,503,504"
    nginx.ingress.kubernetes.io/default-backend: "http-error-pages"

    # Load Balancing
    nginx.ingress.kubernetes.io/load-balance: "round_robin"
    nginx.ingress.kubernetes.io/upstream-hash-by: "$request_uri"

    # Health Checks
    nginx.ingress.kubernetes.io/healthcheck-path: "/health"
    nginx.ingress.kubernetes.io/healthcheck-port: "8080"
    nginx.ingress.kubernetes.io/healthcheck-interval: "10s"
    nginx.ingress.kubernetes.io/healthcheck-timeout: "5s"
    nginx.ingress.kubernetes.io/healthcheck-failure-threshold: "3"
    nginx.ingress.kubernetes.io/healthcheck-success-threshold: "1"

    # Session Affinity
    nginx.ingress.kubernetes.io/affinity: "cookie"
    nginx.ingress.kubernetes.io/session-cookie-name: "mariia-hub-affinity"
    nginx.ingress.kubernetes.io/session-cookie-max-age: "3600"
    nginx.ingress.kubernetes.io/session-cookie-path: "/"

    # WebSocket Support
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "60"

    # Backend Protocol
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
    nginx.ingress.kubernetes.io/upstream-keepalive-connections: "100"
    nginx.ingress.kubernetes.io/upstream-keepalive-timeout: "60"
    nginx.ingress.kubernetes.io/upstream-keepalive-requests: "100"

    # Client Settings
    nginx.ingress.kubernetes.io/client-max-body-size: "10m"
    nginx.ingress.kubernetes.io/client-body-buffer-size: "16k"
    nginx.ingress.kubernetes.io/client-header-buffer-size: "1k"
    nginx.ingress.kubernetes.io/large-client-header-buffers: "4 8k"
    nginx.ingress.kubernetes.io/client-body-timeout: "60"
    nginx.ingress.kubernetes.io/client-header-timeout: "60"
    nginx.ingress.kubernetes.io/keepalive-requests: "100"
    nginx.ingress.kubernetes.io/keepalive-timeout: "65"

    # Logging
    nginx.ingress.kubernetes.io/log-format-upstream: |
      {
        "timestamp": "$time_iso8601",
        "remote_addr": "$remote_addr",
        "remote_user": "$remote_user",
        "request_id": "$request_id",
        "request_method": "$request_method",
        "request_uri": "$request_uri",
        "request_protocol": "$server_protocol",
        "host": "$host",
        "request_time": "$request_time",
        "upstream_addr": "$upstream_addr",
        "upstream_status": "$upstream_status",
        "upstream_response_time": "$upstream_response_time",
        "upstream_connect_time": "$upstream_connect_time",
        "status": "$status",
        "body_bytes_sent": "$body_bytes_sent",
        "http_referer": "$http_referer",
        "http_user_agent": "$http_user_agent",
        "http_x_forwarded_for": "$http_x_forwarded_for",
        "http_x_forwarded_proto": "$http_x_forwarded_proto",
        "http_x_forwarded_host": "$http_x_forwarded_host",
        "http_x_forwarded_port": "$http_x_forwarded_port",
        "http_x_request_id": "$http_x_request_id",
        "http_x_real_ip": "$http_x_real_ip",
        "http_x_scheme": "$http_x_scheme",
        "http_cookie": "$http_cookie",
        "gzip_ratio": "$gzip_ratio"
      }

    # CORS Configuration
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-origin: "*"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, PUT, DELETE, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-headers: "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization"
    nginx.ingress.kubernetes.io/cors-expose-headers: "Content-Length,Content-Range"
    nginx.ingress.kubernetes.io/cors-max-age: "86400"

    # Rewrites
    nginx.ingress.kubernetes.io/rewrite-target: "/$1"
    nginx.ingress.kubernetes.io/use-regex: "true"

    # Authentication (if needed)
    # nginx.ingress.kubernetes.io/auth-type: basic
    # nginx.ingress.kubernetes.io/auth-secret: basic-auth
    # nginx.ingress.kubernetes.io/auth-realm: "Authentication Required"

    # Proxy settings for API
    nginx.ingress.kubernetes.io/proxy-set-headers: "mariia-hub-proxy-headers"

    # Limit connections
    nginx.ingress.kubernetes.io/limit-connections: "100"
    nginx.ingress.kubernetes.io/limit-rps: "50"
    nginx.ingress.kubernetes.io/limit-burst: "100"

    # Service discovery
    nginx.ingress.kubernetes.io/service-upstream: "true"

    # Backend timeouts
    nginx.ingress.kubernetes.io/proxy-next-upstream: "error timeout http_502 http_503 http_504"
    nginx.ingress.kubernetes.io/proxy-next-upstream-tries: "3"
    nginx.ingress.kubernetes.io/proxy-next-upstream-timeout: "30"
    nginx.ingress.kubernetes.io/proxy-intercept-errors: "true"

    # ModSecurity
    nginx.ingress.kubernetes.io/enable-owasp-modsecurity-crs: "true"
    nginx.ingress.kubernetes.io/modsecurity-transaction-id: "$request_id"
spec:
  ingressClassName: nginx-external
  tls:
  - hosts:
    - mariaborysevych.com
    - www.mariaborysevych.com
    - api.mariaborysevych.com
    secretName: mariia-hub-tls
  rules:
  - host: mariaborysevych.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: mariia-hub-app-service
            port:
              number: 80
      - path: /api/(.*)
        pathType: ImplementationSpecific
        backend:
          service:
            name: mariia-hub-app-service
            port:
              number: 80
  - host: www.mariaborysevych.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: mariia-hub-app-service
            port:
              number: 80
  - host: api.mariaborysevych.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: mariia-hub-app-service
            port:
              number: 80

---
# Staging Ingress Configuration
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: mariia-hub-staging-ingress
  namespace: mariia-hub-staging
  labels:
    app: mariia-hub
    component: ingress
    environment: staging
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-staging"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/rate-limit: "50"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      more_set_headers "X-Robots-Tag: noindex, nofollow";
spec:
  ingressClassName: nginx-external
  tls:
  - hosts:
    - staging.mariaborysevych.com
    secretName: mariia-hub-staging-tls
  rules:
  - host: staging.mariaborysevych.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: mariia-hub-app-service
            port:
              number: 80

---
# Error Pages Backend
apiVersion: v1
kind: Service
metadata:
  name: http-error-pages
  namespace: mariia-hub
  labels:
    app: http-error-pages
    component: backend
spec:
  selector:
    app: http-error-pages
  ports:
  - port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: http-error-pages
  namespace: mariia-hub
  labels:
    app: http-error-pages
    component: backend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: http-error-pages
  template:
    metadata:
      labels:
        app: http-error-pages
    spec:
      containers:
      - name: nginx
        image: nginxinc/nginx-unprivileged:alpine
        ports:
        - containerPort: 8080
        volumeMounts:
        - name: error-pages
          mountPath: /usr/share/nginx/html
        resources:
          requests:
            memory: "32Mi"
            cpu: "50m"
          limits:
            memory: "64Mi"
            cpu: "100m"
      volumes:
      - name: error-pages
        configMap:
          name: http-error-pages
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: http-error-pages
  namespace: mariia-hub
  labels:
    app: http-error-pages
data:
  404.html: |
    <!DOCTYPE html>
    <html lang="en">
    <head>
      <meta charset="UTF-8">
      <meta name="viewport" content="width=device-width, initial-scale=1.0">
      <title>Page Not Found - Mariia Hub</title>
      <style>
        body { font-family: Arial, sans-serif; text-align: center; padding: 50px; background: #f5f5f5; }
        h1 { color: #8B4513; }
        .logo { font-size: 2em; color: #8B4513; }
      </style>
    </head>
    <body>
      <div class="logo">Mariia Hub</div>
      <h1>404 - Page Not Found</h1>
      <p>The page you're looking for doesn't exist.</p>
      <a href="/">Go back home</a>
    </body>
    </html>
  502.html: |
    <!DOCTYPE html>
    <html lang="en">
    <head>
      <meta charset="UTF-8">
      <meta name="viewport" content="width=device-width, initial-scale=1.0">
      <title>Service Unavailable - Mariia Hub</title>
      <style>
        body { font-family: Arial, sans-serif; text-align: center; padding: 50px; background: #f5f5f5; }
        h1 { color: #8B4513; }
        .logo { font-size: 2em; color: #8B4513; }
      </style>
    </head>
    <body>
      <div class="logo">Mariia Hub</div>
      <h1>502 - Service Unavailable</h1>
      <p>We're experiencing technical difficulties. Please try again later.</p>
      <a href="/">Go back home</a>
    </body>
    </html>
  503.html: |
    <!DOCTYPE html>
    <html lang="en">
    <head>
      <meta charset="UTF-8">
      <meta name="viewport" content="width=device-width, initial-scale=1.0">
      <title>Service Temporarily Unavailable - Mariia Hub</title>
      <style>
        body { font-family: Arial, sans-serif; text-align: center; padding: 50px; background: #f5f5f5; }
        h1 { color: #8B4513; }
        .logo { font-size: 2em; color: #8B4513; }
      </style>
    </head>
    <body>
      <div class="logo">Mariia Hub</div>
      <h1>503 - Service Temporarily Unavailable</h1>
      <p>We're performing maintenance. Please try again later.</p>
      <a href="/">Go back home</a>
    </body>
    </html>
  504.html: |
    <!DOCTYPE html>
    <html lang="en">
    <head>
      <meta charset="UTF-8">
      <meta name="viewport" content="width=device-width, initial-scale=1.0">
      <title>Gateway Timeout - Mariia Hub</title>
      <style>
        body { font-family: Arial, sans-serif; text-align: center; padding: 50px; background: #f5f5f5; }
        h1 { color: #8B4513; }
        .logo { font-size: 2em; color: #8B4513; }
      </style>
    </head>
    <body>
      <div class="logo">Mariia Hub</div>
      <h1>504 - Gateway Timeout</h1>
      <p>The server is taking too long to respond. Please try again later.</p>
      <a href="/">Go back home</a>
    </body>
    </html>