# Redis Configuration for Production High-Performance Caching
# Optimized for high-traffic booking platform

# NETWORK SETTINGS
# -----------------
bind 0.0.0.0
port 6379
timeout 0
tcp-keepalive 300
tcp-backlog 511

# MEMORY MANAGEMENT
# -----------------
maxmemory 512mb
maxmemory-policy allkeys-lru
maxmemory-samples 5
hash-max-ziplist-entries 512
hash-max-ziplist-value 64
list-max-ziplist-size -2
list-compress-depth 0
set-max-intset-entries 512
zset-max-ziplist-entries 128
zset-max-ziplist-value 64
hll-sparse-max-bytes 3000
stream-node-max-bytes 4096
stream-node-max-entries 100

# PERSISTENCE SETTINGS
# --------------------
save 900 1
save 300 10
save 60 10000
stop-writes-on-bgsave-error yes
rdbcompression yes
rdbchecksum yes
dbfilename dump.rdb
rdb-del-sync-files no
dir /data

# APPEND ONLY FILE (AOF)
# -----------------------
appendonly yes
appendfilename "appendonly.aof"
appendfsync everysec
no-appendfsync-on-rewrite no
auto-aof-rewrite-percentage 100
auto-aof-rewrite-min-size 64mb
aof-load-truncated yes
aof-use-rdb-preamble yes

# LOGGING SETTINGS
# -----------------
loglevel notice
logfile ""
syslog-enabled no
syslog-ident redis
syslog-facility local0

# REPLICATION SETTINGS
# -------------------
replica-serve-stale-data yes
replica-read-only yes
repl-diskless-sync no
repl-diskless-load disabled
repl-diskless-sync-delay 5
repl-ping-replica-period 10
repl-timeout 60
repl-disable-tcp-nodelay no
repl-backlog-size 1mb
repl-backlog-ttl 3600
replica-priority 100
min-replicas-to-write 0
min-replicas-max-lag 10

# SECURITY SETTINGS
# ------------------
# WARNING: requirepass should be set via environment variable
# requirepass REDIS_PASSWORD_HERE
rename-command FLUSH ""
rename-command FLUSHALL ""
rename-command KEYS ""
rename-command DEBUG ""
rename-command CONFIG "CONFIG-b8353a9c3d4e8f8"
rename-command SHUTDOWN REDIS_SHUTDOWN_CMD
rename-command BGSAVE REDIS_BGSAVE_CMD

# CLIENT SETTINGS
# -----------------
maxclients 10000
tcp-keepalive 300
tcp-backlog 511

# MEMORY TUNING FOR SPECIFIC USE CASES
# -----------------------------------
# Session cache (LRU)
mariia_session_cache_ttl 3600
mariia_session_cache_max_size 100000

# API response cache (volatile)
mariia_api_cache_ttl 300
mariia_api_cache_max_size 50000

# Booking cache (persistent)
mariia_booking_cache_ttl 86400
mariia_booking_cache_max_size 20000

# Product catalog cache (long TTL)
mariia_catalog_cache_ttl 7200
mariia_catalog_cache_max_size 10000

# PERFORMANCE TUNING
# -------------------
# CPU affinity (if Redis is the only process)
# Uncomment on dedicated Redis servers
# taskset -c 0-3 redis-server /etc/redis/redis.conf

# I/O settings
io-threads 4
io-threads-do-reads yes

# Lazy freeing
lazyfree-lazy-eviction yes
lazyfree-lazy-expire yes
lazyfree-lazy-server-del yes

# CLIENT OUTPUT BUFFER LIMITS
# -------------------------
client-output-buffer-limit normal 0 0 0
client-output-buffer-limit replica 256mb 64mb 60
client-output-buffer-limit pubsub 32mb 8mb 60

# SLOW LOG SETTINGS
# -----------------
slowlog-log-slower-than 10000
slowlog-max-len 128

# LATENCY MONITOR
# ---------------
latency-monitor-threshold 100

# MEMORY USAGE REPORTING
# ---------------------
memory-usage-factor 1.0

# MODULES
# -------
# Load RedisJSON for complex data structures
# loadmodule /opt/redisjson.so

# Load RedisTimeSeries for time-series data
# loadmodule /opt/redistimeseries.so

# Load RedisSearch for search capabilities
# loadmodule /opt/redisearch.so

# CLUSTER MODE (for future scaling)
# -------------------------------
# Uncomment to enable cluster mode
# cluster-enabled yes
# cluster-config-file nodes.conf
# cluster-node-timeout 15000
# cluster-announce-ip 10.0.11.10
# cluster-announce-port 6379
# cluster-announce-bus-port 16379

# FORKED PROCESS MANAGEMENT
# -------------------------
# Run Redis as non-root user
# user redis
# group redis

# WORKER THREADS (Redis 6+)
# --------------------------
# Set based on available CPU cores
# 2x number of physical cores is good for most workloads

# LIMITS AND CONSTRAINTS
# -----------------------
# Limit maximum command execution time (in microseconds)
timeout-milliseconds 5000

# PROTECTED MODE (disable in production with proper firewall)
protected-mode no

# VIRTUAL MEMORY (deprecated in recent Redis versions)
# -----------------------------------------------
# vm-enabled no

# ADVANCED CONFIGURATION
# -----------------------
# Hash table size (power of 2)
hash-max-ziplist-entries 512

# HyperLogLog sparse representation maximum bytes
hll-sparse-max-bytes 3000

# Stream node maximum bytes
stream-node-max-bytes 4096

# Stream node maximum entries
stream-node-max-entries 100

# BUSINESS LOGIC CONFIGURATION
# ---------------------------
# Session management
mariia-session-prefix "session:"
mariia-session-ttl 3600
mariia-session-key-pattern "session:user:*"
mariia-session-max-connections 1000

# Cache invalidation patterns
mariia-invalidation-key "cache_invalidate"
mariia-invalidation-channel "cache_updates"
mariia-invalidation-pattern "cache:*"

# Booking state management
mariia-booking-prefix "booking:"
mariia-booking-ttl 1800
mariia-booking-locks-ttl 300

# User preferences cache
mariia-user-pref-prefix "user_pref:"
mariia-user-pref-ttl 7200

# Analytics cache
mariia-analytics-prefix "analytics:"
mariia-analytics-ttl 86400

# Rate limiting
mariia-rate-limit-prefix "rate_limit:"
mariia-rate-limit-window 60
mariia-rate-limit-max 100

# Geographic distribution cache
mariia-geo-prefix "geo:"
mariia-geo-ttl 86400

# Service availability cache
mariia-availability-prefix "availability:"
mariia-availability-ttl 60

# Price calculation cache
mariia-pricing-prefix "pricing:"
mariia-pricing-ttl 3600

# COMPRESSION
# ----------
# Enable compression for certain data types
compression-level 6

# CLIENT-SIDE CACHING
# -------------------
# ETag generation for cache validation
mariia-etag-enabled yes
mariia-etag-ttl 300

# CLUSTER CONFIGURATION (for future Redis Cluster)
# -----------------------------------------
# Uncomment when ready to implement Redis Cluster
# cluster-enabled yes
# cluster-config-file nodes.conf
# cluster-node-timeout 15000
# cluster-require-full-coverage yes
# cluster-migration-barrier 1
# cluster-node-timeout 5000
# cluster-replica-validity-factor 10
# cluster-replica-no-failover no
# cluster-slave-validity-factor 10
# cluster-min-slaves-to-write 1
# cluster-allow-reads-on-replica yes

# MONITORING AND DIAGNOSTICS
# ---------------------------
# Enable INFO command sections
# default: server, clients, memory, persistence, stats, replication, cpu, keyspace, commandstats, cluster, module
# mariia-specific: info-sections "server,memory,persistence,stats,replication"

# Enable CLIENT LIST with detailed information
# client-query-buffer-limit 1gb

# Enable memory usage profiling
# memory-profiler-enabled yes
# memory-profiler-sampling-ratio 100

# Custom info commands for business monitoring
# This would be implemented via Redis modules or Lua scripts