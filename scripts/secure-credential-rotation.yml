---
# Secure Credential Rotation Procedures
# This document outlines the procedures for secure credential rotation
# and audit logging for the Mariia Hub platform.

name: "Secure Credential Rotation Procedures"
description: "Comprehensive procedures for rotating and auditing production credentials"
version: "1.0.0"
last_updated: "2025-01-26"

# Credential Categories and Rotation Schedules
credential_categories:
  api_keys:
    stripe_publishable_key:
      rotation_frequency: "annually"
      rotation_procedure: "stripe_publishable_key_rotation"
      emergency_rotation: true
      audit_required: true

    stripe_secret_key:
      rotation_frequency: "quarterly"
      rotation_procedure: "stripe_secret_key_rotation"
      emergency_rotation: true
      audit_required: true

    supabase_keys:
      rotation_frequency: "annually"
      rotation_procedure: "supabase_key_rotation"
      emergency_rotation: true
      audit_required: true

  third_party_integrations:
    resend_api_key:
      rotation_frequency: "semi-annually"
      rotation_procedure: "resend_key_rotation"
      emergency_rotation: true
      audit_required: true

    google_apis:
      rotation_frequency: "annually"
      rotation_procedure: "google_api_rotation"
      emergency_rotation: true
      audit_required: true

    social_media_tokens:
      rotation_frequency: "quarterly"
      rotation_procedure: "social_token_rotation"
      emergency_rotation: true
      audit_required: true

  internal_services:
    database_credentials:
      rotation_frequency: "quarterly"
      rotation_procedure: "database_credential_rotation"
      emergency_rotation: true
      audit_required: true

# Rotation Procedures
rotation_procedures:
  stripe_publishable_key_rotation:
    description: "Rotate Stripe publishable key"
    prerequisites:
      - "Valid Stripe account with admin access"
      - "Access to production environment variables"
      - "Approved change request"
    steps:
      1:
        action: "Login to Stripe Dashboard"
        details: "Navigate to Developers > API keys"
      2:
        action: "Create new publishable key"
        details: "Click 'Create new key' and select 'Live mode'"
      3:
        action: "Update application configuration"
        details: "Update VITE_STRIPE_PUBLISHABLE_KEY in production environment"
      4:
        action: "Test payment flow"
        details: "Verify payment processing works with new key"
      5:
        action: "Deploy to production"
        details: "Deploy updated configuration"
      6:
        action: "Monitor for 24 hours"
        details: "Watch for any payment failures"
      7:
        action: "Deactivate old key"
        details: "Only after confirming everything works"
    rollback_plan:
      - "Revert to previous publishable key"
      - "Verify payment functionality"
      - "Deploy reverted configuration"
    risk_level: "medium"
    downtime_required: false

  stripe_secret_key_rotation:
    description: "Rotate Stripe secret key (high security impact)"
    prerequisites:
      - "Valid Stripe account with admin access"
      - "Webhook endpoint URLs"
      - "Access to production environment variables"
      - "Approved change request with security team approval"
    steps:
      1:
        action: "Login to Stripe Dashboard"
        details: "Navigate to Developers > API keys"
      2:
        action: "Create new secret key"
        details: "Click 'Create new key' and select 'Live mode'"
      3:
        action: "Update webhook endpoints"
        details: "Configure webhooks to use new secret key"
      4:
        action: "Update backend configuration"
        details: "Update STRIPE_SECRET_KEY in production"
      5:
        action: "Update webhook secret"
        details: "Update STRIPE_WEBHOOK_SECRET in production"
      6:
        action: "Test payment flow end-to-end"
        details: "Verify payments, webhooks, and refunds work"
      7:
        action: "Deploy to production"
        details: "Deploy updated configuration"
      8:
        action: "Monitor for 48 hours"
        details: "Watch for payment and webhook failures"
      9:
        action: "Deactivate old key"
        details: "Only after confirming everything works"
    rollback_plan:
      - "Revert to previous secret key"
      - "Revert webhook secret"
      - "Verify payment and webhook functionality"
      - "Deploy reverted configuration"
    risk_level: "high"
    downtime_required: false

  supabase_key_rotation:
    description: "Rotate Supabase project keys"
    prerequisites:
      - "Supabase admin access"
      - "Access to production environment variables"
      - "Approved change request"
    steps:
      1:
        action: "Login to Supabase Dashboard"
        details: "Navigate to Settings > API"
      2:
        action: "Generate new service key"
        details: "Create new service role key"
      3:
        action: "Update publishable key if needed"
        details: "Generate new anon/public key"
      4:
        action: "Update application configuration"
        details: "Update all Supabase environment variables"
      5:
        action: "Test database connections"
        details: "Verify authentication and database access"
      6:
        action: "Deploy to production"
        details: "Deploy updated configuration"
      7:
        action: "Monitor for 24 hours"
        details: "Watch for database connection issues"
      8:
        action: "Delete old keys"
        details: "Only after confirming everything works"
    rollback_plan:
      - "Revert to previous Supabase keys"
      - "Verify database functionality"
      - "Deploy reverted configuration"
    risk_level: "high"
    downtime_required: false

  resend_key_rotation:
    description: "Rotate Resend API key"
    prerequisites:
      - "Resend dashboard access"
      - "Access to production environment variables"
      - "Approved change request"
    steps:
      1:
        action: "Login to Resend Dashboard"
        details: "Navigate to API Keys section"
      2:
        action: "Create new API key"
        details: "Generate new API key with appropriate permissions"
      3:
        action: "Update application configuration"
        details: "Update RESEND_API_KEY in production"
      4:
        action: "Test email functionality"
        details: "Send test emails to verify functionality"
      5:
        action: "Deploy to production"
        details: "Deploy updated configuration"
      6:
        action: "Monitor for 12 hours"
        details: "Watch for email delivery failures"
      7:
        action: "Delete old API key"
        details: "Only after confirming everything works"
    rollback_plan:
      - "Revert to previous API key"
      - "Test email functionality"
      - "Deploy reverted configuration"
    risk_level: "low"
    downtime_required: false

# Emergency Rotation Procedures
emergency_rotation:
  criteria:
    suspected_compromise:
      - "Unusual API usage patterns"
      - "Unauthorized access attempts"
      - "Security breach notifications"
      - "Unexpected error rates"

    system_alerts:
      - "Rate limiting exceeded"
      - "Authentication failures"
      - "Suspicious webhook failures"

  procedure:
    immediate_actions:
      1:
        action: "Activate incident response"
        details: "Notify security team and stakeholders"
      2:
        action: "Rotate all potentially compromised keys"
        details: "Generate new keys immediately"
      3:
        action: "Update all configurations"
        details: "Deploy new credentials"
      4:
        action: "Monitor system closely"
        details: "Watch for continued suspicious activity"

    post_rotation:
      1:
        action: "Conduct security audit"
        details: "Investigate root cause of compromise"
      2:
        action: "Update security procedures"
        details: "Based on lessons learned"
      3:
        action: "Review access logs"
        details: "Identify unauthorized access"

# Audit Logging Configuration
audit_logging:
  enabled: true
  retention_period: "2 years"
  log_types:
    - "credential_access"
    - "credential_rotation"
    - "configuration_changes"
    - "authentication_events"
    - "api_key_usage"

  log_format:
    timestamp: "ISO 8601"
    user_id: "authenticated user identifier"
    action: "performed action"
    resource: "affected resource"
    result: "success/failure"
    ip_address: "source IP"
    user_agent: "client user agent"

  storage:
    primary: "secure log storage system"
    backup: "encrypted backup storage"
    encryption: "AES-256 encryption at rest"

  monitoring:
    real_time_alerts: true
    anomaly_detection: true
    compliance_reports: "monthly"

# Compliance Requirements
compliance:
  gdpr:
    data_protection: "All credential data encrypted"
    audit_trail: "Complete audit trail maintained"
    retention_policy: "2 years maximum retention"

  pci_dss:
    key_storage: "Secure key storage required"
    access_control: "Role-based access control"
    encryption: "Transport and at rest encryption"

  iso_27001:
    risk_management: "Regular risk assessments"
    incident_response: "Documented procedures"
    business_continuity: "Backup and recovery procedures"

# Automation Scripts
automation_scripts:
  credential_health_check:
    description: "Automated health check for all credentials"
    schedule: "daily"
    checks:
      - "API key expiration warnings"
      - "Unusual usage patterns"
      - "Failed authentication attempts"
      - "Certificate expiration warnings"

  rotation_scheduler:
    description: "Schedule and track credential rotations"
    schedule: "weekly"
    actions:
      - "Check upcoming rotations"
      - "Notify responsible teams"
      - "Generate rotation tickets"
      - "Track rotation completion"

# Contact Information
contacts:
  security_team:
    email: "security@mariia-hub.com"
    on_call: "+48-XXX-XXX-XXX"
    escalation: "cto@mariia-hub.com"

  devops_team:
    email: "devops@mariia-hub.com"
    on_call: "+48-XXX-XXX-XXX"

  compliance_officer:
    email: "compliance@mariia-hub.com"

# Documentation Requirements
documentation:
  change_log: "Maintain detailed change log for all rotations"
  runbooks: "Update runbooks after each rotation"
  training: "Annual security training for all team members"
  review: "Quarterly review of all procedures"